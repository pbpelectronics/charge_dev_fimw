   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f10x_rcc.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.data.APBAHBPrescTable,"aw",%progbits
  19              		.align	2
  22              	APBAHBPrescTable:
  23 0000 00       		.byte	0
  24 0001 00       		.byte	0
  25 0002 00       		.byte	0
  26 0003 00       		.byte	0
  27 0004 01       		.byte	1
  28 0005 02       		.byte	2
  29 0006 03       		.byte	3
  30 0007 04       		.byte	4
  31 0008 01       		.byte	1
  32 0009 02       		.byte	2
  33 000a 03       		.byte	3
  34 000b 04       		.byte	4
  35 000c 06       		.byte	6
  36 000d 07       		.byte	7
  37 000e 08       		.byte	8
  38 000f 09       		.byte	9
  39              		.section	.data.ADCPrescTable,"aw",%progbits
  40              		.align	2
  43              	ADCPrescTable:
  44 0000 02       		.byte	2
  45 0001 04       		.byte	4
  46 0002 06       		.byte	6
  47 0003 08       		.byte	8
  48              		.section	.text.RCC_DeInit,"ax",%progbits
  49              		.align	2
  50              		.global	RCC_DeInit
  51              		.thumb
  52              		.thumb_func
  54              	RCC_DeInit:
  55              	.LFB29:
  56              		.file 1 "../libs/StdPeripheralDriver/src/stm32f10x_rcc.c"
   1:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
   2:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   ******************************************************************************
   3:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @file    stm32f10x_rcc.c
   4:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @author  MCD Application Team
   5:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @version V3.5.0
   6:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @date    11-March-2011
   7:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief   This file provides all the RCC firmware functions.
   8:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   ******************************************************************************
   9:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @attention
  10:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *
  11:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  12:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  13:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  14:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  15:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  16:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  17:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *
  18:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  19:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   ******************************************************************************
  20:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
  21:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
  22:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /* Includes ------------------------------------------------------------------*/
  23:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #include "stm32f10x_rcc.h"
  24:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
  25:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /** @addtogroup STM32F10x_StdPeriph_Driver
  26:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @{
  27:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
  28:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
  29:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /** @defgroup RCC 
  30:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief RCC driver modules
  31:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @{
  32:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */ 
  33:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
  34:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /** @defgroup RCC_Private_TypesDefinitions
  35:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @{
  36:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
  37:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
  38:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
  39:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @}
  40:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
  41:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
  42:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /** @defgroup RCC_Private_Defines
  43:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @{
  44:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
  45:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
  46:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /* ------------ RCC registers bit address in the alias region ----------- */
  47:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define RCC_OFFSET                (RCC_BASE - PERIPH_BASE)
  48:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
  49:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /* --- CR Register ---*/
  50:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
  51:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /* Alias word address of HSION bit */
  52:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CR_OFFSET                 (RCC_OFFSET + 0x00)
  53:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define HSION_BitNumber           0x00
  54:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CR_HSION_BB               (PERIPH_BB_BASE + (CR_OFFSET * 32) + (HSION_BitNumber * 4))
  55:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
  56:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /* Alias word address of PLLON bit */
  57:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define PLLON_BitNumber           0x18
  58:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CR_PLLON_BB               (PERIPH_BB_BASE + (CR_OFFSET * 32) + (PLLON_BitNumber * 4))
  59:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
  60:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
  61:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****  /* Alias word address of PLL2ON bit */
  62:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****  #define PLL2ON_BitNumber          0x1A
  63:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****  #define CR_PLL2ON_BB              (PERIPH_BB_BASE + (CR_OFFSET * 32) + (PLL2ON_BitNumber * 4))
  64:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
  65:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****  /* Alias word address of PLL3ON bit */
  66:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****  #define PLL3ON_BitNumber          0x1C
  67:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****  #define CR_PLL3ON_BB              (PERIPH_BB_BASE + (CR_OFFSET * 32) + (PLL3ON_BitNumber * 4))
  68:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
  69:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
  70:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /* Alias word address of CSSON bit */
  71:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CSSON_BitNumber           0x13
  72:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CR_CSSON_BB               (PERIPH_BB_BASE + (CR_OFFSET * 32) + (CSSON_BitNumber * 4))
  73:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
  74:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /* --- CFGR Register ---*/
  75:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
  76:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /* Alias word address of USBPRE bit */
  77:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CFGR_OFFSET               (RCC_OFFSET + 0x04)
  78:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
  79:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #ifndef STM32F10X_CL
  80:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****  #define USBPRE_BitNumber          0x16
  81:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****  #define CFGR_USBPRE_BB            (PERIPH_BB_BASE + (CFGR_OFFSET * 32) + (USBPRE_BitNumber * 4))
  82:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #else
  83:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****  #define OTGFSPRE_BitNumber        0x16
  84:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****  #define CFGR_OTGFSPRE_BB          (PERIPH_BB_BASE + (CFGR_OFFSET * 32) + (OTGFSPRE_BitNumber * 4))
  85:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
  86:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
  87:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /* --- BDCR Register ---*/
  88:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
  89:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /* Alias word address of RTCEN bit */
  90:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define BDCR_OFFSET               (RCC_OFFSET + 0x20)
  91:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define RTCEN_BitNumber           0x0F
  92:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define BDCR_RTCEN_BB             (PERIPH_BB_BASE + (BDCR_OFFSET * 32) + (RTCEN_BitNumber * 4))
  93:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
  94:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /* Alias word address of BDRST bit */
  95:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define BDRST_BitNumber           0x10
  96:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define BDCR_BDRST_BB             (PERIPH_BB_BASE + (BDCR_OFFSET * 32) + (BDRST_BitNumber * 4))
  97:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
  98:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /* --- CSR Register ---*/
  99:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 100:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /* Alias word address of LSION bit */
 101:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CSR_OFFSET                (RCC_OFFSET + 0x24)
 102:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define LSION_BitNumber           0x00
 103:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CSR_LSION_BB              (PERIPH_BB_BASE + (CSR_OFFSET * 32) + (LSION_BitNumber * 4))
 104:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 105:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
 106:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /* --- CFGR2 Register ---*/
 107:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 108:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****  /* Alias word address of I2S2SRC bit */
 109:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****  #define CFGR2_OFFSET              (RCC_OFFSET + 0x2C)
 110:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****  #define I2S2SRC_BitNumber         0x11
 111:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****  #define CFGR2_I2S2SRC_BB          (PERIPH_BB_BASE + (CFGR2_OFFSET * 32) + (I2S2SRC_BitNumber * 4))
 112:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 113:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****  /* Alias word address of I2S3SRC bit */
 114:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****  #define I2S3SRC_BitNumber         0x12
 115:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****  #define CFGR2_I2S3SRC_BB          (PERIPH_BB_BASE + (CFGR2_OFFSET * 32) + (I2S3SRC_BitNumber * 4))
 116:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */
 117:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 118:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /* ---------------------- RCC registers bit mask ------------------------ */
 119:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 120:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /* CR register bit mask */
 121:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CR_HSEBYP_Reset           ((uint32_t)0xFFFBFFFF)
 122:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CR_HSEBYP_Set             ((uint32_t)0x00040000)
 123:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CR_HSEON_Reset            ((uint32_t)0xFFFEFFFF)
 124:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CR_HSEON_Set              ((uint32_t)0x00010000)
 125:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CR_HSITRIM_Mask           ((uint32_t)0xFFFFFF07)
 126:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 127:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /* CFGR register bit mask */
 128:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL) || defined 
 129:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****  #define CFGR_PLL_Mask            ((uint32_t)0xFFC2FFFF)
 130:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #else
 131:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****  #define CFGR_PLL_Mask            ((uint32_t)0xFFC0FFFF)
 132:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
 133:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 134:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CFGR_PLLMull_Mask         ((uint32_t)0x003C0000)
 135:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CFGR_PLLSRC_Mask          ((uint32_t)0x00010000)
 136:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CFGR_PLLXTPRE_Mask        ((uint32_t)0x00020000)
 137:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CFGR_SWS_Mask             ((uint32_t)0x0000000C)
 138:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CFGR_SW_Mask              ((uint32_t)0xFFFFFFFC)
 139:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CFGR_HPRE_Reset_Mask      ((uint32_t)0xFFFFFF0F)
 140:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CFGR_HPRE_Set_Mask        ((uint32_t)0x000000F0)
 141:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CFGR_PPRE1_Reset_Mask     ((uint32_t)0xFFFFF8FF)
 142:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CFGR_PPRE1_Set_Mask       ((uint32_t)0x00000700)
 143:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CFGR_PPRE2_Reset_Mask     ((uint32_t)0xFFFFC7FF)
 144:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CFGR_PPRE2_Set_Mask       ((uint32_t)0x00003800)
 145:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CFGR_ADCPRE_Reset_Mask    ((uint32_t)0xFFFF3FFF)
 146:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CFGR_ADCPRE_Set_Mask      ((uint32_t)0x0000C000)
 147:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 148:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /* CSR register bit mask */
 149:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CSR_RMVF_Set              ((uint32_t)0x01000000)
 150:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 151:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL) || defined 
 152:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /* CFGR2 register bit mask */
 153:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****  #define CFGR2_PREDIV1SRC         ((uint32_t)0x00010000)
 154:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****  #define CFGR2_PREDIV1            ((uint32_t)0x0000000F)
 155:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #endif
 156:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
 157:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****  #define CFGR2_PREDIV2            ((uint32_t)0x000000F0)
 158:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****  #define CFGR2_PLL2MUL            ((uint32_t)0x00000F00)
 159:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****  #define CFGR2_PLL3MUL            ((uint32_t)0x0000F000)
 160:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
 161:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 162:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /* RCC Flag Mask */
 163:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define FLAG_Mask                 ((uint8_t)0x1F)
 164:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 165:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /* CIR register byte 2 (Bits[15:8]) base address */
 166:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CIR_BYTE2_ADDRESS         ((uint32_t)0x40021009)
 167:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 168:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /* CIR register byte 3 (Bits[23:16]) base address */
 169:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CIR_BYTE3_ADDRESS         ((uint32_t)0x4002100A)
 170:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 171:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /* CFGR register byte 4 (Bits[31:24]) base address */
 172:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CFGR_BYTE4_ADDRESS        ((uint32_t)0x40021007)
 173:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 174:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /* BDCR register base address */
 175:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define BDCR_ADDRESS              (PERIPH_BASE + BDCR_OFFSET)
 176:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 177:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 178:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @}
 179:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */ 
 180:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 181:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /** @defgroup RCC_Private_Macros
 182:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @{
 183:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */ 
 184:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 185:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 186:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @}
 187:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */ 
 188:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 189:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /** @defgroup RCC_Private_Variables
 190:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @{
 191:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */ 
 192:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 193:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** static __I uint8_t APBAHBPrescTable[16] = {0, 0, 0, 0, 1, 2, 3, 4, 1, 2, 3, 4, 6, 7, 8, 9};
 194:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** static __I uint8_t ADCPrescTable[4] = {2, 4, 6, 8};
 195:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 196:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 197:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @}
 198:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 199:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 200:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /** @defgroup RCC_Private_FunctionPrototypes
 201:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @{
 202:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 203:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 204:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 205:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @}
 206:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 207:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 208:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /** @defgroup RCC_Private_Functions
 209:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @{
 210:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 211:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 212:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 213:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Resets the RCC clock configuration to the default reset state.
 214:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  None
 215:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
 216:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 217:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_DeInit(void)
 218:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
  57              		.loc 1 218 0
  58              		.cfi_startproc
  59              		@ args = 0, pretend = 0, frame = 0
  60              		@ frame_needed = 1, uses_anonymous_args = 0
  61              		@ link register save eliminated.
  62 0000 80B4     		push	{r7}
  63              	.LCFI0:
  64              		.cfi_def_cfa_offset 4
  65              		.cfi_offset 7, -4
  66 0002 00AF     		add	r7, sp, #0
  67              	.LCFI1:
  68              		.cfi_def_cfa_register 7
 219:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Set HSION bit */
 220:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC->CR |= (uint32_t)0x00000001;
  69              		.loc 1 220 0
  70 0004 154B     		ldr	r3, .L2
  71 0006 154A     		ldr	r2, .L2
  72 0008 1268     		ldr	r2, [r2, #0]
  73 000a 42F00102 		orr	r2, r2, #1
  74 000e 1A60     		str	r2, [r3, #0]
 221:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 222:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Reset SW, HPRE, PPRE1, PPRE2, ADCPRE and MCO bits */
 223:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #ifndef STM32F10X_CL
 224:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC->CFGR &= (uint32_t)0xF8FF0000;
  75              		.loc 1 224 0
  76 0010 124A     		ldr	r2, .L2
  77 0012 124B     		ldr	r3, .L2
  78 0014 5968     		ldr	r1, [r3, #4]
  79 0016 124B     		ldr	r3, .L2+4
  80 0018 0B40     		ands	r3, r3, r1
  81 001a 5360     		str	r3, [r2, #4]
 225:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #else
 226:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC->CFGR &= (uint32_t)0xF0FF0000;
 227:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */   
 228:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   
 229:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Reset HSEON, CSSON and PLLON bits */
 230:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC->CR &= (uint32_t)0xFEF6FFFF;
  82              		.loc 1 230 0
  83 001c 0F4A     		ldr	r2, .L2
  84 001e 0F4B     		ldr	r3, .L2
  85 0020 1B68     		ldr	r3, [r3, #0]
  86 0022 23F08473 		bic	r3, r3, #17301504
  87 0026 23F48033 		bic	r3, r3, #65536
  88 002a 1360     		str	r3, [r2, #0]
 231:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 232:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Reset HSEBYP bit */
 233:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC->CR &= (uint32_t)0xFFFBFFFF;
  89              		.loc 1 233 0
  90 002c 0B4B     		ldr	r3, .L2
  91 002e 0B4A     		ldr	r2, .L2
  92 0030 1268     		ldr	r2, [r2, #0]
  93 0032 22F48022 		bic	r2, r2, #262144
  94 0036 1A60     		str	r2, [r3, #0]
 234:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 235:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Reset PLLSRC, PLLXTPRE, PLLMUL and USBPRE/OTGFSPRE bits */
 236:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC->CFGR &= (uint32_t)0xFF80FFFF;
  95              		.loc 1 236 0
  96 0038 084B     		ldr	r3, .L2
  97 003a 084A     		ldr	r2, .L2
  98 003c 5268     		ldr	r2, [r2, #4]
  99 003e 22F4FE02 		bic	r2, r2, #8323072
 100 0042 5A60     		str	r2, [r3, #4]
 237:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 238:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
 239:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Reset PLL2ON and PLL3ON bits */
 240:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC->CR &= (uint32_t)0xEBFFFFFF;
 241:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 242:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Disable all interrupts and clear pending bits  */
 243:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC->CIR = 0x00FF0000;
 244:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 245:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Reset CFGR2 register */
 246:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC->CFGR2 = 0x00000000;
 247:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #elif defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL)
 248:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Disable all interrupts and clear pending bits  */
 249:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC->CIR = 0x009F0000;
 101              		.loc 1 249 0
 102 0044 054B     		ldr	r3, .L2
 103 0046 4FF41F02 		mov	r2, #10420224
 104 004a 9A60     		str	r2, [r3, #8]
 250:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 251:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Reset CFGR2 register */
 252:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC->CFGR2 = 0x00000000;      
 105              		.loc 1 252 0
 106 004c 034B     		ldr	r3, .L2
 107 004e 4FF00002 		mov	r2, #0
 108 0052 DA62     		str	r2, [r3, #44]
 253:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #else
 254:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Disable all interrupts and clear pending bits  */
 255:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC->CIR = 0x009F0000;
 256:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */
 257:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 258:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 109              		.loc 1 258 0
 110 0054 BD46     		mov	sp, r7
 111 0056 80BC     		pop	{r7}
 112 0058 7047     		bx	lr
 113              	.L3:
 114 005a 00BF     		.align	2
 115              	.L2:
 116 005c 00100240 		.word	1073876992
 117 0060 0000FFF8 		.word	-117506048
 118              		.cfi_endproc
 119              	.LFE29:
 121              		.section	.text.RCC_HSEConfig,"ax",%progbits
 122              		.align	2
 123              		.global	RCC_HSEConfig
 124              		.thumb
 125              		.thumb_func
 127              	RCC_HSEConfig:
 128              	.LFB30:
 259:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 260:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 261:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Configures the External High Speed oscillator (HSE).
 262:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @note   HSE can not be stopped if it is used directly or through the PLL as system clock.
 263:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_HSE: specifies the new state of the HSE.
 264:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 265:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_HSE_OFF: HSE oscillator OFF
 266:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_HSE_ON: HSE oscillator ON
 267:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_HSE_Bypass: HSE oscillator bypassed with external clock
 268:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
 269:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 270:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_HSEConfig(uint32_t RCC_HSE)
 271:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 129              		.loc 1 271 0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 8
 132              		@ frame_needed = 1, uses_anonymous_args = 0
 133 0000 80B5     		push	{r7, lr}
 134              	.LCFI2:
 135              		.cfi_def_cfa_offset 8
 136              		.cfi_offset 7, -8
 137              		.cfi_offset 14, -4
 138 0002 82B0     		sub	sp, sp, #8
 139              	.LCFI3:
 140              		.cfi_def_cfa_offset 16
 141 0004 00AF     		add	r7, sp, #0
 142              	.LCFI4:
 143              		.cfi_def_cfa_register 7
 144 0006 7860     		str	r0, [r7, #4]
 272:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 273:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_HSE(RCC_HSE));
 145              		.loc 1 273 0
 146 0008 7B68     		ldr	r3, [r7, #4]
 147 000a 002B     		cmp	r3, #0
 148 000c 07D0     		beq	.L5
 149              		.loc 1 273 0 is_stmt 0 discriminator 2
 150 000e 7B68     		ldr	r3, [r7, #4]
 151 0010 B3F5803F 		cmp	r3, #65536
 152 0014 03D0     		beq	.L5
 153              		.loc 1 273 0 discriminator 1
 154 0016 7B68     		ldr	r3, [r7, #4]
 155 0018 B3F5802F 		cmp	r3, #262144
 156 001c 02D1     		bne	.L6
 157              	.L5:
 158 001e 4FF00103 		mov	r3, #1
 159 0022 01E0     		b	.L7
 160              	.L6:
 161              		.loc 1 273 0 discriminator 3
 162 0024 4FF00003 		mov	r3, #0
 163              	.L7:
 164              		.loc 1 273 0 discriminator 4
 165 0028 1846     		mov	r0, r3
 166 002a FFF7FEFF 		bl	assert_param
 274:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Reset HSEON and HSEBYP bits before configuring the HSE ------------------*/
 275:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Reset HSEON bit */
 276:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC->CR &= CR_HSEON_Reset;
 167              		.loc 1 276 0 is_stmt 1 discriminator 4
 168 002e 134B     		ldr	r3, .L13
 169 0030 124A     		ldr	r2, .L13
 170 0032 1268     		ldr	r2, [r2, #0]
 171 0034 22F48032 		bic	r2, r2, #65536
 172 0038 1A60     		str	r2, [r3, #0]
 277:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Reset HSEBYP bit */
 278:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC->CR &= CR_HSEBYP_Reset;
 173              		.loc 1 278 0 discriminator 4
 174 003a 104B     		ldr	r3, .L13
 175 003c 0F4A     		ldr	r2, .L13
 176 003e 1268     		ldr	r2, [r2, #0]
 177 0040 22F48022 		bic	r2, r2, #262144
 178 0044 1A60     		str	r2, [r3, #0]
 279:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Configure HSE (RCC_HSE_OFF is already covered by the code section above) */
 280:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   switch(RCC_HSE)
 179              		.loc 1 280 0 discriminator 4
 180 0046 7B68     		ldr	r3, [r7, #4]
 181 0048 B3F5803F 		cmp	r3, #65536
 182 004c 03D0     		beq	.L9
 183 004e B3F5802F 		cmp	r3, #262144
 184 0052 07D0     		beq	.L10
 185              		.loc 1 280 0 is_stmt 0
 186 0054 0DE0     		b	.L12
 187              	.L9:
 281:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   {
 282:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****     case RCC_HSE_ON:
 283:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       /* Set HSEON bit */
 284:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       RCC->CR |= CR_HSEON_Set;
 188              		.loc 1 284 0 is_stmt 1
 189 0056 094B     		ldr	r3, .L13
 190 0058 084A     		ldr	r2, .L13
 191 005a 1268     		ldr	r2, [r2, #0]
 192 005c 42F48032 		orr	r2, r2, #65536
 193 0060 1A60     		str	r2, [r3, #0]
 285:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       break;
 194              		.loc 1 285 0
 195 0062 07E0     		b	.L4
 196              	.L10:
 286:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       
 287:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****     case RCC_HSE_Bypass:
 288:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       /* Set HSEBYP and HSEON bits */
 289:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       RCC->CR |= CR_HSEBYP_Set | CR_HSEON_Set;
 197              		.loc 1 289 0
 198 0064 054B     		ldr	r3, .L13
 199 0066 054A     		ldr	r2, .L13
 200 0068 1268     		ldr	r2, [r2, #0]
 201 006a 42F4A022 		orr	r2, r2, #327680
 202 006e 1A60     		str	r2, [r3, #0]
 290:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       break;
 203              		.loc 1 290 0
 204 0070 00E0     		b	.L4
 205              	.L12:
 291:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       
 292:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****     default:
 293:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       break;
 206              		.loc 1 293 0
 207 0072 00BF     		nop
 208              	.L4:
 294:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   }
 295:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 209              		.loc 1 295 0
 210 0074 07F10807 		add	r7, r7, #8
 211 0078 BD46     		mov	sp, r7
 212 007a 80BD     		pop	{r7, pc}
 213              	.L14:
 214              		.align	2
 215              	.L13:
 216 007c 00100240 		.word	1073876992
 217              		.cfi_endproc
 218              	.LFE30:
 220              		.section	.text.RCC_WaitForHSEStartUp,"ax",%progbits
 221              		.align	2
 222              		.global	RCC_WaitForHSEStartUp
 223              		.thumb
 224              		.thumb_func
 226              	RCC_WaitForHSEStartUp:
 227              	.LFB31:
 296:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 297:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 298:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Waits for HSE start-up.
 299:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  None
 300:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval An ErrorStatus enumuration value:
 301:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * - SUCCESS: HSE oscillator is stable and ready to use
 302:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * - ERROR: HSE oscillator not yet ready
 303:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 304:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** ErrorStatus RCC_WaitForHSEStartUp(void)
 305:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 228              		.loc 1 305 0
 229              		.cfi_startproc
 230              		@ args = 0, pretend = 0, frame = 8
 231              		@ frame_needed = 1, uses_anonymous_args = 0
 232 0000 80B5     		push	{r7, lr}
 233              	.LCFI5:
 234              		.cfi_def_cfa_offset 8
 235              		.cfi_offset 7, -8
 236              		.cfi_offset 14, -4
 237 0002 82B0     		sub	sp, sp, #8
 238              	.LCFI6:
 239              		.cfi_def_cfa_offset 16
 240 0004 00AF     		add	r7, sp, #0
 241              	.LCFI7:
 242              		.cfi_def_cfa_register 7
 306:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   __IO uint32_t StartUpCounter = 0;
 243              		.loc 1 306 0
 244 0006 4FF00003 		mov	r3, #0
 245 000a 3B60     		str	r3, [r7, #0]
 307:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   ErrorStatus status = ERROR;
 246              		.loc 1 307 0
 247 000c 4FF00003 		mov	r3, #0
 248 0010 FB71     		strb	r3, [r7, #7]
 308:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   FlagStatus HSEStatus = RESET;
 249              		.loc 1 308 0
 250 0012 4FF00003 		mov	r3, #0
 251 0016 BB71     		strb	r3, [r7, #6]
 252              	.L17:
 309:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   
 310:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 311:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   do
 312:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   {
 313:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****     HSEStatus = RCC_GetFlagStatus(RCC_FLAG_HSERDY);
 253              		.loc 1 313 0 discriminator 1
 254 0018 4FF03100 		mov	r0, #49
 255 001c FFF7FEFF 		bl	RCC_GetFlagStatus
 256 0020 0346     		mov	r3, r0
 257 0022 BB71     		strb	r3, [r7, #6]
 314:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****     StartUpCounter++;  
 258              		.loc 1 314 0 discriminator 1
 259 0024 3B68     		ldr	r3, [r7, #0]
 260 0026 03F10103 		add	r3, r3, #1
 261 002a 3B60     		str	r3, [r7, #0]
 315:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   } while((StartUpCounter != HSE_STARTUP_TIMEOUT) && (HSEStatus == RESET));
 262              		.loc 1 315 0 discriminator 1
 263 002c 3B68     		ldr	r3, [r7, #0]
 264 002e B3F5A06F 		cmp	r3, #1280
 265 0032 02D0     		beq	.L16
 266 0034 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 267 0036 002B     		cmp	r3, #0
 268 0038 EED0     		beq	.L17
 269              	.L16:
 316:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   
 317:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   if (RCC_GetFlagStatus(RCC_FLAG_HSERDY) != RESET)
 270              		.loc 1 317 0
 271 003a 4FF03100 		mov	r0, #49
 272 003e FFF7FEFF 		bl	RCC_GetFlagStatus
 273 0042 0346     		mov	r3, r0
 274 0044 002B     		cmp	r3, #0
 275 0046 03D0     		beq	.L18
 318:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   {
 319:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****     status = SUCCESS;
 276              		.loc 1 319 0
 277 0048 4FF00103 		mov	r3, #1
 278 004c FB71     		strb	r3, [r7, #7]
 279 004e 02E0     		b	.L19
 280              	.L18:
 320:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   }
 321:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   else
 322:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   {
 323:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****     status = ERROR;
 281              		.loc 1 323 0
 282 0050 4FF00003 		mov	r3, #0
 283 0054 FB71     		strb	r3, [r7, #7]
 284              	.L19:
 324:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   }  
 325:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   return (status);
 285              		.loc 1 325 0
 286 0056 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 326:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 287              		.loc 1 326 0
 288 0058 1846     		mov	r0, r3
 289 005a 07F10807 		add	r7, r7, #8
 290 005e BD46     		mov	sp, r7
 291 0060 80BD     		pop	{r7, pc}
 292              		.cfi_endproc
 293              	.LFE31:
 295 0062 00BF     		.section	.text.RCC_AdjustHSICalibrationValue,"ax",%progbits
 296              		.align	2
 297              		.global	RCC_AdjustHSICalibrationValue
 298              		.thumb
 299              		.thumb_func
 301              	RCC_AdjustHSICalibrationValue:
 302              	.LFB32:
 327:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 328:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 329:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Adjusts the Internal High Speed oscillator (HSI) calibration value.
 330:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  HSICalibrationValue: specifies the calibration trimming value.
 331:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter must be a number between 0 and 0x1F.
 332:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
 333:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 334:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_AdjustHSICalibrationValue(uint8_t HSICalibrationValue)
 335:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 303              		.loc 1 335 0
 304              		.cfi_startproc
 305              		@ args = 0, pretend = 0, frame = 16
 306              		@ frame_needed = 1, uses_anonymous_args = 0
 307 0000 80B5     		push	{r7, lr}
 308              	.LCFI8:
 309              		.cfi_def_cfa_offset 8
 310              		.cfi_offset 7, -8
 311              		.cfi_offset 14, -4
 312 0002 84B0     		sub	sp, sp, #16
 313              	.LCFI9:
 314              		.cfi_def_cfa_offset 24
 315 0004 00AF     		add	r7, sp, #0
 316              	.LCFI10:
 317              		.cfi_def_cfa_register 7
 318 0006 0346     		mov	r3, r0
 319 0008 FB71     		strb	r3, [r7, #7]
 336:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 320              		.loc 1 336 0
 321 000a 4FF00003 		mov	r3, #0
 322 000e FB60     		str	r3, [r7, #12]
 337:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 338:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_CALIBRATION_VALUE(HSICalibrationValue));
 323              		.loc 1 338 0
 324 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 325 0012 1F2B     		cmp	r3, #31
 326 0014 8CBF     		ite	hi
 327 0016 0023     		movhi	r3, #0
 328 0018 0123     		movls	r3, #1
 329 001a DBB2     		uxtb	r3, r3
 330 001c 1846     		mov	r0, r3
 331 001e FFF7FEFF 		bl	assert_param
 339:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CR;
 332              		.loc 1 339 0
 333 0022 0A4B     		ldr	r3, .L22
 334 0024 1B68     		ldr	r3, [r3, #0]
 335 0026 FB60     		str	r3, [r7, #12]
 340:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Clear HSITRIM[4:0] bits */
 341:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg &= CR_HSITRIM_Mask;
 336              		.loc 1 341 0
 337 0028 FB68     		ldr	r3, [r7, #12]
 338 002a 23F0F803 		bic	r3, r3, #248
 339 002e FB60     		str	r3, [r7, #12]
 342:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Set the HSITRIM[4:0] bits according to HSICalibrationValue value */
 343:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg |= (uint32_t)HSICalibrationValue << 3;
 340              		.loc 1 343 0
 341 0030 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 342 0032 4FEAC303 		lsl	r3, r3, #3
 343 0036 FA68     		ldr	r2, [r7, #12]
 344 0038 1343     		orrs	r3, r3, r2
 345 003a FB60     		str	r3, [r7, #12]
 344:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Store the new value */
 345:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC->CR = tmpreg;
 346              		.loc 1 345 0
 347 003c 034B     		ldr	r3, .L22
 348 003e FA68     		ldr	r2, [r7, #12]
 349 0040 1A60     		str	r2, [r3, #0]
 346:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 350              		.loc 1 346 0
 351 0042 07F11007 		add	r7, r7, #16
 352 0046 BD46     		mov	sp, r7
 353 0048 80BD     		pop	{r7, pc}
 354              	.L23:
 355 004a 00BF     		.align	2
 356              	.L22:
 357 004c 00100240 		.word	1073876992
 358              		.cfi_endproc
 359              	.LFE32:
 361              		.section	.text.RCC_HSICmd,"ax",%progbits
 362              		.align	2
 363              		.global	RCC_HSICmd
 364              		.thumb
 365              		.thumb_func
 367              	RCC_HSICmd:
 368              	.LFB33:
 347:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 348:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 349:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the Internal High Speed oscillator (HSI).
 350:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @note   HSI can not be stopped if it is used directly or through the PLL as system clock.
 351:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the HSI. This parameter can be: ENABLE or DISABLE.
 352:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
 353:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 354:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_HSICmd(FunctionalState NewState)
 355:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 369              		.loc 1 355 0
 370              		.cfi_startproc
 371              		@ args = 0, pretend = 0, frame = 8
 372              		@ frame_needed = 1, uses_anonymous_args = 0
 373 0000 80B5     		push	{r7, lr}
 374              	.LCFI11:
 375              		.cfi_def_cfa_offset 8
 376              		.cfi_offset 7, -8
 377              		.cfi_offset 14, -4
 378 0002 82B0     		sub	sp, sp, #8
 379              	.LCFI12:
 380              		.cfi_def_cfa_offset 16
 381 0004 00AF     		add	r7, sp, #0
 382              	.LCFI13:
 383              		.cfi_def_cfa_register 7
 384 0006 0346     		mov	r3, r0
 385 0008 FB71     		strb	r3, [r7, #7]
 356:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 357:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 386              		.loc 1 357 0
 387 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 388 000c 002B     		cmp	r3, #0
 389 000e 02D0     		beq	.L25
 390              		.loc 1 357 0 is_stmt 0 discriminator 2
 391 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 392 0012 012B     		cmp	r3, #1
 393 0014 02D1     		bne	.L26
 394              	.L25:
 395              		.loc 1 357 0 discriminator 1
 396 0016 4FF00103 		mov	r3, #1
 397 001a 01E0     		b	.L27
 398              	.L26:
 399              		.loc 1 357 0 discriminator 3
 400 001c 4FF00003 		mov	r3, #0
 401              	.L27:
 402              		.loc 1 357 0 discriminator 4
 403 0020 1846     		mov	r0, r3
 404 0022 FFF7FEFF 		bl	assert_param
 358:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CR_HSION_BB = (uint32_t)NewState;
 405              		.loc 1 358 0 is_stmt 1 discriminator 4
 406 0026 034B     		ldr	r3, .L28
 407 0028 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 408 002a 1A60     		str	r2, [r3, #0]
 359:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 409              		.loc 1 359 0 discriminator 4
 410 002c 07F10807 		add	r7, r7, #8
 411 0030 BD46     		mov	sp, r7
 412 0032 80BD     		pop	{r7, pc}
 413              	.L29:
 414              		.align	2
 415              	.L28:
 416 0034 00004242 		.word	1111621632
 417              		.cfi_endproc
 418              	.LFE33:
 420              		.section	.text.RCC_PLLConfig,"ax",%progbits
 421              		.align	2
 422              		.global	RCC_PLLConfig
 423              		.thumb
 424              		.thumb_func
 426              	RCC_PLLConfig:
 427              	.LFB34:
 360:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 361:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 362:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Configures the PLL clock source and multiplication factor.
 363:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @note   This function must be used only when the PLL is disabled.
 364:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_PLLSource: specifies the PLL entry clock source.
 365:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices or @b STM32_Value_line_devices, 
 366:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   this parameter can be one of the following values:
 367:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_PLLSource_HSI_Div2: HSI oscillator clock divided by 2 selected as PLL clock entry
 368:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_PLLSource_PREDIV1: PREDIV1 clock selected as PLL clock entry
 369:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be one of the following values:
 370:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_PLLSource_HSI_Div2: HSI oscillator clock divided by 2 selected as PLL clock entry
 371:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_PLLSource_HSE_Div1: HSE oscillator clock selected as PLL clock entry
 372:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_PLLSource_HSE_Div2: HSE oscillator clock divided by 2 selected as PLL clock entry 
 373:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_PLLMul: specifies the PLL multiplication factor.
 374:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be RCC_PLLMul_x where x:{[4,9], 6_
 375:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be RCC_PLLMul_x where x:[2,16]  
 376:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
 377:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 378:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_PLLConfig(uint32_t RCC_PLLSource, uint32_t RCC_PLLMul)
 379:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 428              		.loc 1 379 0
 429              		.cfi_startproc
 430              		@ args = 0, pretend = 0, frame = 16
 431              		@ frame_needed = 1, uses_anonymous_args = 0
 432 0000 80B5     		push	{r7, lr}
 433              	.LCFI14:
 434              		.cfi_def_cfa_offset 8
 435              		.cfi_offset 7, -8
 436              		.cfi_offset 14, -4
 437 0002 84B0     		sub	sp, sp, #16
 438              	.LCFI15:
 439              		.cfi_def_cfa_offset 24
 440 0004 00AF     		add	r7, sp, #0
 441              	.LCFI16:
 442              		.cfi_def_cfa_register 7
 443 0006 7860     		str	r0, [r7, #4]
 444 0008 3960     		str	r1, [r7, #0]
 380:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 445              		.loc 1 380 0
 446 000a 4FF00003 		mov	r3, #0
 447 000e FB60     		str	r3, [r7, #12]
 381:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 382:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 383:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PLL_SOURCE(RCC_PLLSource));
 448              		.loc 1 383 0
 449 0010 7B68     		ldr	r3, [r7, #4]
 450 0012 002B     		cmp	r3, #0
 451 0014 03D0     		beq	.L31
 452              		.loc 1 383 0 is_stmt 0 discriminator 2
 453 0016 7B68     		ldr	r3, [r7, #4]
 454 0018 B3F5803F 		cmp	r3, #65536
 455 001c 02D1     		bne	.L32
 456              	.L31:
 457              		.loc 1 383 0 discriminator 1
 458 001e 4FF00103 		mov	r3, #1
 459 0022 01E0     		b	.L33
 460              	.L32:
 461              		.loc 1 383 0 discriminator 3
 462 0024 4FF00003 		mov	r3, #0
 463              	.L33:
 464              		.loc 1 383 0 discriminator 4
 465 0028 1846     		mov	r0, r3
 466 002a FFF7FEFF 		bl	assert_param
 384:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PLL_MUL(RCC_PLLMul));
 467              		.loc 1 384 0 is_stmt 1 discriminator 4
 468 002e 3B68     		ldr	r3, [r7, #0]
 469 0030 002B     		cmp	r3, #0
 470 0032 37D0     		beq	.L34
 471              		.loc 1 384 0 is_stmt 0 discriminator 2
 472 0034 3B68     		ldr	r3, [r7, #0]
 473 0036 B3F5802F 		cmp	r3, #262144
 474 003a 33D0     		beq	.L34
 475              		.loc 1 384 0 discriminator 1
 476 003c 3B68     		ldr	r3, [r7, #0]
 477 003e B3F5002F 		cmp	r3, #524288
 478 0042 2FD0     		beq	.L34
 479              		.loc 1 384 0 discriminator 2
 480 0044 3B68     		ldr	r3, [r7, #0]
 481 0046 B3F5402F 		cmp	r3, #786432
 482 004a 2BD0     		beq	.L34
 483              		.loc 1 384 0 discriminator 3
 484 004c 3B68     		ldr	r3, [r7, #0]
 485 004e B3F5801F 		cmp	r3, #1048576
 486 0052 27D0     		beq	.L34
 487              		.loc 1 384 0 discriminator 4
 488 0054 3B68     		ldr	r3, [r7, #0]
 489 0056 B3F5A01F 		cmp	r3, #1310720
 490 005a 23D0     		beq	.L34
 491              		.loc 1 384 0 discriminator 5
 492 005c 3B68     		ldr	r3, [r7, #0]
 493 005e B3F5C01F 		cmp	r3, #1572864
 494 0062 1FD0     		beq	.L34
 495              		.loc 1 384 0 discriminator 6
 496 0064 3B68     		ldr	r3, [r7, #0]
 497 0066 B3F5E01F 		cmp	r3, #1835008
 498 006a 1BD0     		beq	.L34
 499              		.loc 1 384 0 discriminator 7
 500 006c 3B68     		ldr	r3, [r7, #0]
 501 006e B3F5001F 		cmp	r3, #2097152
 502 0072 17D0     		beq	.L34
 503              		.loc 1 384 0 discriminator 8
 504 0074 3B68     		ldr	r3, [r7, #0]
 505 0076 B3F5101F 		cmp	r3, #2359296
 506 007a 13D0     		beq	.L34
 507              		.loc 1 384 0 discriminator 9
 508 007c 3B68     		ldr	r3, [r7, #0]
 509 007e B3F5201F 		cmp	r3, #2621440
 510 0082 0FD0     		beq	.L34
 511              		.loc 1 384 0 discriminator 10
 512 0084 3B68     		ldr	r3, [r7, #0]
 513 0086 B3F5301F 		cmp	r3, #2883584
 514 008a 0BD0     		beq	.L34
 515              		.loc 1 384 0 discriminator 11
 516 008c 3B68     		ldr	r3, [r7, #0]
 517 008e B3F5401F 		cmp	r3, #3145728
 518 0092 07D0     		beq	.L34
 519              		.loc 1 384 0 discriminator 12
 520 0094 3B68     		ldr	r3, [r7, #0]
 521 0096 B3F5501F 		cmp	r3, #3407872
 522 009a 03D0     		beq	.L34
 523              		.loc 1 384 0 discriminator 13
 524 009c 3B68     		ldr	r3, [r7, #0]
 525 009e B3F5601F 		cmp	r3, #3670016
 526 00a2 02D1     		bne	.L35
 527              	.L34:
 528              		.loc 1 384 0 discriminator 1
 529 00a4 4FF00103 		mov	r3, #1
 530 00a8 01E0     		b	.L36
 531              	.L35:
 532              		.loc 1 384 0 discriminator 3
 533 00aa 4FF00003 		mov	r3, #0
 534              	.L36:
 535              		.loc 1 384 0 discriminator 4
 536 00ae 1846     		mov	r0, r3
 537 00b0 FFF7FEFF 		bl	assert_param
 385:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 386:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR;
 538              		.loc 1 386 0 is_stmt 1 discriminator 4
 539 00b4 094B     		ldr	r3, .L37
 540 00b6 5B68     		ldr	r3, [r3, #4]
 541 00b8 FB60     		str	r3, [r7, #12]
 387:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Clear PLLSRC, PLLXTPRE and PLLMUL[3:0] bits */
 388:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg &= CFGR_PLL_Mask;
 542              		.loc 1 388 0 discriminator 4
 543 00ba FB68     		ldr	r3, [r7, #12]
 544 00bc 23F47413 		bic	r3, r3, #3997696
 545 00c0 FB60     		str	r3, [r7, #12]
 389:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Set the PLL configuration bits */
 390:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_PLLSource | RCC_PLLMul;
 546              		.loc 1 390 0 discriminator 4
 547 00c2 7A68     		ldr	r2, [r7, #4]
 548 00c4 3B68     		ldr	r3, [r7, #0]
 549 00c6 1343     		orrs	r3, r3, r2
 550 00c8 FA68     		ldr	r2, [r7, #12]
 551 00ca 1343     		orrs	r3, r3, r2
 552 00cc FB60     		str	r3, [r7, #12]
 391:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Store the new value */
 392:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC->CFGR = tmpreg;
 553              		.loc 1 392 0 discriminator 4
 554 00ce 034B     		ldr	r3, .L37
 555 00d0 FA68     		ldr	r2, [r7, #12]
 556 00d2 5A60     		str	r2, [r3, #4]
 393:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 557              		.loc 1 393 0 discriminator 4
 558 00d4 07F11007 		add	r7, r7, #16
 559 00d8 BD46     		mov	sp, r7
 560 00da 80BD     		pop	{r7, pc}
 561              	.L38:
 562              		.align	2
 563              	.L37:
 564 00dc 00100240 		.word	1073876992
 565              		.cfi_endproc
 566              	.LFE34:
 568              		.section	.text.RCC_PLLCmd,"ax",%progbits
 569              		.align	2
 570              		.global	RCC_PLLCmd
 571              		.thumb
 572              		.thumb_func
 574              	RCC_PLLCmd:
 575              	.LFB35:
 394:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 395:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 396:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the PLL.
 397:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @note   The PLL can not be disabled if it is used as system clock.
 398:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the PLL. This parameter can be: ENABLE or DISABLE.
 399:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
 400:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 401:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_PLLCmd(FunctionalState NewState)
 402:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 576              		.loc 1 402 0
 577              		.cfi_startproc
 578              		@ args = 0, pretend = 0, frame = 8
 579              		@ frame_needed = 1, uses_anonymous_args = 0
 580 0000 80B5     		push	{r7, lr}
 581              	.LCFI17:
 582              		.cfi_def_cfa_offset 8
 583              		.cfi_offset 7, -8
 584              		.cfi_offset 14, -4
 585 0002 82B0     		sub	sp, sp, #8
 586              	.LCFI18:
 587              		.cfi_def_cfa_offset 16
 588 0004 00AF     		add	r7, sp, #0
 589              	.LCFI19:
 590              		.cfi_def_cfa_register 7
 591 0006 0346     		mov	r3, r0
 592 0008 FB71     		strb	r3, [r7, #7]
 403:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 404:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 593              		.loc 1 404 0
 594 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 595 000c 002B     		cmp	r3, #0
 596 000e 02D0     		beq	.L40
 597              		.loc 1 404 0 is_stmt 0 discriminator 2
 598 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 599 0012 012B     		cmp	r3, #1
 600 0014 02D1     		bne	.L41
 601              	.L40:
 602              		.loc 1 404 0 discriminator 1
 603 0016 4FF00103 		mov	r3, #1
 604 001a 01E0     		b	.L42
 605              	.L41:
 606              		.loc 1 404 0 discriminator 3
 607 001c 4FF00003 		mov	r3, #0
 608              	.L42:
 609              		.loc 1 404 0 discriminator 4
 610 0020 1846     		mov	r0, r3
 611 0022 FFF7FEFF 		bl	assert_param
 405:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 406:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CR_PLLON_BB = (uint32_t)NewState;
 612              		.loc 1 406 0 is_stmt 1 discriminator 4
 613 0026 034B     		ldr	r3, .L43
 614 0028 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 615 002a 1A60     		str	r2, [r3, #0]
 407:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 616              		.loc 1 407 0 discriminator 4
 617 002c 07F10807 		add	r7, r7, #8
 618 0030 BD46     		mov	sp, r7
 619 0032 80BD     		pop	{r7, pc}
 620              	.L44:
 621              		.align	2
 622              	.L43:
 623 0034 60004242 		.word	1111621728
 624              		.cfi_endproc
 625              	.LFE35:
 627              		.section	.text.RCC_PREDIV1Config,"ax",%progbits
 628              		.align	2
 629              		.global	RCC_PREDIV1Config
 630              		.thumb
 631              		.thumb_func
 633              	RCC_PREDIV1Config:
 634              	.LFB36:
 408:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 409:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL) || defined 
 410:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 411:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Configures the PREDIV1 division factor.
 412:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @note 
 413:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   - This function must be used only when the PLL is disabled.
 414:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line and Value line 
 415:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     devices.
 416:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_PREDIV1_Source: specifies the PREDIV1 clock source.
 417:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 418:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_PREDIV1_Source_HSE: HSE selected as PREDIV1 clock
 419:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_PREDIV1_Source_PLL2: PLL2 selected as PREDIV1 clock
 420:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @note 
 421:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   For @b STM32_Value_line_devices this parameter is always RCC_PREDIV1_Source_HSE  
 422:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_PREDIV1_Div: specifies the PREDIV1 clock division factor.
 423:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be RCC_PREDIV1_Divx where x:[1,16]
 424:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
 425:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 426:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_PREDIV1Config(uint32_t RCC_PREDIV1_Source, uint32_t RCC_PREDIV1_Div)
 427:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 635              		.loc 1 427 0
 636              		.cfi_startproc
 637              		@ args = 0, pretend = 0, frame = 16
 638              		@ frame_needed = 1, uses_anonymous_args = 0
 639 0000 80B5     		push	{r7, lr}
 640              	.LCFI20:
 641              		.cfi_def_cfa_offset 8
 642              		.cfi_offset 7, -8
 643              		.cfi_offset 14, -4
 644 0002 84B0     		sub	sp, sp, #16
 645              	.LCFI21:
 646              		.cfi_def_cfa_offset 24
 647 0004 00AF     		add	r7, sp, #0
 648              	.LCFI22:
 649              		.cfi_def_cfa_register 7
 650 0006 7860     		str	r0, [r7, #4]
 651 0008 3960     		str	r1, [r7, #0]
 428:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 652              		.loc 1 428 0
 653 000a 4FF00003 		mov	r3, #0
 654 000e FB60     		str	r3, [r7, #12]
 429:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   
 430:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 431:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PREDIV1_SOURCE(RCC_PREDIV1_Source));
 655              		.loc 1 431 0
 656 0010 7B68     		ldr	r3, [r7, #4]
 657 0012 002B     		cmp	r3, #0
 658 0014 14BF     		ite	ne
 659 0016 0023     		movne	r3, #0
 660 0018 0123     		moveq	r3, #1
 661 001a DBB2     		uxtb	r3, r3
 662 001c 1846     		mov	r0, r3
 663 001e FFF7FEFF 		bl	assert_param
 432:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PREDIV1(RCC_PREDIV1_Div));
 664              		.loc 1 432 0
 665 0022 3B68     		ldr	r3, [r7, #0]
 666 0024 002B     		cmp	r3, #0
 667 0026 2CD0     		beq	.L46
 668              		.loc 1 432 0 is_stmt 0 discriminator 2
 669 0028 3B68     		ldr	r3, [r7, #0]
 670 002a 012B     		cmp	r3, #1
 671 002c 29D0     		beq	.L46
 672              		.loc 1 432 0 discriminator 1
 673 002e 3B68     		ldr	r3, [r7, #0]
 674 0030 022B     		cmp	r3, #2
 675 0032 26D0     		beq	.L46
 676              		.loc 1 432 0 discriminator 2
 677 0034 3B68     		ldr	r3, [r7, #0]
 678 0036 032B     		cmp	r3, #3
 679 0038 23D0     		beq	.L46
 680              		.loc 1 432 0 discriminator 3
 681 003a 3B68     		ldr	r3, [r7, #0]
 682 003c 042B     		cmp	r3, #4
 683 003e 20D0     		beq	.L46
 684              		.loc 1 432 0 discriminator 4
 685 0040 3B68     		ldr	r3, [r7, #0]
 686 0042 052B     		cmp	r3, #5
 687 0044 1DD0     		beq	.L46
 688              		.loc 1 432 0 discriminator 5
 689 0046 3B68     		ldr	r3, [r7, #0]
 690 0048 062B     		cmp	r3, #6
 691 004a 1AD0     		beq	.L46
 692              		.loc 1 432 0 discriminator 6
 693 004c 3B68     		ldr	r3, [r7, #0]
 694 004e 072B     		cmp	r3, #7
 695 0050 17D0     		beq	.L46
 696              		.loc 1 432 0 discriminator 7
 697 0052 3B68     		ldr	r3, [r7, #0]
 698 0054 082B     		cmp	r3, #8
 699 0056 14D0     		beq	.L46
 700              		.loc 1 432 0 discriminator 8
 701 0058 3B68     		ldr	r3, [r7, #0]
 702 005a 092B     		cmp	r3, #9
 703 005c 11D0     		beq	.L46
 704              		.loc 1 432 0 discriminator 9
 705 005e 3B68     		ldr	r3, [r7, #0]
 706 0060 0A2B     		cmp	r3, #10
 707 0062 0ED0     		beq	.L46
 708              		.loc 1 432 0 discriminator 10
 709 0064 3B68     		ldr	r3, [r7, #0]
 710 0066 0B2B     		cmp	r3, #11
 711 0068 0BD0     		beq	.L46
 712              		.loc 1 432 0 discriminator 11
 713 006a 3B68     		ldr	r3, [r7, #0]
 714 006c 0C2B     		cmp	r3, #12
 715 006e 08D0     		beq	.L46
 716              		.loc 1 432 0 discriminator 12
 717 0070 3B68     		ldr	r3, [r7, #0]
 718 0072 0D2B     		cmp	r3, #13
 719 0074 05D0     		beq	.L46
 720              		.loc 1 432 0 discriminator 13
 721 0076 3B68     		ldr	r3, [r7, #0]
 722 0078 0E2B     		cmp	r3, #14
 723 007a 02D0     		beq	.L46
 724              		.loc 1 432 0 discriminator 14
 725 007c 3B68     		ldr	r3, [r7, #0]
 726 007e 0F2B     		cmp	r3, #15
 727 0080 02D1     		bne	.L47
 728              	.L46:
 729              		.loc 1 432 0 discriminator 1
 730 0082 4FF00103 		mov	r3, #1
 731 0086 01E0     		b	.L48
 732              	.L47:
 733              		.loc 1 432 0 discriminator 3
 734 0088 4FF00003 		mov	r3, #0
 735              	.L48:
 736              		.loc 1 432 0 discriminator 4
 737 008c 1846     		mov	r0, r3
 738 008e FFF7FEFF 		bl	assert_param
 433:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 434:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR2;
 739              		.loc 1 434 0 is_stmt 1 discriminator 4
 740 0092 0B4B     		ldr	r3, .L49
 741 0094 DB6A     		ldr	r3, [r3, #44]
 742 0096 FB60     		str	r3, [r7, #12]
 435:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Clear PREDIV1[3:0] and PREDIV1SRC bits */
 436:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg &= ~(CFGR2_PREDIV1 | CFGR2_PREDIV1SRC);
 743              		.loc 1 436 0 discriminator 4
 744 0098 FB68     		ldr	r3, [r7, #12]
 745 009a 23F48033 		bic	r3, r3, #65536
 746 009e 23F00F03 		bic	r3, r3, #15
 747 00a2 FB60     		str	r3, [r7, #12]
 437:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Set the PREDIV1 clock source and division factor */
 438:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_PREDIV1_Source | RCC_PREDIV1_Div ;
 748              		.loc 1 438 0 discriminator 4
 749 00a4 7A68     		ldr	r2, [r7, #4]
 750 00a6 3B68     		ldr	r3, [r7, #0]
 751 00a8 1343     		orrs	r3, r3, r2
 752 00aa FA68     		ldr	r2, [r7, #12]
 753 00ac 1343     		orrs	r3, r3, r2
 754 00ae FB60     		str	r3, [r7, #12]
 439:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Store the new value */
 440:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC->CFGR2 = tmpreg;
 755              		.loc 1 440 0 discriminator 4
 756 00b0 034B     		ldr	r3, .L49
 757 00b2 FA68     		ldr	r2, [r7, #12]
 758 00b4 DA62     		str	r2, [r3, #44]
 441:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 759              		.loc 1 441 0 discriminator 4
 760 00b6 07F11007 		add	r7, r7, #16
 761 00ba BD46     		mov	sp, r7
 762 00bc 80BD     		pop	{r7, pc}
 763              	.L50:
 764 00be 00BF     		.align	2
 765              	.L49:
 766 00c0 00100240 		.word	1073876992
 767              		.cfi_endproc
 768              	.LFE36:
 770              		.section	.text.RCC_SYSCLKConfig,"ax",%progbits
 771              		.align	2
 772              		.global	RCC_SYSCLKConfig
 773              		.thumb
 774              		.thumb_func
 776              	RCC_SYSCLKConfig:
 777              	.LFB37:
 442:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #endif
 443:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 444:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
 445:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 446:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Configures the PREDIV2 division factor.
 447:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @note 
 448:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   - This function must be used only when both PLL2 and PLL3 are disabled.
 449:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line devices.
 450:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_PREDIV2_Div: specifies the PREDIV2 clock division factor.
 451:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be RCC_PREDIV2_Divx where x:[1,16]
 452:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
 453:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 454:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_PREDIV2Config(uint32_t RCC_PREDIV2_Div)
 455:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 456:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 457:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 458:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 459:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PREDIV2(RCC_PREDIV2_Div));
 460:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 461:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR2;
 462:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Clear PREDIV2[3:0] bits */
 463:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg &= ~CFGR2_PREDIV2;
 464:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Set the PREDIV2 division factor */
 465:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_PREDIV2_Div;
 466:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Store the new value */
 467:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC->CFGR2 = tmpreg;
 468:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 469:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 470:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 471:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Configures the PLL2 multiplication factor.
 472:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @note
 473:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   - This function must be used only when the PLL2 is disabled.
 474:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line devices.
 475:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_PLL2Mul: specifies the PLL2 multiplication factor.
 476:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be RCC_PLL2Mul_x where x:{[8,14], 16, 20}
 477:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
 478:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 479:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_PLL2Config(uint32_t RCC_PLL2Mul)
 480:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 481:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 482:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 483:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 484:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PLL2_MUL(RCC_PLL2Mul));
 485:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 486:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR2;
 487:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Clear PLL2Mul[3:0] bits */
 488:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg &= ~CFGR2_PLL2MUL;
 489:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Set the PLL2 configuration bits */
 490:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_PLL2Mul;
 491:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Store the new value */
 492:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC->CFGR2 = tmpreg;
 493:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 494:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 495:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 496:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 497:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the PLL2.
 498:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @note 
 499:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   - The PLL2 can not be disabled if it is used indirectly as system clock
 500:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     (i.e. it is used as PLL clock entry that is used as System clock).
 501:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line devices.
 502:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the PLL2. This parameter can be: ENABLE or DISABLE.
 503:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
 504:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 505:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_PLL2Cmd(FunctionalState NewState)
 506:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 507:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 508:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 509:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 510:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CR_PLL2ON_BB = (uint32_t)NewState;
 511:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 512:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 513:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 514:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 515:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Configures the PLL3 multiplication factor.
 516:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @note 
 517:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   - This function must be used only when the PLL3 is disabled.
 518:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line devices.
 519:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_PLL3Mul: specifies the PLL3 multiplication factor.
 520:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be RCC_PLL3Mul_x where x:{[8,14], 16, 20}
 521:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
 522:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 523:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_PLL3Config(uint32_t RCC_PLL3Mul)
 524:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 525:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 526:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 527:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 528:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PLL3_MUL(RCC_PLL3Mul));
 529:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 530:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR2;
 531:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Clear PLL3Mul[3:0] bits */
 532:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg &= ~CFGR2_PLL3MUL;
 533:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Set the PLL3 configuration bits */
 534:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_PLL3Mul;
 535:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Store the new value */
 536:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC->CFGR2 = tmpreg;
 537:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 538:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 539:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 540:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 541:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the PLL3.
 542:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @note   This function applies only to STM32 Connectivity line devices.
 543:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the PLL3. This parameter can be: ENABLE or DISABLE.
 544:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
 545:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 546:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_PLL3Cmd(FunctionalState NewState)
 547:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 548:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 549:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 550:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 551:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CR_PLL3ON_BB = (uint32_t)NewState;
 552:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 553:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */
 554:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 555:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 556:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Configures the system clock (SYSCLK).
 557:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_SYSCLKSource: specifies the clock source used as system clock.
 558:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 559:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLKSource_HSI: HSI selected as system clock
 560:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLKSource_HSE: HSE selected as system clock
 561:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLKSource_PLLCLK: PLL selected as system clock
 562:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
 563:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 564:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_SYSCLKConfig(uint32_t RCC_SYSCLKSource)
 565:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 778              		.loc 1 565 0
 779              		.cfi_startproc
 780              		@ args = 0, pretend = 0, frame = 16
 781              		@ frame_needed = 1, uses_anonymous_args = 0
 782 0000 80B5     		push	{r7, lr}
 783              	.LCFI23:
 784              		.cfi_def_cfa_offset 8
 785              		.cfi_offset 7, -8
 786              		.cfi_offset 14, -4
 787 0002 84B0     		sub	sp, sp, #16
 788              	.LCFI24:
 789              		.cfi_def_cfa_offset 24
 790 0004 00AF     		add	r7, sp, #0
 791              	.LCFI25:
 792              		.cfi_def_cfa_register 7
 793 0006 7860     		str	r0, [r7, #4]
 566:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 794              		.loc 1 566 0
 795 0008 4FF00003 		mov	r3, #0
 796 000c FB60     		str	r3, [r7, #12]
 567:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 568:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_SYSCLK_SOURCE(RCC_SYSCLKSource));
 797              		.loc 1 568 0
 798 000e 7B68     		ldr	r3, [r7, #4]
 799 0010 002B     		cmp	r3, #0
 800 0012 05D0     		beq	.L52
 801              		.loc 1 568 0 is_stmt 0 discriminator 2
 802 0014 7B68     		ldr	r3, [r7, #4]
 803 0016 012B     		cmp	r3, #1
 804 0018 02D0     		beq	.L52
 805              		.loc 1 568 0 discriminator 1
 806 001a 7B68     		ldr	r3, [r7, #4]
 807 001c 022B     		cmp	r3, #2
 808 001e 02D1     		bne	.L53
 809              	.L52:
 810 0020 4FF00103 		mov	r3, #1
 811 0024 01E0     		b	.L54
 812              	.L53:
 813              		.loc 1 568 0 discriminator 3
 814 0026 4FF00003 		mov	r3, #0
 815              	.L54:
 816              		.loc 1 568 0 discriminator 4
 817 002a 1846     		mov	r0, r3
 818 002c FFF7FEFF 		bl	assert_param
 569:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR;
 819              		.loc 1 569 0 is_stmt 1 discriminator 4
 820 0030 084B     		ldr	r3, .L55
 821 0032 5B68     		ldr	r3, [r3, #4]
 822 0034 FB60     		str	r3, [r7, #12]
 570:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Clear SW[1:0] bits */
 571:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg &= CFGR_SW_Mask;
 823              		.loc 1 571 0 discriminator 4
 824 0036 FB68     		ldr	r3, [r7, #12]
 825 0038 23F00303 		bic	r3, r3, #3
 826 003c FB60     		str	r3, [r7, #12]
 572:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Set SW[1:0] bits according to RCC_SYSCLKSource value */
 573:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_SYSCLKSource;
 827              		.loc 1 573 0 discriminator 4
 828 003e FA68     		ldr	r2, [r7, #12]
 829 0040 7B68     		ldr	r3, [r7, #4]
 830 0042 1343     		orrs	r3, r3, r2
 831 0044 FB60     		str	r3, [r7, #12]
 574:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Store the new value */
 575:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC->CFGR = tmpreg;
 832              		.loc 1 575 0 discriminator 4
 833 0046 034B     		ldr	r3, .L55
 834 0048 FA68     		ldr	r2, [r7, #12]
 835 004a 5A60     		str	r2, [r3, #4]
 576:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 836              		.loc 1 576 0 discriminator 4
 837 004c 07F11007 		add	r7, r7, #16
 838 0050 BD46     		mov	sp, r7
 839 0052 80BD     		pop	{r7, pc}
 840              	.L56:
 841              		.align	2
 842              	.L55:
 843 0054 00100240 		.word	1073876992
 844              		.cfi_endproc
 845              	.LFE37:
 847              		.section	.text.RCC_GetSYSCLKSource,"ax",%progbits
 848              		.align	2
 849              		.global	RCC_GetSYSCLKSource
 850              		.thumb
 851              		.thumb_func
 853              	RCC_GetSYSCLKSource:
 854              	.LFB38:
 577:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 578:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 579:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Returns the clock source used as system clock.
 580:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  None
 581:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval The clock source used as system clock. The returned value can
 582:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   be one of the following:
 583:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     - 0x00: HSI used as system clock
 584:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     - 0x04: HSE used as system clock
 585:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     - 0x08: PLL used as system clock
 586:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 587:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** uint8_t RCC_GetSYSCLKSource(void)
 588:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 855              		.loc 1 588 0
 856              		.cfi_startproc
 857              		@ args = 0, pretend = 0, frame = 0
 858              		@ frame_needed = 1, uses_anonymous_args = 0
 859              		@ link register save eliminated.
 860 0000 80B4     		push	{r7}
 861              	.LCFI26:
 862              		.cfi_def_cfa_offset 4
 863              		.cfi_offset 7, -4
 864 0002 00AF     		add	r7, sp, #0
 865              	.LCFI27:
 866              		.cfi_def_cfa_register 7
 589:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   return ((uint8_t)(RCC->CFGR & CFGR_SWS_Mask));
 867              		.loc 1 589 0
 868 0004 044B     		ldr	r3, .L59
 869 0006 5B68     		ldr	r3, [r3, #4]
 870 0008 DBB2     		uxtb	r3, r3
 871 000a 03F00C03 		and	r3, r3, #12
 872 000e DBB2     		uxtb	r3, r3
 590:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 873              		.loc 1 590 0
 874 0010 1846     		mov	r0, r3
 875 0012 BD46     		mov	sp, r7
 876 0014 80BC     		pop	{r7}
 877 0016 7047     		bx	lr
 878              	.L60:
 879              		.align	2
 880              	.L59:
 881 0018 00100240 		.word	1073876992
 882              		.cfi_endproc
 883              	.LFE38:
 885              		.section	.text.RCC_HCLKConfig,"ax",%progbits
 886              		.align	2
 887              		.global	RCC_HCLKConfig
 888              		.thumb
 889              		.thumb_func
 891              	RCC_HCLKConfig:
 892              	.LFB39:
 591:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 592:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 593:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Configures the AHB clock (HCLK).
 594:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_SYSCLK: defines the AHB clock divider. This clock is derived from 
 595:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   the system clock (SYSCLK).
 596:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 597:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div1: AHB clock = SYSCLK
 598:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div2: AHB clock = SYSCLK/2
 599:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div4: AHB clock = SYSCLK/4
 600:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div8: AHB clock = SYSCLK/8
 601:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div16: AHB clock = SYSCLK/16
 602:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div64: AHB clock = SYSCLK/64
 603:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div128: AHB clock = SYSCLK/128
 604:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div256: AHB clock = SYSCLK/256
 605:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div512: AHB clock = SYSCLK/512
 606:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
 607:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 608:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_HCLKConfig(uint32_t RCC_SYSCLK)
 609:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 893              		.loc 1 609 0
 894              		.cfi_startproc
 895              		@ args = 0, pretend = 0, frame = 16
 896              		@ frame_needed = 1, uses_anonymous_args = 0
 897 0000 80B5     		push	{r7, lr}
 898              	.LCFI28:
 899              		.cfi_def_cfa_offset 8
 900              		.cfi_offset 7, -8
 901              		.cfi_offset 14, -4
 902 0002 84B0     		sub	sp, sp, #16
 903              	.LCFI29:
 904              		.cfi_def_cfa_offset 24
 905 0004 00AF     		add	r7, sp, #0
 906              	.LCFI30:
 907              		.cfi_def_cfa_register 7
 908 0006 7860     		str	r0, [r7, #4]
 610:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 909              		.loc 1 610 0
 910 0008 4FF00003 		mov	r3, #0
 911 000c FB60     		str	r3, [r7, #12]
 611:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 612:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_HCLK(RCC_SYSCLK));
 912              		.loc 1 612 0
 913 000e 7B68     		ldr	r3, [r7, #4]
 914 0010 002B     		cmp	r3, #0
 915 0012 17D0     		beq	.L62
 916              		.loc 1 612 0 is_stmt 0 discriminator 2
 917 0014 7B68     		ldr	r3, [r7, #4]
 918 0016 802B     		cmp	r3, #128
 919 0018 14D0     		beq	.L62
 920              		.loc 1 612 0 discriminator 1
 921 001a 7B68     		ldr	r3, [r7, #4]
 922 001c 902B     		cmp	r3, #144
 923 001e 11D0     		beq	.L62
 924              		.loc 1 612 0 discriminator 2
 925 0020 7B68     		ldr	r3, [r7, #4]
 926 0022 A02B     		cmp	r3, #160
 927 0024 0ED0     		beq	.L62
 928              		.loc 1 612 0 discriminator 3
 929 0026 7B68     		ldr	r3, [r7, #4]
 930 0028 B02B     		cmp	r3, #176
 931 002a 0BD0     		beq	.L62
 932              		.loc 1 612 0 discriminator 4
 933 002c 7B68     		ldr	r3, [r7, #4]
 934 002e C02B     		cmp	r3, #192
 935 0030 08D0     		beq	.L62
 936              		.loc 1 612 0 discriminator 5
 937 0032 7B68     		ldr	r3, [r7, #4]
 938 0034 D02B     		cmp	r3, #208
 939 0036 05D0     		beq	.L62
 940              		.loc 1 612 0 discriminator 6
 941 0038 7B68     		ldr	r3, [r7, #4]
 942 003a E02B     		cmp	r3, #224
 943 003c 02D0     		beq	.L62
 944              		.loc 1 612 0 discriminator 7
 945 003e 7B68     		ldr	r3, [r7, #4]
 946 0040 F02B     		cmp	r3, #240
 947 0042 02D1     		bne	.L63
 948              	.L62:
 949              		.loc 1 612 0 discriminator 1
 950 0044 4FF00103 		mov	r3, #1
 951 0048 01E0     		b	.L64
 952              	.L63:
 953              		.loc 1 612 0 discriminator 3
 954 004a 4FF00003 		mov	r3, #0
 955              	.L64:
 956              		.loc 1 612 0 discriminator 4
 957 004e 1846     		mov	r0, r3
 958 0050 FFF7FEFF 		bl	assert_param
 613:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR;
 959              		.loc 1 613 0 is_stmt 1 discriminator 4
 960 0054 084B     		ldr	r3, .L65
 961 0056 5B68     		ldr	r3, [r3, #4]
 962 0058 FB60     		str	r3, [r7, #12]
 614:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Clear HPRE[3:0] bits */
 615:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg &= CFGR_HPRE_Reset_Mask;
 963              		.loc 1 615 0 discriminator 4
 964 005a FB68     		ldr	r3, [r7, #12]
 965 005c 23F0F003 		bic	r3, r3, #240
 966 0060 FB60     		str	r3, [r7, #12]
 616:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Set HPRE[3:0] bits according to RCC_SYSCLK value */
 617:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_SYSCLK;
 967              		.loc 1 617 0 discriminator 4
 968 0062 FA68     		ldr	r2, [r7, #12]
 969 0064 7B68     		ldr	r3, [r7, #4]
 970 0066 1343     		orrs	r3, r3, r2
 971 0068 FB60     		str	r3, [r7, #12]
 618:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Store the new value */
 619:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC->CFGR = tmpreg;
 972              		.loc 1 619 0 discriminator 4
 973 006a 034B     		ldr	r3, .L65
 974 006c FA68     		ldr	r2, [r7, #12]
 975 006e 5A60     		str	r2, [r3, #4]
 620:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 976              		.loc 1 620 0 discriminator 4
 977 0070 07F11007 		add	r7, r7, #16
 978 0074 BD46     		mov	sp, r7
 979 0076 80BD     		pop	{r7, pc}
 980              	.L66:
 981              		.align	2
 982              	.L65:
 983 0078 00100240 		.word	1073876992
 984              		.cfi_endproc
 985              	.LFE39:
 987              		.section	.text.RCC_PCLK1Config,"ax",%progbits
 988              		.align	2
 989              		.global	RCC_PCLK1Config
 990              		.thumb
 991              		.thumb_func
 993              	RCC_PCLK1Config:
 994              	.LFB40:
 621:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 622:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 623:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Configures the Low Speed APB clock (PCLK1).
 624:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_HCLK: defines the APB1 clock divider. This clock is derived from 
 625:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   the AHB clock (HCLK).
 626:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 627:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div1: APB1 clock = HCLK
 628:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div2: APB1 clock = HCLK/2
 629:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div4: APB1 clock = HCLK/4
 630:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div8: APB1 clock = HCLK/8
 631:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div16: APB1 clock = HCLK/16
 632:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
 633:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 634:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_PCLK1Config(uint32_t RCC_HCLK)
 635:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 995              		.loc 1 635 0
 996              		.cfi_startproc
 997              		@ args = 0, pretend = 0, frame = 16
 998              		@ frame_needed = 1, uses_anonymous_args = 0
 999 0000 80B5     		push	{r7, lr}
 1000              	.LCFI31:
 1001              		.cfi_def_cfa_offset 8
 1002              		.cfi_offset 7, -8
 1003              		.cfi_offset 14, -4
 1004 0002 84B0     		sub	sp, sp, #16
 1005              	.LCFI32:
 1006              		.cfi_def_cfa_offset 24
 1007 0004 00AF     		add	r7, sp, #0
 1008              	.LCFI33:
 1009              		.cfi_def_cfa_register 7
 1010 0006 7860     		str	r0, [r7, #4]
 636:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 1011              		.loc 1 636 0
 1012 0008 4FF00003 		mov	r3, #0
 1013 000c FB60     		str	r3, [r7, #12]
 637:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 638:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PCLK(RCC_HCLK));
 1014              		.loc 1 638 0
 1015 000e 7B68     		ldr	r3, [r7, #4]
 1016 0010 002B     		cmp	r3, #0
 1017 0012 0FD0     		beq	.L68
 1018              		.loc 1 638 0 is_stmt 0 discriminator 2
 1019 0014 7B68     		ldr	r3, [r7, #4]
 1020 0016 B3F5806F 		cmp	r3, #1024
 1021 001a 0BD0     		beq	.L68
 1022              		.loc 1 638 0 discriminator 1
 1023 001c 7B68     		ldr	r3, [r7, #4]
 1024 001e B3F5A06F 		cmp	r3, #1280
 1025 0022 07D0     		beq	.L68
 1026              		.loc 1 638 0 discriminator 2
 1027 0024 7B68     		ldr	r3, [r7, #4]
 1028 0026 B3F5C06F 		cmp	r3, #1536
 1029 002a 03D0     		beq	.L68
 1030              		.loc 1 638 0 discriminator 3
 1031 002c 7B68     		ldr	r3, [r7, #4]
 1032 002e B3F5E06F 		cmp	r3, #1792
 1033 0032 02D1     		bne	.L69
 1034              	.L68:
 1035              		.loc 1 638 0 discriminator 1
 1036 0034 4FF00103 		mov	r3, #1
 1037 0038 01E0     		b	.L70
 1038              	.L69:
 1039              		.loc 1 638 0 discriminator 3
 1040 003a 4FF00003 		mov	r3, #0
 1041              	.L70:
 1042              		.loc 1 638 0 discriminator 4
 1043 003e 1846     		mov	r0, r3
 1044 0040 FFF7FEFF 		bl	assert_param
 639:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR;
 1045              		.loc 1 639 0 is_stmt 1 discriminator 4
 1046 0044 084B     		ldr	r3, .L71
 1047 0046 5B68     		ldr	r3, [r3, #4]
 1048 0048 FB60     		str	r3, [r7, #12]
 640:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Clear PPRE1[2:0] bits */
 641:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg &= CFGR_PPRE1_Reset_Mask;
 1049              		.loc 1 641 0 discriminator 4
 1050 004a FB68     		ldr	r3, [r7, #12]
 1051 004c 23F4E063 		bic	r3, r3, #1792
 1052 0050 FB60     		str	r3, [r7, #12]
 642:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Set PPRE1[2:0] bits according to RCC_HCLK value */
 643:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_HCLK;
 1053              		.loc 1 643 0 discriminator 4
 1054 0052 FA68     		ldr	r2, [r7, #12]
 1055 0054 7B68     		ldr	r3, [r7, #4]
 1056 0056 1343     		orrs	r3, r3, r2
 1057 0058 FB60     		str	r3, [r7, #12]
 644:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Store the new value */
 645:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC->CFGR = tmpreg;
 1058              		.loc 1 645 0 discriminator 4
 1059 005a 034B     		ldr	r3, .L71
 1060 005c FA68     		ldr	r2, [r7, #12]
 1061 005e 5A60     		str	r2, [r3, #4]
 646:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 1062              		.loc 1 646 0 discriminator 4
 1063 0060 07F11007 		add	r7, r7, #16
 1064 0064 BD46     		mov	sp, r7
 1065 0066 80BD     		pop	{r7, pc}
 1066              	.L72:
 1067              		.align	2
 1068              	.L71:
 1069 0068 00100240 		.word	1073876992
 1070              		.cfi_endproc
 1071              	.LFE40:
 1073              		.section	.text.RCC_PCLK2Config,"ax",%progbits
 1074              		.align	2
 1075              		.global	RCC_PCLK2Config
 1076              		.thumb
 1077              		.thumb_func
 1079              	RCC_PCLK2Config:
 1080              	.LFB41:
 647:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 648:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 649:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Configures the High Speed APB clock (PCLK2).
 650:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_HCLK: defines the APB2 clock divider. This clock is derived from 
 651:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   the AHB clock (HCLK).
 652:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 653:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div1: APB2 clock = HCLK
 654:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div2: APB2 clock = HCLK/2
 655:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div4: APB2 clock = HCLK/4
 656:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div8: APB2 clock = HCLK/8
 657:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div16: APB2 clock = HCLK/16
 658:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
 659:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 660:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_PCLK2Config(uint32_t RCC_HCLK)
 661:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 1081              		.loc 1 661 0
 1082              		.cfi_startproc
 1083              		@ args = 0, pretend = 0, frame = 16
 1084              		@ frame_needed = 1, uses_anonymous_args = 0
 1085 0000 80B5     		push	{r7, lr}
 1086              	.LCFI34:
 1087              		.cfi_def_cfa_offset 8
 1088              		.cfi_offset 7, -8
 1089              		.cfi_offset 14, -4
 1090 0002 84B0     		sub	sp, sp, #16
 1091              	.LCFI35:
 1092              		.cfi_def_cfa_offset 24
 1093 0004 00AF     		add	r7, sp, #0
 1094              	.LCFI36:
 1095              		.cfi_def_cfa_register 7
 1096 0006 7860     		str	r0, [r7, #4]
 662:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 1097              		.loc 1 662 0
 1098 0008 4FF00003 		mov	r3, #0
 1099 000c FB60     		str	r3, [r7, #12]
 663:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 664:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PCLK(RCC_HCLK));
 1100              		.loc 1 664 0
 1101 000e 7B68     		ldr	r3, [r7, #4]
 1102 0010 002B     		cmp	r3, #0
 1103 0012 0FD0     		beq	.L74
 1104              		.loc 1 664 0 is_stmt 0 discriminator 2
 1105 0014 7B68     		ldr	r3, [r7, #4]
 1106 0016 B3F5806F 		cmp	r3, #1024
 1107 001a 0BD0     		beq	.L74
 1108              		.loc 1 664 0 discriminator 1
 1109 001c 7B68     		ldr	r3, [r7, #4]
 1110 001e B3F5A06F 		cmp	r3, #1280
 1111 0022 07D0     		beq	.L74
 1112              		.loc 1 664 0 discriminator 2
 1113 0024 7B68     		ldr	r3, [r7, #4]
 1114 0026 B3F5C06F 		cmp	r3, #1536
 1115 002a 03D0     		beq	.L74
 1116              		.loc 1 664 0 discriminator 3
 1117 002c 7B68     		ldr	r3, [r7, #4]
 1118 002e B3F5E06F 		cmp	r3, #1792
 1119 0032 02D1     		bne	.L75
 1120              	.L74:
 1121              		.loc 1 664 0 discriminator 1
 1122 0034 4FF00103 		mov	r3, #1
 1123 0038 01E0     		b	.L76
 1124              	.L75:
 1125              		.loc 1 664 0 discriminator 3
 1126 003a 4FF00003 		mov	r3, #0
 1127              	.L76:
 1128              		.loc 1 664 0 discriminator 4
 1129 003e 1846     		mov	r0, r3
 1130 0040 FFF7FEFF 		bl	assert_param
 665:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR;
 1131              		.loc 1 665 0 is_stmt 1 discriminator 4
 1132 0044 094B     		ldr	r3, .L77
 1133 0046 5B68     		ldr	r3, [r3, #4]
 1134 0048 FB60     		str	r3, [r7, #12]
 666:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Clear PPRE2[2:0] bits */
 667:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg &= CFGR_PPRE2_Reset_Mask;
 1135              		.loc 1 667 0 discriminator 4
 1136 004a FB68     		ldr	r3, [r7, #12]
 1137 004c 23F46053 		bic	r3, r3, #14336
 1138 0050 FB60     		str	r3, [r7, #12]
 668:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Set PPRE2[2:0] bits according to RCC_HCLK value */
 669:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_HCLK << 3;
 1139              		.loc 1 669 0 discriminator 4
 1140 0052 7B68     		ldr	r3, [r7, #4]
 1141 0054 4FEAC303 		lsl	r3, r3, #3
 1142 0058 FA68     		ldr	r2, [r7, #12]
 1143 005a 1343     		orrs	r3, r3, r2
 1144 005c FB60     		str	r3, [r7, #12]
 670:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Store the new value */
 671:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC->CFGR = tmpreg;
 1145              		.loc 1 671 0 discriminator 4
 1146 005e 034B     		ldr	r3, .L77
 1147 0060 FA68     		ldr	r2, [r7, #12]
 1148 0062 5A60     		str	r2, [r3, #4]
 672:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 1149              		.loc 1 672 0 discriminator 4
 1150 0064 07F11007 		add	r7, r7, #16
 1151 0068 BD46     		mov	sp, r7
 1152 006a 80BD     		pop	{r7, pc}
 1153              	.L78:
 1154              		.align	2
 1155              	.L77:
 1156 006c 00100240 		.word	1073876992
 1157              		.cfi_endproc
 1158              	.LFE41:
 1160              		.section	.text.RCC_ITConfig,"ax",%progbits
 1161              		.align	2
 1162              		.global	RCC_ITConfig
 1163              		.thumb
 1164              		.thumb_func
 1166              	RCC_ITConfig:
 1167              	.LFB42:
 673:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 674:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 675:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the specified RCC interrupts.
 676:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_IT: specifies the RCC interrupt sources to be enabled or disabled.
 677:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * 
 678:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be any combination
 679:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   of the following values        
 680:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
 681:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
 682:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
 683:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
 684:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
 685:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLL2RDY: PLL2 ready interrupt
 686:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLL3RDY: PLL3 ready interrupt
 687:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * 
 688:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be any combination of the 
 689:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   following values        
 690:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
 691:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
 692:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
 693:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
 694:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
 695:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *       
 696:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified RCC interrupts.
 697:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
 698:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
 699:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 700:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_ITConfig(uint8_t RCC_IT, FunctionalState NewState)
 701:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 1168              		.loc 1 701 0
 1169              		.cfi_startproc
 1170              		@ args = 0, pretend = 0, frame = 8
 1171              		@ frame_needed = 1, uses_anonymous_args = 0
 1172 0000 80B5     		push	{r7, lr}
 1173              	.LCFI37:
 1174              		.cfi_def_cfa_offset 8
 1175              		.cfi_offset 7, -8
 1176              		.cfi_offset 14, -4
 1177 0002 82B0     		sub	sp, sp, #8
 1178              	.LCFI38:
 1179              		.cfi_def_cfa_offset 16
 1180 0004 00AF     		add	r7, sp, #0
 1181              	.LCFI39:
 1182              		.cfi_def_cfa_register 7
 1183 0006 0246     		mov	r2, r0
 1184 0008 0B46     		mov	r3, r1
 1185 000a FA71     		strb	r2, [r7, #7]
 1186 000c BB71     		strb	r3, [r7, #6]
 702:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 703:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_IT(RCC_IT));
 1187              		.loc 1 703 0
 1188 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1189 0010 03F0E003 		and	r3, r3, #224
 1190 0014 002B     		cmp	r3, #0
 1191 0016 05D1     		bne	.L80
 1192              		.loc 1 703 0 is_stmt 0 discriminator 1
 1193 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1194 001a 002B     		cmp	r3, #0
 1195 001c 02D0     		beq	.L80
 1196              		.loc 1 703 0 discriminator 3
 1197 001e 4FF00103 		mov	r3, #1
 1198 0022 01E0     		b	.L81
 1199              	.L80:
 1200              		.loc 1 703 0 discriminator 2
 1201 0024 4FF00003 		mov	r3, #0
 1202              	.L81:
 1203              		.loc 1 703 0 discriminator 4
 1204 0028 1846     		mov	r0, r3
 1205 002a FFF7FEFF 		bl	assert_param
 704:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1206              		.loc 1 704 0 is_stmt 1 discriminator 4
 1207 002e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 1208 0030 002B     		cmp	r3, #0
 1209 0032 02D0     		beq	.L82
 1210              		.loc 1 704 0 is_stmt 0 discriminator 2
 1211 0034 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 1212 0036 012B     		cmp	r3, #1
 1213 0038 02D1     		bne	.L83
 1214              	.L82:
 1215              		.loc 1 704 0 discriminator 1
 1216 003a 4FF00103 		mov	r3, #1
 1217 003e 01E0     		b	.L84
 1218              	.L83:
 1219              		.loc 1 704 0 discriminator 3
 1220 0040 4FF00003 		mov	r3, #0
 1221              	.L84:
 1222              		.loc 1 704 0 discriminator 4
 1223 0044 1846     		mov	r0, r3
 1224 0046 FFF7FEFF 		bl	assert_param
 705:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
 1225              		.loc 1 705 0 is_stmt 1 discriminator 4
 1226 004a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 1227 004c 002B     		cmp	r3, #0
 1228 004e 08D0     		beq	.L85
 706:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   {
 707:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****     /* Perform Byte access to RCC_CIR bits to enable the selected interrupts */
 708:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****     *(__IO uint8_t *) CIR_BYTE2_ADDRESS |= RCC_IT;
 1229              		.loc 1 708 0
 1230 0050 0B4B     		ldr	r3, .L87
 1231 0052 0B4A     		ldr	r2, .L87
 1232 0054 1278     		ldrb	r2, [r2, #0]
 1233 0056 D1B2     		uxtb	r1, r2
 1234 0058 FA79     		ldrb	r2, [r7, #7]
 1235 005a 0A43     		orrs	r2, r2, r1
 1236 005c D2B2     		uxtb	r2, r2
 1237 005e 1A70     		strb	r2, [r3, #0]
 1238 0060 0AE0     		b	.L79
 1239              	.L85:
 709:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   }
 710:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   else
 711:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   {
 712:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****     /* Perform Byte access to RCC_CIR bits to disable the selected interrupts */
 713:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****     *(__IO uint8_t *) CIR_BYTE2_ADDRESS &= (uint8_t)~RCC_IT;
 1240              		.loc 1 713 0
 1241 0062 074B     		ldr	r3, .L87
 1242 0064 064A     		ldr	r2, .L87
 1243 0066 1278     		ldrb	r2, [r2, #0]
 1244 0068 D1B2     		uxtb	r1, r2
 1245 006a FA79     		ldrb	r2, [r7, #7]
 1246 006c 6FEA0202 		mvn	r2, r2
 1247 0070 D2B2     		uxtb	r2, r2
 1248 0072 0A40     		ands	r2, r2, r1
 1249 0074 D2B2     		uxtb	r2, r2
 1250 0076 1A70     		strb	r2, [r3, #0]
 1251              	.L79:
 714:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   }
 715:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 1252              		.loc 1 715 0
 1253 0078 07F10807 		add	r7, r7, #8
 1254 007c BD46     		mov	sp, r7
 1255 007e 80BD     		pop	{r7, pc}
 1256              	.L88:
 1257              		.align	2
 1258              	.L87:
 1259 0080 09100240 		.word	1073877001
 1260              		.cfi_endproc
 1261              	.LFE42:
 1263              		.section	.text.RCC_USBCLKConfig,"ax",%progbits
 1264              		.align	2
 1265              		.global	RCC_USBCLKConfig
 1266              		.thumb
 1267              		.thumb_func
 1269              	RCC_USBCLKConfig:
 1270              	.LFB43:
 716:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 717:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #ifndef STM32F10X_CL
 718:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 719:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Configures the USB clock (USBCLK).
 720:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_USBCLKSource: specifies the USB clock source. This clock is 
 721:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   derived from the PLL output.
 722:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 723:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_USBCLKSource_PLLCLK_1Div5: PLL clock divided by 1,5 selected as USB 
 724:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *                                     clock source
 725:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_USBCLKSource_PLLCLK_Div1: PLL clock selected as USB clock source
 726:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
 727:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 728:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_USBCLKConfig(uint32_t RCC_USBCLKSource)
 729:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 1271              		.loc 1 729 0
 1272              		.cfi_startproc
 1273              		@ args = 0, pretend = 0, frame = 8
 1274              		@ frame_needed = 1, uses_anonymous_args = 0
 1275 0000 80B5     		push	{r7, lr}
 1276              	.LCFI40:
 1277              		.cfi_def_cfa_offset 8
 1278              		.cfi_offset 7, -8
 1279              		.cfi_offset 14, -4
 1280 0002 82B0     		sub	sp, sp, #8
 1281              	.LCFI41:
 1282              		.cfi_def_cfa_offset 16
 1283 0004 00AF     		add	r7, sp, #0
 1284              	.LCFI42:
 1285              		.cfi_def_cfa_register 7
 1286 0006 7860     		str	r0, [r7, #4]
 730:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 731:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_USBCLK_SOURCE(RCC_USBCLKSource));
 1287              		.loc 1 731 0
 1288 0008 7B68     		ldr	r3, [r7, #4]
 1289 000a 002B     		cmp	r3, #0
 1290 000c 02D0     		beq	.L90
 1291              		.loc 1 731 0 is_stmt 0 discriminator 2
 1292 000e 7B68     		ldr	r3, [r7, #4]
 1293 0010 012B     		cmp	r3, #1
 1294 0012 02D1     		bne	.L91
 1295              	.L90:
 1296              		.loc 1 731 0 discriminator 1
 1297 0014 4FF00103 		mov	r3, #1
 1298 0018 01E0     		b	.L92
 1299              	.L91:
 1300              		.loc 1 731 0 discriminator 3
 1301 001a 4FF00003 		mov	r3, #0
 1302              	.L92:
 1303              		.loc 1 731 0 discriminator 4
 1304 001e 1846     		mov	r0, r3
 1305 0020 FFF7FEFF 		bl	assert_param
 732:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 733:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CFGR_USBPRE_BB = RCC_USBCLKSource;
 1306              		.loc 1 733 0 is_stmt 1 discriminator 4
 1307 0024 034B     		ldr	r3, .L93
 1308 0026 7A68     		ldr	r2, [r7, #4]
 1309 0028 1A60     		str	r2, [r3, #0]
 734:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 1310              		.loc 1 734 0 discriminator 4
 1311 002a 07F10807 		add	r7, r7, #8
 1312 002e BD46     		mov	sp, r7
 1313 0030 80BD     		pop	{r7, pc}
 1314              	.L94:
 1315 0032 00BF     		.align	2
 1316              	.L93:
 1317 0034 D8004242 		.word	1111621848
 1318              		.cfi_endproc
 1319              	.LFE43:
 1321              		.section	.text.RCC_ADCCLKConfig,"ax",%progbits
 1322              		.align	2
 1323              		.global	RCC_ADCCLKConfig
 1324              		.thumb
 1325              		.thumb_func
 1327              	RCC_ADCCLKConfig:
 1328              	.LFB44:
 735:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #else
 736:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 737:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Configures the USB OTG FS clock (OTGFSCLK).
 738:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This function applies only to STM32 Connectivity line devices.
 739:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_OTGFSCLKSource: specifies the USB OTG FS clock source.
 740:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This clock is derived from the PLL output.
 741:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 742:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg  RCC_OTGFSCLKSource_PLLVCO_Div3: PLL VCO clock divided by 2 selected as USB OTG FS clo
 743:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg  RCC_OTGFSCLKSource_PLLVCO_Div2: PLL VCO clock divided by 2 selected as USB OTG FS clo
 744:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
 745:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 746:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_OTGFSCLKConfig(uint32_t RCC_OTGFSCLKSource)
 747:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 748:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 749:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_OTGFSCLK_SOURCE(RCC_OTGFSCLKSource));
 750:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 751:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CFGR_OTGFSPRE_BB = RCC_OTGFSCLKSource;
 752:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 753:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
 754:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 755:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 756:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Configures the ADC clock (ADCCLK).
 757:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_PCLK2: defines the ADC clock divider. This clock is derived from 
 758:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   the APB2 clock (PCLK2).
 759:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 760:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_PCLK2_Div2: ADC clock = PCLK2/2
 761:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_PCLK2_Div4: ADC clock = PCLK2/4
 762:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_PCLK2_Div6: ADC clock = PCLK2/6
 763:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_PCLK2_Div8: ADC clock = PCLK2/8
 764:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
 765:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 766:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_ADCCLKConfig(uint32_t RCC_PCLK2)
 767:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 1329              		.loc 1 767 0
 1330              		.cfi_startproc
 1331              		@ args = 0, pretend = 0, frame = 16
 1332              		@ frame_needed = 1, uses_anonymous_args = 0
 1333 0000 80B5     		push	{r7, lr}
 1334              	.LCFI43:
 1335              		.cfi_def_cfa_offset 8
 1336              		.cfi_offset 7, -8
 1337              		.cfi_offset 14, -4
 1338 0002 84B0     		sub	sp, sp, #16
 1339              	.LCFI44:
 1340              		.cfi_def_cfa_offset 24
 1341 0004 00AF     		add	r7, sp, #0
 1342              	.LCFI45:
 1343              		.cfi_def_cfa_register 7
 1344 0006 7860     		str	r0, [r7, #4]
 768:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 1345              		.loc 1 768 0
 1346 0008 4FF00003 		mov	r3, #0
 1347 000c FB60     		str	r3, [r7, #12]
 769:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 770:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_ADCCLK(RCC_PCLK2));
 1348              		.loc 1 770 0
 1349 000e 7B68     		ldr	r3, [r7, #4]
 1350 0010 002B     		cmp	r3, #0
 1351 0012 0BD0     		beq	.L96
 1352              		.loc 1 770 0 is_stmt 0 discriminator 2
 1353 0014 7B68     		ldr	r3, [r7, #4]
 1354 0016 B3F5804F 		cmp	r3, #16384
 1355 001a 07D0     		beq	.L96
 1356              		.loc 1 770 0 discriminator 1
 1357 001c 7B68     		ldr	r3, [r7, #4]
 1358 001e B3F5004F 		cmp	r3, #32768
 1359 0022 03D0     		beq	.L96
 1360              		.loc 1 770 0 discriminator 2
 1361 0024 7B68     		ldr	r3, [r7, #4]
 1362 0026 B3F5404F 		cmp	r3, #49152
 1363 002a 02D1     		bne	.L97
 1364              	.L96:
 1365              		.loc 1 770 0 discriminator 1
 1366 002c 4FF00103 		mov	r3, #1
 1367 0030 01E0     		b	.L98
 1368              	.L97:
 1369              		.loc 1 770 0 discriminator 3
 1370 0032 4FF00003 		mov	r3, #0
 1371              	.L98:
 1372              		.loc 1 770 0 discriminator 4
 1373 0036 1846     		mov	r0, r3
 1374 0038 FFF7FEFF 		bl	assert_param
 771:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR;
 1375              		.loc 1 771 0 is_stmt 1 discriminator 4
 1376 003c 084B     		ldr	r3, .L99
 1377 003e 5B68     		ldr	r3, [r3, #4]
 1378 0040 FB60     		str	r3, [r7, #12]
 772:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Clear ADCPRE[1:0] bits */
 773:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg &= CFGR_ADCPRE_Reset_Mask;
 1379              		.loc 1 773 0 discriminator 4
 1380 0042 FB68     		ldr	r3, [r7, #12]
 1381 0044 23F44043 		bic	r3, r3, #49152
 1382 0048 FB60     		str	r3, [r7, #12]
 774:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Set ADCPRE[1:0] bits according to RCC_PCLK2 value */
 775:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_PCLK2;
 1383              		.loc 1 775 0 discriminator 4
 1384 004a FA68     		ldr	r2, [r7, #12]
 1385 004c 7B68     		ldr	r3, [r7, #4]
 1386 004e 1343     		orrs	r3, r3, r2
 1387 0050 FB60     		str	r3, [r7, #12]
 776:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Store the new value */
 777:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC->CFGR = tmpreg;
 1388              		.loc 1 777 0 discriminator 4
 1389 0052 034B     		ldr	r3, .L99
 1390 0054 FA68     		ldr	r2, [r7, #12]
 1391 0056 5A60     		str	r2, [r3, #4]
 778:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 1392              		.loc 1 778 0 discriminator 4
 1393 0058 07F11007 		add	r7, r7, #16
 1394 005c BD46     		mov	sp, r7
 1395 005e 80BD     		pop	{r7, pc}
 1396              	.L100:
 1397              		.align	2
 1398              	.L99:
 1399 0060 00100240 		.word	1073876992
 1400              		.cfi_endproc
 1401              	.LFE44:
 1403              		.section	.text.RCC_LSEConfig,"ax",%progbits
 1404              		.align	2
 1405              		.global	RCC_LSEConfig
 1406              		.thumb
 1407              		.thumb_func
 1409              	RCC_LSEConfig:
 1410              	.LFB45:
 779:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 780:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
 781:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 782:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Configures the I2S2 clock source(I2S2CLK).
 783:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @note
 784:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   - This function must be called before enabling I2S2 APB clock.
 785:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line devices.
 786:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_I2S2CLKSource: specifies the I2S2 clock source.
 787:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 788:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_I2S2CLKSource_SYSCLK: system clock selected as I2S2 clock entry
 789:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_I2S2CLKSource_PLL3_VCO: PLL3 VCO clock selected as I2S2 clock entry
 790:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
 791:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 792:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_I2S2CLKConfig(uint32_t RCC_I2S2CLKSource)
 793:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 794:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 795:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_I2S2CLK_SOURCE(RCC_I2S2CLKSource));
 796:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 797:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CFGR2_I2S2SRC_BB = RCC_I2S2CLKSource;
 798:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 799:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 800:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 801:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Configures the I2S3 clock source(I2S2CLK).
 802:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @note
 803:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   - This function must be called before enabling I2S3 APB clock.
 804:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line devices.
 805:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_I2S3CLKSource: specifies the I2S3 clock source.
 806:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 807:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_I2S3CLKSource_SYSCLK: system clock selected as I2S3 clock entry
 808:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_I2S3CLKSource_PLL3_VCO: PLL3 VCO clock selected as I2S3 clock entry
 809:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
 810:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 811:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_I2S3CLKConfig(uint32_t RCC_I2S3CLKSource)
 812:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 813:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 814:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_I2S3CLK_SOURCE(RCC_I2S3CLKSource));
 815:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 816:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CFGR2_I2S3SRC_BB = RCC_I2S3CLKSource;
 817:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 818:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */
 819:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 820:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 821:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Configures the External Low Speed oscillator (LSE).
 822:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_LSE: specifies the new state of the LSE.
 823:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 824:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_LSE_OFF: LSE oscillator OFF
 825:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_LSE_ON: LSE oscillator ON
 826:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_LSE_Bypass: LSE oscillator bypassed with external clock
 827:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
 828:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 829:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_LSEConfig(uint8_t RCC_LSE)
 830:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 1411              		.loc 1 830 0
 1412              		.cfi_startproc
 1413              		@ args = 0, pretend = 0, frame = 8
 1414              		@ frame_needed = 1, uses_anonymous_args = 0
 1415 0000 80B5     		push	{r7, lr}
 1416              	.LCFI46:
 1417              		.cfi_def_cfa_offset 8
 1418              		.cfi_offset 7, -8
 1419              		.cfi_offset 14, -4
 1420 0002 82B0     		sub	sp, sp, #8
 1421              	.LCFI47:
 1422              		.cfi_def_cfa_offset 16
 1423 0004 00AF     		add	r7, sp, #0
 1424              	.LCFI48:
 1425              		.cfi_def_cfa_register 7
 1426 0006 0346     		mov	r3, r0
 1427 0008 FB71     		strb	r3, [r7, #7]
 831:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 832:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_LSE(RCC_LSE));
 1428              		.loc 1 832 0
 1429 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1430 000c 002B     		cmp	r3, #0
 1431 000e 05D0     		beq	.L102
 1432              		.loc 1 832 0 is_stmt 0 discriminator 2
 1433 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1434 0012 012B     		cmp	r3, #1
 1435 0014 02D0     		beq	.L102
 1436              		.loc 1 832 0 discriminator 1
 1437 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1438 0018 042B     		cmp	r3, #4
 1439 001a 02D1     		bne	.L103
 1440              	.L102:
 1441 001c 4FF00103 		mov	r3, #1
 1442 0020 01E0     		b	.L104
 1443              	.L103:
 1444              		.loc 1 832 0 discriminator 3
 1445 0022 4FF00003 		mov	r3, #0
 1446              	.L104:
 1447              		.loc 1 832 0 discriminator 4
 1448 0026 1846     		mov	r0, r3
 1449 0028 FFF7FEFF 		bl	assert_param
 833:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Reset LSEON and LSEBYP bits before configuring the LSE ------------------*/
 834:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Reset LSEON bit */
 835:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_OFF;
 1450              		.loc 1 835 0 is_stmt 1 discriminator 4
 1451 002c 0E4B     		ldr	r3, .L110
 1452 002e 4FF00002 		mov	r2, #0
 1453 0032 1A70     		strb	r2, [r3, #0]
 836:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Reset LSEBYP bit */
 837:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_OFF;
 1454              		.loc 1 837 0 discriminator 4
 1455 0034 0C4B     		ldr	r3, .L110
 1456 0036 4FF00002 		mov	r2, #0
 1457 003a 1A70     		strb	r2, [r3, #0]
 838:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Configure LSE (RCC_LSE_OFF is already covered by the code section above) */
 839:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   switch(RCC_LSE)
 1458              		.loc 1 839 0 discriminator 4
 1459 003c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1460 003e 012B     		cmp	r3, #1
 1461 0040 02D0     		beq	.L106
 1462 0042 042B     		cmp	r3, #4
 1463 0044 05D0     		beq	.L107
 1464              		.loc 1 839 0 is_stmt 0
 1465 0046 09E0     		b	.L109
 1466              	.L106:
 840:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   {
 841:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****     case RCC_LSE_ON:
 842:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       /* Set LSEON bit */
 843:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_ON;
 1467              		.loc 1 843 0 is_stmt 1
 1468 0048 074B     		ldr	r3, .L110
 1469 004a 4FF00102 		mov	r2, #1
 1470 004e 1A70     		strb	r2, [r3, #0]
 844:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       break;
 1471              		.loc 1 844 0
 1472 0050 05E0     		b	.L101
 1473              	.L107:
 845:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       
 846:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****     case RCC_LSE_Bypass:
 847:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       /* Set LSEBYP and LSEON bits */
 848:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_Bypass | RCC_LSE_ON;
 1474              		.loc 1 848 0
 1475 0052 054B     		ldr	r3, .L110
 1476 0054 4FF00502 		mov	r2, #5
 1477 0058 1A70     		strb	r2, [r3, #0]
 849:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       break;            
 1478              		.loc 1 849 0
 1479 005a 00E0     		b	.L101
 1480              	.L109:
 850:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       
 851:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****     default:
 852:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       break;      
 1481              		.loc 1 852 0
 1482 005c 00BF     		nop
 1483              	.L101:
 853:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   }
 854:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 1484              		.loc 1 854 0
 1485 005e 07F10807 		add	r7, r7, #8
 1486 0062 BD46     		mov	sp, r7
 1487 0064 80BD     		pop	{r7, pc}
 1488              	.L111:
 1489 0066 00BF     		.align	2
 1490              	.L110:
 1491 0068 20100240 		.word	1073877024
 1492              		.cfi_endproc
 1493              	.LFE45:
 1495              		.section	.text.RCC_LSICmd,"ax",%progbits
 1496              		.align	2
 1497              		.global	RCC_LSICmd
 1498              		.thumb
 1499              		.thumb_func
 1501              	RCC_LSICmd:
 1502              	.LFB46:
 855:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 856:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 857:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the Internal Low Speed oscillator (LSI).
 858:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @note   LSI can not be disabled if the IWDG is running.
 859:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the LSI. This parameter can be: ENABLE or DISABLE.
 860:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
 861:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 862:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_LSICmd(FunctionalState NewState)
 863:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 1503              		.loc 1 863 0
 1504              		.cfi_startproc
 1505              		@ args = 0, pretend = 0, frame = 8
 1506              		@ frame_needed = 1, uses_anonymous_args = 0
 1507 0000 80B5     		push	{r7, lr}
 1508              	.LCFI49:
 1509              		.cfi_def_cfa_offset 8
 1510              		.cfi_offset 7, -8
 1511              		.cfi_offset 14, -4
 1512 0002 82B0     		sub	sp, sp, #8
 1513              	.LCFI50:
 1514              		.cfi_def_cfa_offset 16
 1515 0004 00AF     		add	r7, sp, #0
 1516              	.LCFI51:
 1517              		.cfi_def_cfa_register 7
 1518 0006 0346     		mov	r3, r0
 1519 0008 FB71     		strb	r3, [r7, #7]
 864:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 865:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1520              		.loc 1 865 0
 1521 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1522 000c 002B     		cmp	r3, #0
 1523 000e 02D0     		beq	.L113
 1524              		.loc 1 865 0 is_stmt 0 discriminator 2
 1525 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1526 0012 012B     		cmp	r3, #1
 1527 0014 02D1     		bne	.L114
 1528              	.L113:
 1529              		.loc 1 865 0 discriminator 1
 1530 0016 4FF00103 		mov	r3, #1
 1531 001a 01E0     		b	.L115
 1532              	.L114:
 1533              		.loc 1 865 0 discriminator 3
 1534 001c 4FF00003 		mov	r3, #0
 1535              	.L115:
 1536              		.loc 1 865 0 discriminator 4
 1537 0020 1846     		mov	r0, r3
 1538 0022 FFF7FEFF 		bl	assert_param
 866:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CSR_LSION_BB = (uint32_t)NewState;
 1539              		.loc 1 866 0 is_stmt 1 discriminator 4
 1540 0026 034B     		ldr	r3, .L116
 1541 0028 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1542 002a 1A60     		str	r2, [r3, #0]
 867:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 1543              		.loc 1 867 0 discriminator 4
 1544 002c 07F10807 		add	r7, r7, #8
 1545 0030 BD46     		mov	sp, r7
 1546 0032 80BD     		pop	{r7, pc}
 1547              	.L117:
 1548              		.align	2
 1549              	.L116:
 1550 0034 80044242 		.word	1111622784
 1551              		.cfi_endproc
 1552              	.LFE46:
 1554              		.section	.text.RCC_RTCCLKConfig,"ax",%progbits
 1555              		.align	2
 1556              		.global	RCC_RTCCLKConfig
 1557              		.thumb
 1558              		.thumb_func
 1560              	RCC_RTCCLKConfig:
 1561              	.LFB47:
 868:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 869:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 870:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Configures the RTC clock (RTCCLK).
 871:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @note   Once the RTC clock is selected it can't be changed unless the Backup domain is reset.
 872:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_RTCCLKSource: specifies the RTC clock source.
 873:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 874:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_RTCCLKSource_LSE: LSE selected as RTC clock
 875:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_RTCCLKSource_LSI: LSI selected as RTC clock
 876:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_RTCCLKSource_HSE_Div128: HSE clock divided by 128 selected as RTC clock
 877:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
 878:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 879:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_RTCCLKConfig(uint32_t RCC_RTCCLKSource)
 880:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 1562              		.loc 1 880 0
 1563              		.cfi_startproc
 1564              		@ args = 0, pretend = 0, frame = 8
 1565              		@ frame_needed = 1, uses_anonymous_args = 0
 1566 0000 80B5     		push	{r7, lr}
 1567              	.LCFI52:
 1568              		.cfi_def_cfa_offset 8
 1569              		.cfi_offset 7, -8
 1570              		.cfi_offset 14, -4
 1571 0002 82B0     		sub	sp, sp, #8
 1572              	.LCFI53:
 1573              		.cfi_def_cfa_offset 16
 1574 0004 00AF     		add	r7, sp, #0
 1575              	.LCFI54:
 1576              		.cfi_def_cfa_register 7
 1577 0006 7860     		str	r0, [r7, #4]
 881:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 882:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_RTCCLK_SOURCE(RCC_RTCCLKSource));
 1578              		.loc 1 882 0
 1579 0008 7B68     		ldr	r3, [r7, #4]
 1580 000a B3F5807F 		cmp	r3, #256
 1581 000e 07D0     		beq	.L119
 1582              		.loc 1 882 0 is_stmt 0 discriminator 2
 1583 0010 7B68     		ldr	r3, [r7, #4]
 1584 0012 B3F5007F 		cmp	r3, #512
 1585 0016 03D0     		beq	.L119
 1586              		.loc 1 882 0 discriminator 1
 1587 0018 7B68     		ldr	r3, [r7, #4]
 1588 001a B3F5407F 		cmp	r3, #768
 1589 001e 02D1     		bne	.L120
 1590              	.L119:
 1591 0020 4FF00103 		mov	r3, #1
 1592 0024 01E0     		b	.L121
 1593              	.L120:
 1594              		.loc 1 882 0 discriminator 3
 1595 0026 4FF00003 		mov	r3, #0
 1596              	.L121:
 1597              		.loc 1 882 0 discriminator 4
 1598 002a 1846     		mov	r0, r3
 1599 002c FFF7FEFF 		bl	assert_param
 883:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Select the RTC clock source */
 884:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC->BDCR |= RCC_RTCCLKSource;
 1600              		.loc 1 884 0 is_stmt 1 discriminator 4
 1601 0030 044B     		ldr	r3, .L122
 1602 0032 044A     		ldr	r2, .L122
 1603 0034 116A     		ldr	r1, [r2, #32]
 1604 0036 7A68     		ldr	r2, [r7, #4]
 1605 0038 0A43     		orrs	r2, r2, r1
 1606 003a 1A62     		str	r2, [r3, #32]
 885:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 1607              		.loc 1 885 0 discriminator 4
 1608 003c 07F10807 		add	r7, r7, #8
 1609 0040 BD46     		mov	sp, r7
 1610 0042 80BD     		pop	{r7, pc}
 1611              	.L123:
 1612              		.align	2
 1613              	.L122:
 1614 0044 00100240 		.word	1073876992
 1615              		.cfi_endproc
 1616              	.LFE47:
 1618              		.section	.text.RCC_RTCCLKCmd,"ax",%progbits
 1619              		.align	2
 1620              		.global	RCC_RTCCLKCmd
 1621              		.thumb
 1622              		.thumb_func
 1624              	RCC_RTCCLKCmd:
 1625              	.LFB48:
 886:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 887:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 888:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the RTC clock.
 889:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @note   This function must be used only after the RTC clock was selected using the RCC_RTCCLKCo
 890:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the RTC clock. This parameter can be: ENABLE or DISABLE.
 891:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
 892:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 893:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_RTCCLKCmd(FunctionalState NewState)
 894:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 1626              		.loc 1 894 0
 1627              		.cfi_startproc
 1628              		@ args = 0, pretend = 0, frame = 8
 1629              		@ frame_needed = 1, uses_anonymous_args = 0
 1630 0000 80B5     		push	{r7, lr}
 1631              	.LCFI55:
 1632              		.cfi_def_cfa_offset 8
 1633              		.cfi_offset 7, -8
 1634              		.cfi_offset 14, -4
 1635 0002 82B0     		sub	sp, sp, #8
 1636              	.LCFI56:
 1637              		.cfi_def_cfa_offset 16
 1638 0004 00AF     		add	r7, sp, #0
 1639              	.LCFI57:
 1640              		.cfi_def_cfa_register 7
 1641 0006 0346     		mov	r3, r0
 1642 0008 FB71     		strb	r3, [r7, #7]
 895:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 896:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1643              		.loc 1 896 0
 1644 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1645 000c 002B     		cmp	r3, #0
 1646 000e 02D0     		beq	.L125
 1647              		.loc 1 896 0 is_stmt 0 discriminator 2
 1648 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1649 0012 012B     		cmp	r3, #1
 1650 0014 02D1     		bne	.L126
 1651              	.L125:
 1652              		.loc 1 896 0 discriminator 1
 1653 0016 4FF00103 		mov	r3, #1
 1654 001a 01E0     		b	.L127
 1655              	.L126:
 1656              		.loc 1 896 0 discriminator 3
 1657 001c 4FF00003 		mov	r3, #0
 1658              	.L127:
 1659              		.loc 1 896 0 discriminator 4
 1660 0020 1846     		mov	r0, r3
 1661 0022 FFF7FEFF 		bl	assert_param
 897:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) BDCR_RTCEN_BB = (uint32_t)NewState;
 1662              		.loc 1 897 0 is_stmt 1 discriminator 4
 1663 0026 034B     		ldr	r3, .L128
 1664 0028 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1665 002a 1A60     		str	r2, [r3, #0]
 898:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 1666              		.loc 1 898 0 discriminator 4
 1667 002c 07F10807 		add	r7, r7, #8
 1668 0030 BD46     		mov	sp, r7
 1669 0032 80BD     		pop	{r7, pc}
 1670              	.L129:
 1671              		.align	2
 1672              	.L128:
 1673 0034 3C044242 		.word	1111622716
 1674              		.cfi_endproc
 1675              	.LFE48:
 1677              		.section	.text.RCC_GetClocksFreq,"ax",%progbits
 1678              		.align	2
 1679              		.global	RCC_GetClocksFreq
 1680              		.thumb
 1681              		.thumb_func
 1683              	RCC_GetClocksFreq:
 1684              	.LFB49:
 899:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 900:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 901:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Returns the frequencies of different on chip clocks.
 902:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_Clocks: pointer to a RCC_ClocksTypeDef structure which will hold
 903:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *         the clocks frequencies.
 904:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @note   The result of this function could be not correct when using 
 905:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *         fractional value for HSE crystal.  
 906:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
 907:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 908:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_GetClocksFreq(RCC_ClocksTypeDef* RCC_Clocks)
 909:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 1685              		.loc 1 909 0
 1686              		.cfi_startproc
 1687              		@ args = 0, pretend = 0, frame = 32
 1688              		@ frame_needed = 1, uses_anonymous_args = 0
 1689              		@ link register save eliminated.
 1690 0000 80B4     		push	{r7}
 1691              	.LCFI58:
 1692              		.cfi_def_cfa_offset 4
 1693              		.cfi_offset 7, -4
 1694 0002 89B0     		sub	sp, sp, #36
 1695              	.LCFI59:
 1696              		.cfi_def_cfa_offset 40
 1697 0004 00AF     		add	r7, sp, #0
 1698              	.LCFI60:
 1699              		.cfi_def_cfa_register 7
 1700 0006 7860     		str	r0, [r7, #4]
 910:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   uint32_t tmp = 0, pllmull = 0, pllsource = 0, presc = 0;
 1701              		.loc 1 910 0
 1702 0008 4FF00003 		mov	r3, #0
 1703 000c FB61     		str	r3, [r7, #28]
 1704 000e 4FF00003 		mov	r3, #0
 1705 0012 BB61     		str	r3, [r7, #24]
 1706 0014 4FF00003 		mov	r3, #0
 1707 0018 7B61     		str	r3, [r7, #20]
 1708 001a 4FF00003 		mov	r3, #0
 1709 001e 3B61     		str	r3, [r7, #16]
 911:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 912:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #ifdef  STM32F10X_CL
 913:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   uint32_t prediv1source = 0, prediv1factor = 0, prediv2factor = 0, pll2mull = 0;
 914:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */
 915:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 916:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL)
 917:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   uint32_t prediv1factor = 0;
 1710              		.loc 1 917 0
 1711 0020 4FF00003 		mov	r3, #0
 1712 0024 FB60     		str	r3, [r7, #12]
 918:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #endif
 919:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****     
 920:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 921:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmp = RCC->CFGR & CFGR_SWS_Mask;
 1713              		.loc 1 921 0
 1714 0026 504B     		ldr	r3, .L139
 1715 0028 5B68     		ldr	r3, [r3, #4]
 1716 002a 03F00C03 		and	r3, r3, #12
 1717 002e FB61     		str	r3, [r7, #28]
 922:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   
 923:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   switch (tmp)
 1718              		.loc 1 923 0
 1719 0030 FB69     		ldr	r3, [r7, #28]
 1720 0032 042B     		cmp	r3, #4
 1721 0034 07D0     		beq	.L133
 1722 0036 082B     		cmp	r3, #8
 1723 0038 09D0     		beq	.L134
 1724 003a 002B     		cmp	r3, #0
 1725 003c 32D1     		bne	.L138
 1726              	.L132:
 924:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   {
 925:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****     case 0x00:  /* HSI used as system clock */
 926:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       RCC_Clocks->SYSCLK_Frequency = HSI_VALUE;
 1727              		.loc 1 926 0
 1728 003e 7B68     		ldr	r3, [r7, #4]
 1729 0040 4A4A     		ldr	r2, .L139+4
 1730 0042 1A60     		str	r2, [r3, #0]
 927:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       break;
 1731              		.loc 1 927 0
 1732 0044 32E0     		b	.L135
 1733              	.L133:
 928:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****     case 0x04:  /* HSE used as system clock */
 929:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       RCC_Clocks->SYSCLK_Frequency = HSE_VALUE;
 1734              		.loc 1 929 0
 1735 0046 7B68     		ldr	r3, [r7, #4]
 1736 0048 484A     		ldr	r2, .L139+4
 1737 004a 1A60     		str	r2, [r3, #0]
 930:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       break;
 1738              		.loc 1 930 0
 1739 004c 2EE0     		b	.L135
 1740              	.L134:
 931:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****     case 0x08:  /* PLL used as system clock */
 932:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 933:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       /* Get PLL clock source and multiplication factor ----------------------*/
 934:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       pllmull = RCC->CFGR & CFGR_PLLMull_Mask;
 1741              		.loc 1 934 0
 1742 004e 464B     		ldr	r3, .L139
 1743 0050 5B68     		ldr	r3, [r3, #4]
 1744 0052 03F47013 		and	r3, r3, #3932160
 1745 0056 BB61     		str	r3, [r7, #24]
 935:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       pllsource = RCC->CFGR & CFGR_PLLSRC_Mask;
 1746              		.loc 1 935 0
 1747 0058 434B     		ldr	r3, .L139
 1748 005a 5B68     		ldr	r3, [r3, #4]
 1749 005c 03F48033 		and	r3, r3, #65536
 1750 0060 7B61     		str	r3, [r7, #20]
 936:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       
 937:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #ifndef STM32F10X_CL      
 938:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       pllmull = ( pllmull >> 18) + 2;
 1751              		.loc 1 938 0
 1752 0062 BB69     		ldr	r3, [r7, #24]
 1753 0064 4FEA9343 		lsr	r3, r3, #18
 1754 0068 03F10203 		add	r3, r3, #2
 1755 006c BB61     		str	r3, [r7, #24]
 939:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       
 940:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       if (pllsource == 0x00)
 1756              		.loc 1 940 0
 1757 006e 7B69     		ldr	r3, [r7, #20]
 1758 0070 002B     		cmp	r3, #0
 1759 0072 06D1     		bne	.L136
 941:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       {/* HSI oscillator clock divided by 2 selected as PLL clock entry */
 942:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****         RCC_Clocks->SYSCLK_Frequency = (HSI_VALUE >> 1) * pllmull;
 1760              		.loc 1 942 0
 1761 0074 BB69     		ldr	r3, [r7, #24]
 1762 0076 3E4A     		ldr	r2, .L139+8
 1763 0078 02FB03F2 		mul	r2, r2, r3
 1764 007c 7B68     		ldr	r3, [r7, #4]
 1765 007e 1A60     		str	r2, [r3, #0]
 943:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       }
 944:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       else
 945:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       {
 946:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****  #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL)
 947:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****        prediv1factor = (RCC->CFGR2 & CFGR2_PREDIV1) + 1;
 948:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****        /* HSE oscillator clock selected as PREDIV1 clock entry */
 949:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****        RCC_Clocks->SYSCLK_Frequency = (HSE_VALUE / prediv1factor) * pllmull; 
 950:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****  #else
 951:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****         /* HSE selected as PLL clock entry */
 952:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****         if ((RCC->CFGR & CFGR_PLLXTPRE_Mask) != (uint32_t)RESET)
 953:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****         {/* HSE oscillator clock divided by 2 */
 954:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****           RCC_Clocks->SYSCLK_Frequency = (HSE_VALUE >> 1) * pllmull;
 955:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****         }
 956:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****         else
 957:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****         {
 958:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****           RCC_Clocks->SYSCLK_Frequency = HSE_VALUE * pllmull;
 959:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****         }
 960:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****  #endif
 961:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       }
 962:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #else
 963:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       pllmull = pllmull >> 18;
 964:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       
 965:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       if (pllmull != 0x0D)
 966:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       {
 967:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****          pllmull += 2;
 968:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       }
 969:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       else
 970:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       { /* PLL multiplication factor = PLL input clock * 6.5 */
 971:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****         pllmull = 13 / 2; 
 972:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       }
 973:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****             
 974:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       if (pllsource == 0x00)
 975:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       {/* HSI oscillator clock divided by 2 selected as PLL clock entry */
 976:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****         RCC_Clocks->SYSCLK_Frequency = (HSI_VALUE >> 1) * pllmull;
 977:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       }
 978:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       else
 979:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       {/* PREDIV1 selected as PLL clock entry */
 980:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****         
 981:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****         /* Get PREDIV1 clock source and division factor */
 982:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****         prediv1source = RCC->CFGR2 & CFGR2_PREDIV1SRC;
 983:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****         prediv1factor = (RCC->CFGR2 & CFGR2_PREDIV1) + 1;
 984:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****         
 985:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****         if (prediv1source == 0)
 986:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****         { /* HSE oscillator clock selected as PREDIV1 clock entry */
 987:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****           RCC_Clocks->SYSCLK_Frequency = (HSE_VALUE / prediv1factor) * pllmull;          
 988:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****         }
 989:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****         else
 990:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****         {/* PLL2 clock selected as PREDIV1 clock entry */
 991:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****           
 992:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****           /* Get PREDIV2 division factor and PLL2 multiplication factor */
 993:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****           prediv2factor = ((RCC->CFGR2 & CFGR2_PREDIV2) >> 4) + 1;
 994:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****           pll2mull = ((RCC->CFGR2 & CFGR2_PLL2MUL) >> 8 ) + 2; 
 995:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****           RCC_Clocks->SYSCLK_Frequency = (((HSE_VALUE / prediv2factor) * pll2mull) / prediv1factor)
 996:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****         }
 997:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       }
 998:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
 999:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       break;
 1766              		.loc 1 999 0
 1767 0080 14E0     		b	.L135
 1768              	.L136:
 947:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****        prediv1factor = (RCC->CFGR2 & CFGR2_PREDIV1) + 1;
 1769              		.loc 1 947 0
 1770 0082 394B     		ldr	r3, .L139
 1771 0084 DB6A     		ldr	r3, [r3, #44]
 1772 0086 03F00F03 		and	r3, r3, #15
 1773 008a 03F10103 		add	r3, r3, #1
 1774 008e FB60     		str	r3, [r7, #12]
 949:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****        RCC_Clocks->SYSCLK_Frequency = (HSE_VALUE / prediv1factor) * pllmull; 
 1775              		.loc 1 949 0
 1776 0090 364A     		ldr	r2, .L139+4
 1777 0092 FB68     		ldr	r3, [r7, #12]
 1778 0094 B2FBF3F3 		udiv	r3, r2, r3
 1779 0098 BA69     		ldr	r2, [r7, #24]
 1780 009a 02FB03F2 		mul	r2, r2, r3
 1781 009e 7B68     		ldr	r3, [r7, #4]
 1782 00a0 1A60     		str	r2, [r3, #0]
 1783              		.loc 1 999 0
 1784 00a2 03E0     		b	.L135
 1785              	.L138:
1000:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
1001:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****     default:
1002:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       RCC_Clocks->SYSCLK_Frequency = HSI_VALUE;
 1786              		.loc 1 1002 0
 1787 00a4 7B68     		ldr	r3, [r7, #4]
 1788 00a6 314A     		ldr	r2, .L139+4
 1789 00a8 1A60     		str	r2, [r3, #0]
1003:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       break;
 1790              		.loc 1 1003 0
 1791 00aa 00BF     		nop
 1792              	.L135:
1004:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   }
1005:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
1006:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Compute HCLK, PCLK1, PCLK2 and ADCCLK clocks frequencies ----------------*/
1007:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Get HCLK prescaler */
1008:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmp = RCC->CFGR & CFGR_HPRE_Set_Mask;
 1793              		.loc 1 1008 0
 1794 00ac 2E4B     		ldr	r3, .L139
 1795 00ae 5B68     		ldr	r3, [r3, #4]
 1796 00b0 03F0F003 		and	r3, r3, #240
 1797 00b4 FB61     		str	r3, [r7, #28]
1009:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmp = tmp >> 4;
 1798              		.loc 1 1009 0
 1799 00b6 FB69     		ldr	r3, [r7, #28]
 1800 00b8 4FEA1313 		lsr	r3, r3, #4
 1801 00bc FB61     		str	r3, [r7, #28]
1010:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   presc = APBAHBPrescTable[tmp];
 1802              		.loc 1 1010 0
 1803 00be 2D4A     		ldr	r2, .L139+12
 1804 00c0 FB69     		ldr	r3, [r7, #28]
 1805 00c2 D318     		adds	r3, r2, r3
 1806 00c4 1B78     		ldrb	r3, [r3, #0]
 1807 00c6 DBB2     		uxtb	r3, r3
 1808 00c8 3B61     		str	r3, [r7, #16]
1011:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* HCLK clock frequency */
1012:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC_Clocks->HCLK_Frequency = RCC_Clocks->SYSCLK_Frequency >> presc;
 1809              		.loc 1 1012 0
 1810 00ca 7B68     		ldr	r3, [r7, #4]
 1811 00cc 1A68     		ldr	r2, [r3, #0]
 1812 00ce 3B69     		ldr	r3, [r7, #16]
 1813 00d0 22FA03F2 		lsr	r2, r2, r3
 1814 00d4 7B68     		ldr	r3, [r7, #4]
 1815 00d6 5A60     		str	r2, [r3, #4]
1013:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Get PCLK1 prescaler */
1014:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmp = RCC->CFGR & CFGR_PPRE1_Set_Mask;
 1816              		.loc 1 1014 0
 1817 00d8 234B     		ldr	r3, .L139
 1818 00da 5B68     		ldr	r3, [r3, #4]
 1819 00dc 03F4E063 		and	r3, r3, #1792
 1820 00e0 FB61     		str	r3, [r7, #28]
1015:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmp = tmp >> 8;
 1821              		.loc 1 1015 0
 1822 00e2 FB69     		ldr	r3, [r7, #28]
 1823 00e4 4FEA1323 		lsr	r3, r3, #8
 1824 00e8 FB61     		str	r3, [r7, #28]
1016:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   presc = APBAHBPrescTable[tmp];
 1825              		.loc 1 1016 0
 1826 00ea 224A     		ldr	r2, .L139+12
 1827 00ec FB69     		ldr	r3, [r7, #28]
 1828 00ee D318     		adds	r3, r2, r3
 1829 00f0 1B78     		ldrb	r3, [r3, #0]
 1830 00f2 DBB2     		uxtb	r3, r3
 1831 00f4 3B61     		str	r3, [r7, #16]
1017:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* PCLK1 clock frequency */
1018:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC_Clocks->PCLK1_Frequency = RCC_Clocks->HCLK_Frequency >> presc;
 1832              		.loc 1 1018 0
 1833 00f6 7B68     		ldr	r3, [r7, #4]
 1834 00f8 5A68     		ldr	r2, [r3, #4]
 1835 00fa 3B69     		ldr	r3, [r7, #16]
 1836 00fc 22FA03F2 		lsr	r2, r2, r3
 1837 0100 7B68     		ldr	r3, [r7, #4]
 1838 0102 9A60     		str	r2, [r3, #8]
1019:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Get PCLK2 prescaler */
1020:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmp = RCC->CFGR & CFGR_PPRE2_Set_Mask;
 1839              		.loc 1 1020 0
 1840 0104 184B     		ldr	r3, .L139
 1841 0106 5B68     		ldr	r3, [r3, #4]
 1842 0108 03F46053 		and	r3, r3, #14336
 1843 010c FB61     		str	r3, [r7, #28]
1021:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmp = tmp >> 11;
 1844              		.loc 1 1021 0
 1845 010e FB69     		ldr	r3, [r7, #28]
 1846 0110 4FEAD323 		lsr	r3, r3, #11
 1847 0114 FB61     		str	r3, [r7, #28]
1022:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   presc = APBAHBPrescTable[tmp];
 1848              		.loc 1 1022 0
 1849 0116 174A     		ldr	r2, .L139+12
 1850 0118 FB69     		ldr	r3, [r7, #28]
 1851 011a D318     		adds	r3, r2, r3
 1852 011c 1B78     		ldrb	r3, [r3, #0]
 1853 011e DBB2     		uxtb	r3, r3
 1854 0120 3B61     		str	r3, [r7, #16]
1023:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* PCLK2 clock frequency */
1024:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC_Clocks->PCLK2_Frequency = RCC_Clocks->HCLK_Frequency >> presc;
 1855              		.loc 1 1024 0
 1856 0122 7B68     		ldr	r3, [r7, #4]
 1857 0124 5A68     		ldr	r2, [r3, #4]
 1858 0126 3B69     		ldr	r3, [r7, #16]
 1859 0128 22FA03F2 		lsr	r2, r2, r3
 1860 012c 7B68     		ldr	r3, [r7, #4]
 1861 012e DA60     		str	r2, [r3, #12]
1025:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Get ADCCLK prescaler */
1026:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmp = RCC->CFGR & CFGR_ADCPRE_Set_Mask;
 1862              		.loc 1 1026 0
 1863 0130 0D4B     		ldr	r3, .L139
 1864 0132 5B68     		ldr	r3, [r3, #4]
 1865 0134 03F44043 		and	r3, r3, #49152
 1866 0138 FB61     		str	r3, [r7, #28]
1027:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmp = tmp >> 14;
 1867              		.loc 1 1027 0
 1868 013a FB69     		ldr	r3, [r7, #28]
 1869 013c 4FEA9333 		lsr	r3, r3, #14
 1870 0140 FB61     		str	r3, [r7, #28]
1028:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   presc = ADCPrescTable[tmp];
 1871              		.loc 1 1028 0
 1872 0142 0D4A     		ldr	r2, .L139+16
 1873 0144 FB69     		ldr	r3, [r7, #28]
 1874 0146 D318     		adds	r3, r2, r3
 1875 0148 1B78     		ldrb	r3, [r3, #0]
 1876 014a DBB2     		uxtb	r3, r3
 1877 014c 3B61     		str	r3, [r7, #16]
1029:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* ADCCLK clock frequency */
1030:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC_Clocks->ADCCLK_Frequency = RCC_Clocks->PCLK2_Frequency / presc;
 1878              		.loc 1 1030 0
 1879 014e 7B68     		ldr	r3, [r7, #4]
 1880 0150 DA68     		ldr	r2, [r3, #12]
 1881 0152 3B69     		ldr	r3, [r7, #16]
 1882 0154 B2FBF3F2 		udiv	r2, r2, r3
 1883 0158 7B68     		ldr	r3, [r7, #4]
 1884 015a 1A61     		str	r2, [r3, #16]
1031:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 1885              		.loc 1 1031 0
 1886 015c 07F12407 		add	r7, r7, #36
 1887 0160 BD46     		mov	sp, r7
 1888 0162 80BC     		pop	{r7}
 1889 0164 7047     		bx	lr
 1890              	.L140:
 1891 0166 00BF     		.align	2
 1892              	.L139:
 1893 0168 00100240 		.word	1073876992
 1894 016c 00127A00 		.word	8000000
 1895 0170 00093D00 		.word	4000000
 1896 0174 00000000 		.word	APBAHBPrescTable
 1897 0178 00000000 		.word	ADCPrescTable
 1898              		.cfi_endproc
 1899              	.LFE49:
 1901              		.section	.text.RCC_AHBPeriphClockCmd,"ax",%progbits
 1902              		.align	2
 1903              		.global	RCC_AHBPeriphClockCmd
 1904              		.thumb
 1905              		.thumb_func
 1907              	RCC_AHBPeriphClockCmd:
 1908              	.LFB50:
1032:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
1033:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
1034:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the AHB peripheral clock.
1035:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_AHBPeriph: specifies the AHB peripheral to gates its clock.
1036:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   
1037:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be any combination
1038:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   of the following values:        
1039:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_DMA1
1040:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_DMA2
1041:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_SRAM
1042:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_FLITF
1043:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_CRC
1044:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_OTG_FS    
1045:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_ETH_MAC   
1046:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_ETH_MAC_Tx
1047:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_ETH_MAC_Rx
1048:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * 
1049:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be any combination of the 
1050:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   following values:        
1051:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_DMA1
1052:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_DMA2
1053:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_SRAM
1054:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_FLITF
1055:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_CRC
1056:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_FSMC
1057:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_SDIO
1058:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   
1059:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @note SRAM and FLITF clock can be disabled only during sleep mode.
1060:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
1061:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1062:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
1063:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
1064:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_AHBPeriphClockCmd(uint32_t RCC_AHBPeriph, FunctionalState NewState)
1065:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 1909              		.loc 1 1065 0
 1910              		.cfi_startproc
 1911              		@ args = 0, pretend = 0, frame = 8
 1912              		@ frame_needed = 1, uses_anonymous_args = 0
 1913 0000 80B5     		push	{r7, lr}
 1914              	.LCFI61:
 1915              		.cfi_def_cfa_offset 8
 1916              		.cfi_offset 7, -8
 1917              		.cfi_offset 14, -4
 1918 0002 82B0     		sub	sp, sp, #8
 1919              	.LCFI62:
 1920              		.cfi_def_cfa_offset 16
 1921 0004 00AF     		add	r7, sp, #0
 1922              	.LCFI63:
 1923              		.cfi_def_cfa_register 7
 1924 0006 7860     		str	r0, [r7, #4]
 1925 0008 0B46     		mov	r3, r1
 1926 000a FB70     		strb	r3, [r7, #3]
1066:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1067:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_AHB_PERIPH(RCC_AHBPeriph));
 1927              		.loc 1 1067 0
 1928 000c 7B68     		ldr	r3, [r7, #4]
 1929 000e 23F4AA63 		bic	r3, r3, #1360
 1930 0012 23F00703 		bic	r3, r3, #7
 1931 0016 002B     		cmp	r3, #0
 1932 0018 05D1     		bne	.L142
 1933              		.loc 1 1067 0 is_stmt 0 discriminator 1
 1934 001a 7B68     		ldr	r3, [r7, #4]
 1935 001c 002B     		cmp	r3, #0
 1936 001e 02D0     		beq	.L142
 1937              		.loc 1 1067 0 discriminator 3
 1938 0020 4FF00103 		mov	r3, #1
 1939 0024 01E0     		b	.L143
 1940              	.L142:
 1941              		.loc 1 1067 0 discriminator 2
 1942 0026 4FF00003 		mov	r3, #0
 1943              	.L143:
 1944              		.loc 1 1067 0 discriminator 4
 1945 002a 1846     		mov	r0, r3
 1946 002c FFF7FEFF 		bl	assert_param
1068:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1947              		.loc 1 1068 0 is_stmt 1 discriminator 4
 1948 0030 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1949 0032 002B     		cmp	r3, #0
 1950 0034 02D0     		beq	.L144
 1951              		.loc 1 1068 0 is_stmt 0 discriminator 2
 1952 0036 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1953 0038 012B     		cmp	r3, #1
 1954 003a 02D1     		bne	.L145
 1955              	.L144:
 1956              		.loc 1 1068 0 discriminator 1
 1957 003c 4FF00103 		mov	r3, #1
 1958 0040 01E0     		b	.L146
 1959              	.L145:
 1960              		.loc 1 1068 0 discriminator 3
 1961 0042 4FF00003 		mov	r3, #0
 1962              	.L146:
 1963              		.loc 1 1068 0 discriminator 4
 1964 0046 1846     		mov	r0, r3
 1965 0048 FFF7FEFF 		bl	assert_param
1069:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
1070:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
 1966              		.loc 1 1070 0 is_stmt 1 discriminator 4
 1967 004c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1968 004e 002B     		cmp	r3, #0
 1969 0050 06D0     		beq	.L147
1071:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   {
1072:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****     RCC->AHBENR |= RCC_AHBPeriph;
 1970              		.loc 1 1072 0
 1971 0052 094B     		ldr	r3, .L149
 1972 0054 084A     		ldr	r2, .L149
 1973 0056 5169     		ldr	r1, [r2, #20]
 1974 0058 7A68     		ldr	r2, [r7, #4]
 1975 005a 0A43     		orrs	r2, r2, r1
 1976 005c 5A61     		str	r2, [r3, #20]
 1977 005e 07E0     		b	.L141
 1978              	.L147:
1073:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   }
1074:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   else
1075:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   {
1076:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****     RCC->AHBENR &= ~RCC_AHBPeriph;
 1979              		.loc 1 1076 0
 1980 0060 054B     		ldr	r3, .L149
 1981 0062 054A     		ldr	r2, .L149
 1982 0064 5169     		ldr	r1, [r2, #20]
 1983 0066 7A68     		ldr	r2, [r7, #4]
 1984 0068 6FEA0202 		mvn	r2, r2
 1985 006c 0A40     		ands	r2, r2, r1
 1986 006e 5A61     		str	r2, [r3, #20]
 1987              	.L141:
1077:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   }
1078:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 1988              		.loc 1 1078 0
 1989 0070 07F10807 		add	r7, r7, #8
 1990 0074 BD46     		mov	sp, r7
 1991 0076 80BD     		pop	{r7, pc}
 1992              	.L150:
 1993              		.align	2
 1994              	.L149:
 1995 0078 00100240 		.word	1073876992
 1996              		.cfi_endproc
 1997              	.LFE50:
 1999              		.section	.text.RCC_APB2PeriphClockCmd,"ax",%progbits
 2000              		.align	2
 2001              		.global	RCC_APB2PeriphClockCmd
 2002              		.thumb
 2003              		.thumb_func
 2005              	RCC_APB2PeriphClockCmd:
 2006              	.LFB51:
1079:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
1080:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
1081:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the High Speed APB (APB2) peripheral clock.
1082:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_APB2Periph: specifies the APB2 peripheral to gates its clock.
1083:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be any combination of the following values:
1084:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_APB2Periph_AFIO, RCC_APB2Periph_GPIOA, RCC_APB2Periph_GPIOB,
1085:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_GPIOC, RCC_APB2Periph_GPIOD, RCC_APB2Periph_GPIOE,
1086:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_GPIOF, RCC_APB2Periph_GPIOG, RCC_APB2Periph_ADC1,
1087:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_ADC2, RCC_APB2Periph_TIM1, RCC_APB2Periph_SPI1,
1088:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_TIM8, RCC_APB2Periph_USART1, RCC_APB2Periph_ADC3,
1089:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_TIM15, RCC_APB2Periph_TIM16, RCC_APB2Periph_TIM17,
1090:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_TIM9, RCC_APB2Periph_TIM10, RCC_APB2Periph_TIM11     
1091:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
1092:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1093:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
1094:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
1095:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_APB2PeriphClockCmd(uint32_t RCC_APB2Periph, FunctionalState NewState)
1096:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 2007              		.loc 1 1096 0
 2008              		.cfi_startproc
 2009              		@ args = 0, pretend = 0, frame = 8
 2010              		@ frame_needed = 1, uses_anonymous_args = 0
 2011 0000 80B5     		push	{r7, lr}
 2012              	.LCFI64:
 2013              		.cfi_def_cfa_offset 8
 2014              		.cfi_offset 7, -8
 2015              		.cfi_offset 14, -4
 2016 0002 82B0     		sub	sp, sp, #8
 2017              	.LCFI65:
 2018              		.cfi_def_cfa_offset 16
 2019 0004 00AF     		add	r7, sp, #0
 2020              	.LCFI66:
 2021              		.cfi_def_cfa_register 7
 2022 0006 7860     		str	r0, [r7, #4]
 2023 0008 0B46     		mov	r3, r1
 2024 000a FB70     		strb	r3, [r7, #3]
1097:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1098:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_APB2_PERIPH(RCC_APB2Periph));
 2025              		.loc 1 1098 0
 2026 000c 7A68     		ldr	r2, [r7, #4]
 2027 000e 194B     		ldr	r3, .L159
 2028 0010 1340     		ands	r3, r3, r2
 2029 0012 002B     		cmp	r3, #0
 2030 0014 05D1     		bne	.L152
 2031              		.loc 1 1098 0 is_stmt 0 discriminator 1
 2032 0016 7B68     		ldr	r3, [r7, #4]
 2033 0018 002B     		cmp	r3, #0
 2034 001a 02D0     		beq	.L152
 2035              		.loc 1 1098 0 discriminator 3
 2036 001c 4FF00103 		mov	r3, #1
 2037 0020 01E0     		b	.L153
 2038              	.L152:
 2039              		.loc 1 1098 0 discriminator 2
 2040 0022 4FF00003 		mov	r3, #0
 2041              	.L153:
 2042              		.loc 1 1098 0 discriminator 4
 2043 0026 1846     		mov	r0, r3
 2044 0028 FFF7FEFF 		bl	assert_param
1099:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 2045              		.loc 1 1099 0 is_stmt 1 discriminator 4
 2046 002c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2047 002e 002B     		cmp	r3, #0
 2048 0030 02D0     		beq	.L154
 2049              		.loc 1 1099 0 is_stmt 0 discriminator 2
 2050 0032 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2051 0034 012B     		cmp	r3, #1
 2052 0036 02D1     		bne	.L155
 2053              	.L154:
 2054              		.loc 1 1099 0 discriminator 1
 2055 0038 4FF00103 		mov	r3, #1
 2056 003c 01E0     		b	.L156
 2057              	.L155:
 2058              		.loc 1 1099 0 discriminator 3
 2059 003e 4FF00003 		mov	r3, #0
 2060              	.L156:
 2061              		.loc 1 1099 0 discriminator 4
 2062 0042 1846     		mov	r0, r3
 2063 0044 FFF7FEFF 		bl	assert_param
1100:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
 2064              		.loc 1 1100 0 is_stmt 1 discriminator 4
 2065 0048 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2066 004a 002B     		cmp	r3, #0
 2067 004c 06D0     		beq	.L157
1101:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   {
1102:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****     RCC->APB2ENR |= RCC_APB2Periph;
 2068              		.loc 1 1102 0
 2069 004e 0A4B     		ldr	r3, .L159+4
 2070 0050 094A     		ldr	r2, .L159+4
 2071 0052 9169     		ldr	r1, [r2, #24]
 2072 0054 7A68     		ldr	r2, [r7, #4]
 2073 0056 0A43     		orrs	r2, r2, r1
 2074 0058 9A61     		str	r2, [r3, #24]
 2075 005a 07E0     		b	.L151
 2076              	.L157:
1103:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   }
1104:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   else
1105:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   {
1106:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****     RCC->APB2ENR &= ~RCC_APB2Periph;
 2077              		.loc 1 1106 0
 2078 005c 064B     		ldr	r3, .L159+4
 2079 005e 064A     		ldr	r2, .L159+4
 2080 0060 9169     		ldr	r1, [r2, #24]
 2081 0062 7A68     		ldr	r2, [r7, #4]
 2082 0064 6FEA0202 		mvn	r2, r2
 2083 0068 0A40     		ands	r2, r2, r1
 2084 006a 9A61     		str	r2, [r3, #24]
 2085              	.L151:
1107:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   }
1108:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 2086              		.loc 1 1108 0
 2087 006c 07F10807 		add	r7, r7, #8
 2088 0070 BD46     		mov	sp, r7
 2089 0072 80BD     		pop	{r7, pc}
 2090              	.L160:
 2091              		.align	2
 2092              	.L159:
 2093 0074 0200C0FF 		.word	-4194302
 2094 0078 00100240 		.word	1073876992
 2095              		.cfi_endproc
 2096              	.LFE51:
 2098              		.section	.text.RCC_APB1PeriphClockCmd,"ax",%progbits
 2099              		.align	2
 2100              		.global	RCC_APB1PeriphClockCmd
 2101              		.thumb
 2102              		.thumb_func
 2104              	RCC_APB1PeriphClockCmd:
 2105              	.LFB52:
1109:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
1110:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
1111:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the Low Speed APB (APB1) peripheral clock.
1112:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_APB1Periph: specifies the APB1 peripheral to gates its clock.
1113:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be any combination of the following values:
1114:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_APB1Periph_TIM2, RCC_APB1Periph_TIM3, RCC_APB1Periph_TIM4,
1115:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_TIM5, RCC_APB1Periph_TIM6, RCC_APB1Periph_TIM7,
1116:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_WWDG, RCC_APB1Periph_SPI2, RCC_APB1Periph_SPI3,
1117:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_USART2, RCC_APB1Periph_USART3, RCC_APB1Periph_USART4, 
1118:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_USART5, RCC_APB1Periph_I2C1, RCC_APB1Periph_I2C2,
1119:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_USB, RCC_APB1Periph_CAN1, RCC_APB1Periph_BKP,
1120:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_PWR, RCC_APB1Periph_DAC, RCC_APB1Periph_CEC,
1121:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_TIM12, RCC_APB1Periph_TIM13, RCC_APB1Periph_TIM14
1122:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
1123:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1124:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
1125:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
1126:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_APB1PeriphClockCmd(uint32_t RCC_APB1Periph, FunctionalState NewState)
1127:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 2106              		.loc 1 1127 0
 2107              		.cfi_startproc
 2108              		@ args = 0, pretend = 0, frame = 8
 2109              		@ frame_needed = 1, uses_anonymous_args = 0
 2110 0000 80B5     		push	{r7, lr}
 2111              	.LCFI67:
 2112              		.cfi_def_cfa_offset 8
 2113              		.cfi_offset 7, -8
 2114              		.cfi_offset 14, -4
 2115 0002 82B0     		sub	sp, sp, #8
 2116              	.LCFI68:
 2117              		.cfi_def_cfa_offset 16
 2118 0004 00AF     		add	r7, sp, #0
 2119              	.LCFI69:
 2120              		.cfi_def_cfa_register 7
 2121 0006 7860     		str	r0, [r7, #4]
 2122 0008 0B46     		mov	r3, r1
 2123 000a FB70     		strb	r3, [r7, #3]
1128:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1129:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_APB1_PERIPH(RCC_APB1Periph));
 2124              		.loc 1 1129 0
 2125 000c 7A68     		ldr	r2, [r7, #4]
 2126 000e 194B     		ldr	r3, .L169
 2127 0010 1340     		ands	r3, r3, r2
 2128 0012 002B     		cmp	r3, #0
 2129 0014 05D1     		bne	.L162
 2130              		.loc 1 1129 0 is_stmt 0 discriminator 1
 2131 0016 7B68     		ldr	r3, [r7, #4]
 2132 0018 002B     		cmp	r3, #0
 2133 001a 02D0     		beq	.L162
 2134              		.loc 1 1129 0 discriminator 3
 2135 001c 4FF00103 		mov	r3, #1
 2136 0020 01E0     		b	.L163
 2137              	.L162:
 2138              		.loc 1 1129 0 discriminator 2
 2139 0022 4FF00003 		mov	r3, #0
 2140              	.L163:
 2141              		.loc 1 1129 0 discriminator 4
 2142 0026 1846     		mov	r0, r3
 2143 0028 FFF7FEFF 		bl	assert_param
1130:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 2144              		.loc 1 1130 0 is_stmt 1 discriminator 4
 2145 002c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2146 002e 002B     		cmp	r3, #0
 2147 0030 02D0     		beq	.L164
 2148              		.loc 1 1130 0 is_stmt 0 discriminator 2
 2149 0032 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2150 0034 012B     		cmp	r3, #1
 2151 0036 02D1     		bne	.L165
 2152              	.L164:
 2153              		.loc 1 1130 0 discriminator 1
 2154 0038 4FF00103 		mov	r3, #1
 2155 003c 01E0     		b	.L166
 2156              	.L165:
 2157              		.loc 1 1130 0 discriminator 3
 2158 003e 4FF00003 		mov	r3, #0
 2159              	.L166:
 2160              		.loc 1 1130 0 discriminator 4
 2161 0042 1846     		mov	r0, r3
 2162 0044 FFF7FEFF 		bl	assert_param
1131:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
 2163              		.loc 1 1131 0 is_stmt 1 discriminator 4
 2164 0048 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2165 004a 002B     		cmp	r3, #0
 2166 004c 06D0     		beq	.L167
1132:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   {
1133:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****     RCC->APB1ENR |= RCC_APB1Periph;
 2167              		.loc 1 1133 0
 2168 004e 0A4B     		ldr	r3, .L169+4
 2169 0050 094A     		ldr	r2, .L169+4
 2170 0052 D169     		ldr	r1, [r2, #28]
 2171 0054 7A68     		ldr	r2, [r7, #4]
 2172 0056 0A43     		orrs	r2, r2, r1
 2173 0058 DA61     		str	r2, [r3, #28]
 2174 005a 07E0     		b	.L161
 2175              	.L167:
1134:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   }
1135:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   else
1136:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   {
1137:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****     RCC->APB1ENR &= ~RCC_APB1Periph;
 2176              		.loc 1 1137 0
 2177 005c 064B     		ldr	r3, .L169+4
 2178 005e 064A     		ldr	r2, .L169+4
 2179 0060 D169     		ldr	r1, [r2, #28]
 2180 0062 7A68     		ldr	r2, [r7, #4]
 2181 0064 6FEA0202 		mvn	r2, r2
 2182 0068 0A40     		ands	r2, r2, r1
 2183 006a DA61     		str	r2, [r3, #28]
 2184              	.L161:
1138:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   }
1139:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 2185              		.loc 1 1139 0
 2186 006c 07F10807 		add	r7, r7, #8
 2187 0070 BD46     		mov	sp, r7
 2188 0072 80BD     		pop	{r7, pc}
 2189              	.L170:
 2190              		.align	2
 2191              	.L169:
 2192 0074 00360181 		.word	-2130627072
 2193 0078 00100240 		.word	1073876992
 2194              		.cfi_endproc
 2195              	.LFE52:
 2197              		.section	.text.RCC_APB2PeriphResetCmd,"ax",%progbits
 2198              		.align	2
 2199              		.global	RCC_APB2PeriphResetCmd
 2200              		.thumb
 2201              		.thumb_func
 2203              	RCC_APB2PeriphResetCmd:
 2204              	.LFB53:
1140:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
1141:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
1142:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
1143:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Forces or releases AHB peripheral reset.
1144:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @note   This function applies only to STM32 Connectivity line devices.
1145:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_AHBPeriph: specifies the AHB peripheral to reset.
1146:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be any combination of the following values:
1147:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_OTG_FS 
1148:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_ETH_MAC
1149:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified peripheral reset.
1150:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1151:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
1152:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
1153:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_AHBPeriphResetCmd(uint32_t RCC_AHBPeriph, FunctionalState NewState)
1154:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
1155:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1156:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_AHB_PERIPH_RESET(RCC_AHBPeriph));
1157:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1158:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
1159:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
1160:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   {
1161:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****     RCC->AHBRSTR |= RCC_AHBPeriph;
1162:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   }
1163:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   else
1164:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   {
1165:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****     RCC->AHBRSTR &= ~RCC_AHBPeriph;
1166:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   }
1167:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
1168:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
1169:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
1170:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
1171:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Forces or releases High Speed APB (APB2) peripheral reset.
1172:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_APB2Periph: specifies the APB2 peripheral to reset.
1173:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be any combination of the following values:
1174:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_APB2Periph_AFIO, RCC_APB2Periph_GPIOA, RCC_APB2Periph_GPIOB,
1175:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_GPIOC, RCC_APB2Periph_GPIOD, RCC_APB2Periph_GPIOE,
1176:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_GPIOF, RCC_APB2Periph_GPIOG, RCC_APB2Periph_ADC1,
1177:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_ADC2, RCC_APB2Periph_TIM1, RCC_APB2Periph_SPI1,
1178:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_TIM8, RCC_APB2Periph_USART1, RCC_APB2Periph_ADC3,
1179:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_TIM15, RCC_APB2Periph_TIM16, RCC_APB2Periph_TIM17,
1180:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_TIM9, RCC_APB2Periph_TIM10, RCC_APB2Periph_TIM11  
1181:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified peripheral reset.
1182:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1183:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
1184:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
1185:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_APB2PeriphResetCmd(uint32_t RCC_APB2Periph, FunctionalState NewState)
1186:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 2205              		.loc 1 1186 0
 2206              		.cfi_startproc
 2207              		@ args = 0, pretend = 0, frame = 8
 2208              		@ frame_needed = 1, uses_anonymous_args = 0
 2209 0000 80B5     		push	{r7, lr}
 2210              	.LCFI70:
 2211              		.cfi_def_cfa_offset 8
 2212              		.cfi_offset 7, -8
 2213              		.cfi_offset 14, -4
 2214 0002 82B0     		sub	sp, sp, #8
 2215              	.LCFI71:
 2216              		.cfi_def_cfa_offset 16
 2217 0004 00AF     		add	r7, sp, #0
 2218              	.LCFI72:
 2219              		.cfi_def_cfa_register 7
 2220 0006 7860     		str	r0, [r7, #4]
 2221 0008 0B46     		mov	r3, r1
 2222 000a FB70     		strb	r3, [r7, #3]
1187:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1188:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_APB2_PERIPH(RCC_APB2Periph));
 2223              		.loc 1 1188 0
 2224 000c 7A68     		ldr	r2, [r7, #4]
 2225 000e 194B     		ldr	r3, .L179
 2226 0010 1340     		ands	r3, r3, r2
 2227 0012 002B     		cmp	r3, #0
 2228 0014 05D1     		bne	.L172
 2229              		.loc 1 1188 0 is_stmt 0 discriminator 1
 2230 0016 7B68     		ldr	r3, [r7, #4]
 2231 0018 002B     		cmp	r3, #0
 2232 001a 02D0     		beq	.L172
 2233              		.loc 1 1188 0 discriminator 3
 2234 001c 4FF00103 		mov	r3, #1
 2235 0020 01E0     		b	.L173
 2236              	.L172:
 2237              		.loc 1 1188 0 discriminator 2
 2238 0022 4FF00003 		mov	r3, #0
 2239              	.L173:
 2240              		.loc 1 1188 0 discriminator 4
 2241 0026 1846     		mov	r0, r3
 2242 0028 FFF7FEFF 		bl	assert_param
1189:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 2243              		.loc 1 1189 0 is_stmt 1 discriminator 4
 2244 002c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2245 002e 002B     		cmp	r3, #0
 2246 0030 02D0     		beq	.L174
 2247              		.loc 1 1189 0 is_stmt 0 discriminator 2
 2248 0032 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2249 0034 012B     		cmp	r3, #1
 2250 0036 02D1     		bne	.L175
 2251              	.L174:
 2252              		.loc 1 1189 0 discriminator 1
 2253 0038 4FF00103 		mov	r3, #1
 2254 003c 01E0     		b	.L176
 2255              	.L175:
 2256              		.loc 1 1189 0 discriminator 3
 2257 003e 4FF00003 		mov	r3, #0
 2258              	.L176:
 2259              		.loc 1 1189 0 discriminator 4
 2260 0042 1846     		mov	r0, r3
 2261 0044 FFF7FEFF 		bl	assert_param
1190:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
 2262              		.loc 1 1190 0 is_stmt 1 discriminator 4
 2263 0048 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2264 004a 002B     		cmp	r3, #0
 2265 004c 06D0     		beq	.L177
1191:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   {
1192:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****     RCC->APB2RSTR |= RCC_APB2Periph;
 2266              		.loc 1 1192 0
 2267 004e 0A4B     		ldr	r3, .L179+4
 2268 0050 094A     		ldr	r2, .L179+4
 2269 0052 D168     		ldr	r1, [r2, #12]
 2270 0054 7A68     		ldr	r2, [r7, #4]
 2271 0056 0A43     		orrs	r2, r2, r1
 2272 0058 DA60     		str	r2, [r3, #12]
 2273 005a 07E0     		b	.L171
 2274              	.L177:
1193:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   }
1194:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   else
1195:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   {
1196:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****     RCC->APB2RSTR &= ~RCC_APB2Periph;
 2275              		.loc 1 1196 0
 2276 005c 064B     		ldr	r3, .L179+4
 2277 005e 064A     		ldr	r2, .L179+4
 2278 0060 D168     		ldr	r1, [r2, #12]
 2279 0062 7A68     		ldr	r2, [r7, #4]
 2280 0064 6FEA0202 		mvn	r2, r2
 2281 0068 0A40     		ands	r2, r2, r1
 2282 006a DA60     		str	r2, [r3, #12]
 2283              	.L171:
1197:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   }
1198:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 2284              		.loc 1 1198 0
 2285 006c 07F10807 		add	r7, r7, #8
 2286 0070 BD46     		mov	sp, r7
 2287 0072 80BD     		pop	{r7, pc}
 2288              	.L180:
 2289              		.align	2
 2290              	.L179:
 2291 0074 0200C0FF 		.word	-4194302
 2292 0078 00100240 		.word	1073876992
 2293              		.cfi_endproc
 2294              	.LFE53:
 2296              		.section	.text.RCC_APB1PeriphResetCmd,"ax",%progbits
 2297              		.align	2
 2298              		.global	RCC_APB1PeriphResetCmd
 2299              		.thumb
 2300              		.thumb_func
 2302              	RCC_APB1PeriphResetCmd:
 2303              	.LFB54:
1199:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
1200:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
1201:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Forces or releases Low Speed APB (APB1) peripheral reset.
1202:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_APB1Periph: specifies the APB1 peripheral to reset.
1203:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be any combination of the following values:
1204:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_APB1Periph_TIM2, RCC_APB1Periph_TIM3, RCC_APB1Periph_TIM4,
1205:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_TIM5, RCC_APB1Periph_TIM6, RCC_APB1Periph_TIM7,
1206:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_WWDG, RCC_APB1Periph_SPI2, RCC_APB1Periph_SPI3,
1207:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_USART2, RCC_APB1Periph_USART3, RCC_APB1Periph_USART4, 
1208:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_USART5, RCC_APB1Periph_I2C1, RCC_APB1Periph_I2C2,
1209:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_USB, RCC_APB1Periph_CAN1, RCC_APB1Periph_BKP,
1210:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_PWR, RCC_APB1Periph_DAC, RCC_APB1Periph_CEC,
1211:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_TIM12, RCC_APB1Periph_TIM13, RCC_APB1Periph_TIM14  
1212:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
1213:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1214:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
1215:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
1216:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_APB1PeriphResetCmd(uint32_t RCC_APB1Periph, FunctionalState NewState)
1217:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 2304              		.loc 1 1217 0
 2305              		.cfi_startproc
 2306              		@ args = 0, pretend = 0, frame = 8
 2307              		@ frame_needed = 1, uses_anonymous_args = 0
 2308 0000 80B5     		push	{r7, lr}
 2309              	.LCFI73:
 2310              		.cfi_def_cfa_offset 8
 2311              		.cfi_offset 7, -8
 2312              		.cfi_offset 14, -4
 2313 0002 82B0     		sub	sp, sp, #8
 2314              	.LCFI74:
 2315              		.cfi_def_cfa_offset 16
 2316 0004 00AF     		add	r7, sp, #0
 2317              	.LCFI75:
 2318              		.cfi_def_cfa_register 7
 2319 0006 7860     		str	r0, [r7, #4]
 2320 0008 0B46     		mov	r3, r1
 2321 000a FB70     		strb	r3, [r7, #3]
1218:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1219:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_APB1_PERIPH(RCC_APB1Periph));
 2322              		.loc 1 1219 0
 2323 000c 7A68     		ldr	r2, [r7, #4]
 2324 000e 194B     		ldr	r3, .L189
 2325 0010 1340     		ands	r3, r3, r2
 2326 0012 002B     		cmp	r3, #0
 2327 0014 05D1     		bne	.L182
 2328              		.loc 1 1219 0 is_stmt 0 discriminator 1
 2329 0016 7B68     		ldr	r3, [r7, #4]
 2330 0018 002B     		cmp	r3, #0
 2331 001a 02D0     		beq	.L182
 2332              		.loc 1 1219 0 discriminator 3
 2333 001c 4FF00103 		mov	r3, #1
 2334 0020 01E0     		b	.L183
 2335              	.L182:
 2336              		.loc 1 1219 0 discriminator 2
 2337 0022 4FF00003 		mov	r3, #0
 2338              	.L183:
 2339              		.loc 1 1219 0 discriminator 4
 2340 0026 1846     		mov	r0, r3
 2341 0028 FFF7FEFF 		bl	assert_param
1220:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 2342              		.loc 1 1220 0 is_stmt 1 discriminator 4
 2343 002c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2344 002e 002B     		cmp	r3, #0
 2345 0030 02D0     		beq	.L184
 2346              		.loc 1 1220 0 is_stmt 0 discriminator 2
 2347 0032 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2348 0034 012B     		cmp	r3, #1
 2349 0036 02D1     		bne	.L185
 2350              	.L184:
 2351              		.loc 1 1220 0 discriminator 1
 2352 0038 4FF00103 		mov	r3, #1
 2353 003c 01E0     		b	.L186
 2354              	.L185:
 2355              		.loc 1 1220 0 discriminator 3
 2356 003e 4FF00003 		mov	r3, #0
 2357              	.L186:
 2358              		.loc 1 1220 0 discriminator 4
 2359 0042 1846     		mov	r0, r3
 2360 0044 FFF7FEFF 		bl	assert_param
1221:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
 2361              		.loc 1 1221 0 is_stmt 1 discriminator 4
 2362 0048 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2363 004a 002B     		cmp	r3, #0
 2364 004c 06D0     		beq	.L187
1222:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   {
1223:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****     RCC->APB1RSTR |= RCC_APB1Periph;
 2365              		.loc 1 1223 0
 2366 004e 0A4B     		ldr	r3, .L189+4
 2367 0050 094A     		ldr	r2, .L189+4
 2368 0052 1169     		ldr	r1, [r2, #16]
 2369 0054 7A68     		ldr	r2, [r7, #4]
 2370 0056 0A43     		orrs	r2, r2, r1
 2371 0058 1A61     		str	r2, [r3, #16]
 2372 005a 07E0     		b	.L181
 2373              	.L187:
1224:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   }
1225:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   else
1226:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   {
1227:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****     RCC->APB1RSTR &= ~RCC_APB1Periph;
 2374              		.loc 1 1227 0
 2375 005c 064B     		ldr	r3, .L189+4
 2376 005e 064A     		ldr	r2, .L189+4
 2377 0060 1169     		ldr	r1, [r2, #16]
 2378 0062 7A68     		ldr	r2, [r7, #4]
 2379 0064 6FEA0202 		mvn	r2, r2
 2380 0068 0A40     		ands	r2, r2, r1
 2381 006a 1A61     		str	r2, [r3, #16]
 2382              	.L181:
1228:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   }
1229:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 2383              		.loc 1 1229 0
 2384 006c 07F10807 		add	r7, r7, #8
 2385 0070 BD46     		mov	sp, r7
 2386 0072 80BD     		pop	{r7, pc}
 2387              	.L190:
 2388              		.align	2
 2389              	.L189:
 2390 0074 00360181 		.word	-2130627072
 2391 0078 00100240 		.word	1073876992
 2392              		.cfi_endproc
 2393              	.LFE54:
 2395              		.section	.text.RCC_BackupResetCmd,"ax",%progbits
 2396              		.align	2
 2397              		.global	RCC_BackupResetCmd
 2398              		.thumb
 2399              		.thumb_func
 2401              	RCC_BackupResetCmd:
 2402              	.LFB55:
1230:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
1231:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
1232:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Forces or releases the Backup domain reset.
1233:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the Backup domain reset.
1234:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1235:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
1236:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
1237:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_BackupResetCmd(FunctionalState NewState)
1238:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 2403              		.loc 1 1238 0
 2404              		.cfi_startproc
 2405              		@ args = 0, pretend = 0, frame = 8
 2406              		@ frame_needed = 1, uses_anonymous_args = 0
 2407 0000 80B5     		push	{r7, lr}
 2408              	.LCFI76:
 2409              		.cfi_def_cfa_offset 8
 2410              		.cfi_offset 7, -8
 2411              		.cfi_offset 14, -4
 2412 0002 82B0     		sub	sp, sp, #8
 2413              	.LCFI77:
 2414              		.cfi_def_cfa_offset 16
 2415 0004 00AF     		add	r7, sp, #0
 2416              	.LCFI78:
 2417              		.cfi_def_cfa_register 7
 2418 0006 0346     		mov	r3, r0
 2419 0008 FB71     		strb	r3, [r7, #7]
1239:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1240:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 2420              		.loc 1 1240 0
 2421 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2422 000c 002B     		cmp	r3, #0
 2423 000e 02D0     		beq	.L192
 2424              		.loc 1 1240 0 is_stmt 0 discriminator 2
 2425 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2426 0012 012B     		cmp	r3, #1
 2427 0014 02D1     		bne	.L193
 2428              	.L192:
 2429              		.loc 1 1240 0 discriminator 1
 2430 0016 4FF00103 		mov	r3, #1
 2431 001a 01E0     		b	.L194
 2432              	.L193:
 2433              		.loc 1 1240 0 discriminator 3
 2434 001c 4FF00003 		mov	r3, #0
 2435              	.L194:
 2436              		.loc 1 1240 0 discriminator 4
 2437 0020 1846     		mov	r0, r3
 2438 0022 FFF7FEFF 		bl	assert_param
1241:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) BDCR_BDRST_BB = (uint32_t)NewState;
 2439              		.loc 1 1241 0 is_stmt 1 discriminator 4
 2440 0026 034B     		ldr	r3, .L195
 2441 0028 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2442 002a 1A60     		str	r2, [r3, #0]
1242:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 2443              		.loc 1 1242 0 discriminator 4
 2444 002c 07F10807 		add	r7, r7, #8
 2445 0030 BD46     		mov	sp, r7
 2446 0032 80BD     		pop	{r7, pc}
 2447              	.L196:
 2448              		.align	2
 2449              	.L195:
 2450 0034 40044242 		.word	1111622720
 2451              		.cfi_endproc
 2452              	.LFE55:
 2454              		.section	.text.RCC_ClockSecuritySystemCmd,"ax",%progbits
 2455              		.align	2
 2456              		.global	RCC_ClockSecuritySystemCmd
 2457              		.thumb
 2458              		.thumb_func
 2460              	RCC_ClockSecuritySystemCmd:
 2461              	.LFB56:
1243:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
1244:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
1245:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the Clock Security System.
1246:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the Clock Security System..
1247:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1248:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
1249:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
1250:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_ClockSecuritySystemCmd(FunctionalState NewState)
1251:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 2462              		.loc 1 1251 0
 2463              		.cfi_startproc
 2464              		@ args = 0, pretend = 0, frame = 8
 2465              		@ frame_needed = 1, uses_anonymous_args = 0
 2466 0000 80B5     		push	{r7, lr}
 2467              	.LCFI79:
 2468              		.cfi_def_cfa_offset 8
 2469              		.cfi_offset 7, -8
 2470              		.cfi_offset 14, -4
 2471 0002 82B0     		sub	sp, sp, #8
 2472              	.LCFI80:
 2473              		.cfi_def_cfa_offset 16
 2474 0004 00AF     		add	r7, sp, #0
 2475              	.LCFI81:
 2476              		.cfi_def_cfa_register 7
 2477 0006 0346     		mov	r3, r0
 2478 0008 FB71     		strb	r3, [r7, #7]
1252:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1253:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 2479              		.loc 1 1253 0
 2480 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2481 000c 002B     		cmp	r3, #0
 2482 000e 02D0     		beq	.L198
 2483              		.loc 1 1253 0 is_stmt 0 discriminator 2
 2484 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2485 0012 012B     		cmp	r3, #1
 2486 0014 02D1     		bne	.L199
 2487              	.L198:
 2488              		.loc 1 1253 0 discriminator 1
 2489 0016 4FF00103 		mov	r3, #1
 2490 001a 01E0     		b	.L200
 2491              	.L199:
 2492              		.loc 1 1253 0 discriminator 3
 2493 001c 4FF00003 		mov	r3, #0
 2494              	.L200:
 2495              		.loc 1 1253 0 discriminator 4
 2496 0020 1846     		mov	r0, r3
 2497 0022 FFF7FEFF 		bl	assert_param
1254:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CR_CSSON_BB = (uint32_t)NewState;
 2498              		.loc 1 1254 0 is_stmt 1 discriminator 4
 2499 0026 034B     		ldr	r3, .L201
 2500 0028 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2501 002a 1A60     		str	r2, [r3, #0]
1255:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 2502              		.loc 1 1255 0 discriminator 4
 2503 002c 07F10807 		add	r7, r7, #8
 2504 0030 BD46     		mov	sp, r7
 2505 0032 80BD     		pop	{r7, pc}
 2506              	.L202:
 2507              		.align	2
 2508              	.L201:
 2509 0034 4C004242 		.word	1111621708
 2510              		.cfi_endproc
 2511              	.LFE56:
 2513              		.section	.text.RCC_MCOConfig,"ax",%progbits
 2514              		.align	2
 2515              		.global	RCC_MCOConfig
 2516              		.thumb
 2517              		.thumb_func
 2519              	RCC_MCOConfig:
 2520              	.LFB57:
1256:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
1257:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
1258:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Selects the clock source to output on MCO pin.
1259:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_MCO: specifies the clock source to output.
1260:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   
1261:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be one of the
1262:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   following values:       
1263:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_NoClock: No clock selected
1264:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_SYSCLK: System clock selected
1265:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_HSI: HSI oscillator clock selected
1266:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_HSE: HSE oscillator clock selected
1267:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_PLLCLK_Div2: PLL clock divided by 2 selected
1268:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_PLL2CLK: PLL2 clock selected                     
1269:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_PLL3CLK_Div2: PLL3 clock divided by 2 selected   
1270:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_XT1: External 3-25 MHz oscillator clock selected  
1271:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_PLL3CLK: PLL3 clock selected 
1272:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * 
1273:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   For  @b other_STM32_devices, this parameter can be one of the following values:        
1274:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_NoClock: No clock selected
1275:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_SYSCLK: System clock selected
1276:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_HSI: HSI oscillator clock selected
1277:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_HSE: HSE oscillator clock selected
1278:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_PLLCLK_Div2: PLL clock divided by 2 selected
1279:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   
1280:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
1281:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
1282:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_MCOConfig(uint8_t RCC_MCO)
1283:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 2521              		.loc 1 1283 0
 2522              		.cfi_startproc
 2523              		@ args = 0, pretend = 0, frame = 8
 2524              		@ frame_needed = 1, uses_anonymous_args = 0
 2525 0000 80B5     		push	{r7, lr}
 2526              	.LCFI82:
 2527              		.cfi_def_cfa_offset 8
 2528              		.cfi_offset 7, -8
 2529              		.cfi_offset 14, -4
 2530 0002 82B0     		sub	sp, sp, #8
 2531              	.LCFI83:
 2532              		.cfi_def_cfa_offset 16
 2533 0004 00AF     		add	r7, sp, #0
 2534              	.LCFI84:
 2535              		.cfi_def_cfa_register 7
 2536 0006 0346     		mov	r3, r0
 2537 0008 FB71     		strb	r3, [r7, #7]
1284:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1285:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_MCO(RCC_MCO));
 2538              		.loc 1 1285 0
 2539 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2540 000c 002B     		cmp	r3, #0
 2541 000e 0BD0     		beq	.L204
 2542              		.loc 1 1285 0 is_stmt 0 discriminator 2
 2543 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2544 0012 052B     		cmp	r3, #5
 2545 0014 08D0     		beq	.L204
 2546              		.loc 1 1285 0 discriminator 1
 2547 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2548 0018 042B     		cmp	r3, #4
 2549 001a 05D0     		beq	.L204
 2550              		.loc 1 1285 0 discriminator 2
 2551 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2552 001e 062B     		cmp	r3, #6
 2553 0020 02D0     		beq	.L204
 2554              		.loc 1 1285 0 discriminator 3
 2555 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2556 0024 072B     		cmp	r3, #7
 2557 0026 02D1     		bne	.L205
 2558              	.L204:
 2559              		.loc 1 1285 0 discriminator 1
 2560 0028 4FF00103 		mov	r3, #1
 2561 002c 01E0     		b	.L206
 2562              	.L205:
 2563              		.loc 1 1285 0 discriminator 3
 2564 002e 4FF00003 		mov	r3, #0
 2565              	.L206:
 2566              		.loc 1 1285 0 discriminator 4
 2567 0032 1846     		mov	r0, r3
 2568 0034 FFF7FEFF 		bl	assert_param
1286:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
1287:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Perform Byte access to MCO bits to select the MCO source */
1288:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *(__IO uint8_t *) CFGR_BYTE4_ADDRESS = RCC_MCO;
 2569              		.loc 1 1288 0 is_stmt 1 discriminator 4
 2570 0038 034B     		ldr	r3, .L207
 2571 003a FA79     		ldrb	r2, [r7, #7]
 2572 003c 1A70     		strb	r2, [r3, #0]
1289:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 2573              		.loc 1 1289 0 discriminator 4
 2574 003e 07F10807 		add	r7, r7, #8
 2575 0042 BD46     		mov	sp, r7
 2576 0044 80BD     		pop	{r7, pc}
 2577              	.L208:
 2578 0046 00BF     		.align	2
 2579              	.L207:
 2580 0048 07100240 		.word	1073876999
 2581              		.cfi_endproc
 2582              	.LFE57:
 2584              		.section	.text.RCC_GetFlagStatus,"ax",%progbits
 2585              		.align	2
 2586              		.global	RCC_GetFlagStatus
 2587              		.thumb
 2588              		.thumb_func
 2590              	RCC_GetFlagStatus:
 2591              	.LFB58:
1290:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
1291:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
1292:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Checks whether the specified RCC flag is set or not.
1293:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_FLAG: specifies the flag to check.
1294:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   
1295:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be one of the
1296:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   following values:
1297:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_HSIRDY: HSI oscillator clock ready
1298:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_HSERDY: HSE oscillator clock ready
1299:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PLLRDY: PLL clock ready
1300:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PLL2RDY: PLL2 clock ready      
1301:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PLL3RDY: PLL3 clock ready                           
1302:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_LSERDY: LSE oscillator clock ready
1303:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_LSIRDY: LSI oscillator clock ready
1304:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PINRST: Pin reset
1305:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PORRST: POR/PDR reset
1306:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_SFTRST: Software reset
1307:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_IWDGRST: Independent Watchdog reset
1308:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_WWDGRST: Window Watchdog reset
1309:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_LPWRRST: Low Power reset
1310:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * 
1311:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be one of the following values:        
1312:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_HSIRDY: HSI oscillator clock ready
1313:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_HSERDY: HSE oscillator clock ready
1314:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PLLRDY: PLL clock ready
1315:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_LSERDY: LSE oscillator clock ready
1316:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_LSIRDY: LSI oscillator clock ready
1317:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PINRST: Pin reset
1318:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PORRST: POR/PDR reset
1319:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_SFTRST: Software reset
1320:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_IWDGRST: Independent Watchdog reset
1321:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_WWDGRST: Window Watchdog reset
1322:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_LPWRRST: Low Power reset
1323:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   
1324:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval The new state of RCC_FLAG (SET or RESET).
1325:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
1326:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** FlagStatus RCC_GetFlagStatus(uint8_t RCC_FLAG)
1327:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 2592              		.loc 1 1327 0
 2593              		.cfi_startproc
 2594              		@ args = 0, pretend = 0, frame = 24
 2595              		@ frame_needed = 1, uses_anonymous_args = 0
 2596 0000 80B5     		push	{r7, lr}
 2597              	.LCFI85:
 2598              		.cfi_def_cfa_offset 8
 2599              		.cfi_offset 7, -8
 2600              		.cfi_offset 14, -4
 2601 0002 86B0     		sub	sp, sp, #24
 2602              	.LCFI86:
 2603              		.cfi_def_cfa_offset 32
 2604 0004 00AF     		add	r7, sp, #0
 2605              	.LCFI87:
 2606              		.cfi_def_cfa_register 7
 2607 0006 0346     		mov	r3, r0
 2608 0008 FB71     		strb	r3, [r7, #7]
1328:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   uint32_t tmp = 0;
 2609              		.loc 1 1328 0
 2610 000a 4FF00003 		mov	r3, #0
 2611 000e FB60     		str	r3, [r7, #12]
1329:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   uint32_t statusreg = 0;
 2612              		.loc 1 1329 0
 2613 0010 4FF00003 		mov	r3, #0
 2614 0014 7B61     		str	r3, [r7, #20]
1330:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   FlagStatus bitstatus = RESET;
 2615              		.loc 1 1330 0
 2616 0016 4FF00003 		mov	r3, #0
 2617 001a FB74     		strb	r3, [r7, #19]
1331:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1332:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_FLAG(RCC_FLAG));
 2618              		.loc 1 1332 0
 2619 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2620 001e 212B     		cmp	r3, #33
 2621 0020 1DD0     		beq	.L210
 2622              		.loc 1 1332 0 is_stmt 0 discriminator 2
 2623 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2624 0024 312B     		cmp	r3, #49
 2625 0026 1AD0     		beq	.L210
 2626              		.loc 1 1332 0 discriminator 1
 2627 0028 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2628 002a 392B     		cmp	r3, #57
 2629 002c 17D0     		beq	.L210
 2630              		.loc 1 1332 0 discriminator 2
 2631 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2632 0030 412B     		cmp	r3, #65
 2633 0032 14D0     		beq	.L210
 2634              		.loc 1 1332 0 discriminator 3
 2635 0034 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2636 0036 612B     		cmp	r3, #97
 2637 0038 11D0     		beq	.L210
 2638              		.loc 1 1332 0 discriminator 4
 2639 003a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2640 003c 7A2B     		cmp	r3, #122
 2641 003e 0ED0     		beq	.L210
 2642              		.loc 1 1332 0 discriminator 5
 2643 0040 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2644 0042 7B2B     		cmp	r3, #123
 2645 0044 0BD0     		beq	.L210
 2646              		.loc 1 1332 0 discriminator 6
 2647 0046 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2648 0048 7C2B     		cmp	r3, #124
 2649 004a 08D0     		beq	.L210
 2650              		.loc 1 1332 0 discriminator 7
 2651 004c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2652 004e 7D2B     		cmp	r3, #125
 2653 0050 05D0     		beq	.L210
 2654              		.loc 1 1332 0 discriminator 8
 2655 0052 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2656 0054 7E2B     		cmp	r3, #126
 2657 0056 02D0     		beq	.L210
 2658              		.loc 1 1332 0 discriminator 9
 2659 0058 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2660 005a 7F2B     		cmp	r3, #127
 2661 005c 02D1     		bne	.L211
 2662              	.L210:
 2663              		.loc 1 1332 0 discriminator 1
 2664 005e 4FF00103 		mov	r3, #1
 2665 0062 01E0     		b	.L212
 2666              	.L211:
 2667              		.loc 1 1332 0 discriminator 3
 2668 0064 4FF00003 		mov	r3, #0
 2669              	.L212:
 2670              		.loc 1 1332 0 discriminator 4
 2671 0068 1846     		mov	r0, r3
 2672 006a FFF7FEFF 		bl	assert_param
1333:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
1334:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Get the RCC register index */
1335:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmp = RCC_FLAG >> 5;
 2673              		.loc 1 1335 0 is_stmt 1 discriminator 4
 2674 006e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2675 0070 4FEA5313 		lsr	r3, r3, #5
 2676 0074 DBB2     		uxtb	r3, r3
 2677 0076 FB60     		str	r3, [r7, #12]
1336:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   if (tmp == 1)               /* The flag to check is in CR register */
 2678              		.loc 1 1336 0 discriminator 4
 2679 0078 FB68     		ldr	r3, [r7, #12]
 2680 007a 012B     		cmp	r3, #1
 2681 007c 03D1     		bne	.L213
1337:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   {
1338:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****     statusreg = RCC->CR;
 2682              		.loc 1 1338 0
 2683 007e 134B     		ldr	r3, .L219
 2684 0080 1B68     		ldr	r3, [r3, #0]
 2685 0082 7B61     		str	r3, [r7, #20]
 2686 0084 09E0     		b	.L214
 2687              	.L213:
1339:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   }
1340:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   else if (tmp == 2)          /* The flag to check is in BDCR register */
 2688              		.loc 1 1340 0
 2689 0086 FB68     		ldr	r3, [r7, #12]
 2690 0088 022B     		cmp	r3, #2
 2691 008a 03D1     		bne	.L215
1341:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   {
1342:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****     statusreg = RCC->BDCR;
 2692              		.loc 1 1342 0
 2693 008c 0F4B     		ldr	r3, .L219
 2694 008e 1B6A     		ldr	r3, [r3, #32]
 2695 0090 7B61     		str	r3, [r7, #20]
 2696 0092 02E0     		b	.L214
 2697              	.L215:
1343:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   }
1344:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   else                       /* The flag to check is in CSR register */
1345:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   {
1346:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****     statusreg = RCC->CSR;
 2698              		.loc 1 1346 0
 2699 0094 0D4B     		ldr	r3, .L219
 2700 0096 5B6A     		ldr	r3, [r3, #36]
 2701 0098 7B61     		str	r3, [r7, #20]
 2702              	.L214:
1347:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   }
1348:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
1349:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Get the flag position */
1350:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmp = RCC_FLAG & FLAG_Mask;
 2703              		.loc 1 1350 0
 2704 009a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2705 009c 03F01F03 		and	r3, r3, #31
 2706 00a0 FB60     		str	r3, [r7, #12]
1351:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   if ((statusreg & ((uint32_t)1 << tmp)) != (uint32_t)RESET)
 2707              		.loc 1 1351 0
 2708 00a2 FB68     		ldr	r3, [r7, #12]
 2709 00a4 7A69     		ldr	r2, [r7, #20]
 2710 00a6 22FA03F3 		lsr	r3, r2, r3
 2711 00aa 03F00103 		and	r3, r3, #1
 2712 00ae 002B     		cmp	r3, #0
 2713 00b0 03D0     		beq	.L216
1352:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   {
1353:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****     bitstatus = SET;
 2714              		.loc 1 1353 0
 2715 00b2 4FF00103 		mov	r3, #1
 2716 00b6 FB74     		strb	r3, [r7, #19]
 2717 00b8 02E0     		b	.L217
 2718              	.L216:
1354:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   }
1355:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   else
1356:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   {
1357:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****     bitstatus = RESET;
 2719              		.loc 1 1357 0
 2720 00ba 4FF00003 		mov	r3, #0
 2721 00be FB74     		strb	r3, [r7, #19]
 2722              	.L217:
1358:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   }
1359:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
1360:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Return the flag status */
1361:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   return bitstatus;
 2723              		.loc 1 1361 0
 2724 00c0 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
1362:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 2725              		.loc 1 1362 0
 2726 00c2 1846     		mov	r0, r3
 2727 00c4 07F11807 		add	r7, r7, #24
 2728 00c8 BD46     		mov	sp, r7
 2729 00ca 80BD     		pop	{r7, pc}
 2730              	.L220:
 2731              		.align	2
 2732              	.L219:
 2733 00cc 00100240 		.word	1073876992
 2734              		.cfi_endproc
 2735              	.LFE58:
 2737              		.section	.text.RCC_ClearFlag,"ax",%progbits
 2738              		.align	2
 2739              		.global	RCC_ClearFlag
 2740              		.thumb
 2741              		.thumb_func
 2743              	RCC_ClearFlag:
 2744              	.LFB59:
1363:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
1364:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
1365:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Clears the RCC reset flags.
1366:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @note   The reset flags are: RCC_FLAG_PINRST, RCC_FLAG_PORRST, RCC_FLAG_SFTRST,
1367:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   RCC_FLAG_IWDGRST, RCC_FLAG_WWDGRST, RCC_FLAG_LPWRRST
1368:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  None
1369:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
1370:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
1371:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_ClearFlag(void)
1372:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 2745              		.loc 1 1372 0
 2746              		.cfi_startproc
 2747              		@ args = 0, pretend = 0, frame = 0
 2748              		@ frame_needed = 1, uses_anonymous_args = 0
 2749              		@ link register save eliminated.
 2750 0000 80B4     		push	{r7}
 2751              	.LCFI88:
 2752              		.cfi_def_cfa_offset 4
 2753              		.cfi_offset 7, -4
 2754 0002 00AF     		add	r7, sp, #0
 2755              	.LCFI89:
 2756              		.cfi_def_cfa_register 7
1373:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Set RMVF bit to clear the reset flags */
1374:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC->CSR |= CSR_RMVF_Set;
 2757              		.loc 1 1374 0
 2758 0004 044B     		ldr	r3, .L222
 2759 0006 044A     		ldr	r2, .L222
 2760 0008 526A     		ldr	r2, [r2, #36]
 2761 000a 42F08072 		orr	r2, r2, #16777216
 2762 000e 5A62     		str	r2, [r3, #36]
1375:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 2763              		.loc 1 1375 0
 2764 0010 BD46     		mov	sp, r7
 2765 0012 80BC     		pop	{r7}
 2766 0014 7047     		bx	lr
 2767              	.L223:
 2768 0016 00BF     		.align	2
 2769              	.L222:
 2770 0018 00100240 		.word	1073876992
 2771              		.cfi_endproc
 2772              	.LFE59:
 2774              		.section	.text.RCC_GetITStatus,"ax",%progbits
 2775              		.align	2
 2776              		.global	RCC_GetITStatus
 2777              		.thumb
 2778              		.thumb_func
 2780              	RCC_GetITStatus:
 2781              	.LFB60:
1376:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
1377:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
1378:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Checks whether the specified RCC interrupt has occurred or not.
1379:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_IT: specifies the RCC interrupt source to check.
1380:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   
1381:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be one of the
1382:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   following values:
1383:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
1384:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
1385:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
1386:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
1387:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
1388:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLL2RDY: PLL2 ready interrupt 
1389:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLL3RDY: PLL3 ready interrupt                      
1390:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_CSS: Clock Security System interrupt
1391:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * 
1392:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be one of the following values:        
1393:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
1394:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
1395:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
1396:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
1397:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
1398:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_CSS: Clock Security System interrupt
1399:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   
1400:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval The new state of RCC_IT (SET or RESET).
1401:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
1402:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** ITStatus RCC_GetITStatus(uint8_t RCC_IT)
1403:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 2782              		.loc 1 1403 0
 2783              		.cfi_startproc
 2784              		@ args = 0, pretend = 0, frame = 16
 2785              		@ frame_needed = 1, uses_anonymous_args = 0
 2786 0000 80B5     		push	{r7, lr}
 2787              	.LCFI90:
 2788              		.cfi_def_cfa_offset 8
 2789              		.cfi_offset 7, -8
 2790              		.cfi_offset 14, -4
 2791 0002 84B0     		sub	sp, sp, #16
 2792              	.LCFI91:
 2793              		.cfi_def_cfa_offset 24
 2794 0004 00AF     		add	r7, sp, #0
 2795              	.LCFI92:
 2796              		.cfi_def_cfa_register 7
 2797 0006 0346     		mov	r3, r0
 2798 0008 FB71     		strb	r3, [r7, #7]
1404:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   ITStatus bitstatus = RESET;
 2799              		.loc 1 1404 0
 2800 000a 4FF00003 		mov	r3, #0
 2801 000e FB73     		strb	r3, [r7, #15]
1405:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1406:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_GET_IT(RCC_IT));
 2802              		.loc 1 1406 0
 2803 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2804 0012 012B     		cmp	r3, #1
 2805 0014 0ED0     		beq	.L225
 2806              		.loc 1 1406 0 is_stmt 0 discriminator 2
 2807 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2808 0018 022B     		cmp	r3, #2
 2809 001a 0BD0     		beq	.L225
 2810              		.loc 1 1406 0 discriminator 1
 2811 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2812 001e 042B     		cmp	r3, #4
 2813 0020 08D0     		beq	.L225
 2814              		.loc 1 1406 0 discriminator 2
 2815 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2816 0024 082B     		cmp	r3, #8
 2817 0026 05D0     		beq	.L225
 2818              		.loc 1 1406 0 discriminator 3
 2819 0028 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2820 002a 102B     		cmp	r3, #16
 2821 002c 02D0     		beq	.L225
 2822              		.loc 1 1406 0 discriminator 4
 2823 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2824 0030 802B     		cmp	r3, #128
 2825 0032 02D1     		bne	.L226
 2826              	.L225:
 2827              		.loc 1 1406 0 discriminator 1
 2828 0034 4FF00103 		mov	r3, #1
 2829 0038 01E0     		b	.L227
 2830              	.L226:
 2831              		.loc 1 1406 0 discriminator 3
 2832 003a 4FF00003 		mov	r3, #0
 2833              	.L227:
 2834              		.loc 1 1406 0 discriminator 4
 2835 003e 1846     		mov	r0, r3
 2836 0040 FFF7FEFF 		bl	assert_param
1407:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
1408:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the status of the specified RCC interrupt */
1409:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   if ((RCC->CIR & RCC_IT) != (uint32_t)RESET)
 2837              		.loc 1 1409 0 is_stmt 1 discriminator 4
 2838 0044 094B     		ldr	r3, .L231
 2839 0046 9A68     		ldr	r2, [r3, #8]
 2840 0048 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2841 004a 1340     		ands	r3, r3, r2
 2842 004c 002B     		cmp	r3, #0
 2843 004e 03D0     		beq	.L228
1410:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   {
1411:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****     bitstatus = SET;
 2844              		.loc 1 1411 0
 2845 0050 4FF00103 		mov	r3, #1
 2846 0054 FB73     		strb	r3, [r7, #15]
 2847 0056 02E0     		b	.L229
 2848              	.L228:
1412:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   }
1413:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   else
1414:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   {
1415:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****     bitstatus = RESET;
 2849              		.loc 1 1415 0
 2850 0058 4FF00003 		mov	r3, #0
 2851 005c FB73     		strb	r3, [r7, #15]
 2852              	.L229:
1416:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   }
1417:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
1418:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Return the RCC_IT status */
1419:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   return  bitstatus;
 2853              		.loc 1 1419 0
 2854 005e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1420:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 2855              		.loc 1 1420 0
 2856 0060 1846     		mov	r0, r3
 2857 0062 07F11007 		add	r7, r7, #16
 2858 0066 BD46     		mov	sp, r7
 2859 0068 80BD     		pop	{r7, pc}
 2860              	.L232:
 2861 006a 00BF     		.align	2
 2862              	.L231:
 2863 006c 00100240 		.word	1073876992
 2864              		.cfi_endproc
 2865              	.LFE60:
 2867              		.section	.text.RCC_ClearITPendingBit,"ax",%progbits
 2868              		.align	2
 2869              		.global	RCC_ClearITPendingBit
 2870              		.thumb
 2871              		.thumb_func
 2873              	RCC_ClearITPendingBit:
 2874              	.LFB61:
1421:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
1422:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
1423:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Clears the RCC's interrupt pending bits.
1424:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_IT: specifies the interrupt pending bit to clear.
1425:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   
1426:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be any combination
1427:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   of the following values:
1428:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
1429:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
1430:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
1431:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
1432:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
1433:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLL2RDY: PLL2 ready interrupt 
1434:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLL3RDY: PLL3 ready interrupt                      
1435:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_CSS: Clock Security System interrupt
1436:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * 
1437:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be any combination of the
1438:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   following values:        
1439:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
1440:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
1441:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
1442:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
1443:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
1444:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   
1445:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_CSS: Clock Security System interrupt
1446:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
1447:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
1448:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_ClearITPendingBit(uint8_t RCC_IT)
1449:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 2875              		.loc 1 1449 0
 2876              		.cfi_startproc
 2877              		@ args = 0, pretend = 0, frame = 8
 2878              		@ frame_needed = 1, uses_anonymous_args = 0
 2879 0000 80B5     		push	{r7, lr}
 2880              	.LCFI93:
 2881              		.cfi_def_cfa_offset 8
 2882              		.cfi_offset 7, -8
 2883              		.cfi_offset 14, -4
 2884 0002 82B0     		sub	sp, sp, #8
 2885              	.LCFI94:
 2886              		.cfi_def_cfa_offset 16
 2887 0004 00AF     		add	r7, sp, #0
 2888              	.LCFI95:
 2889              		.cfi_def_cfa_register 7
 2890 0006 0346     		mov	r3, r0
 2891 0008 FB71     		strb	r3, [r7, #7]
1450:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1451:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_CLEAR_IT(RCC_IT));
 2892              		.loc 1 1451 0
 2893 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2894 000c 03F06003 		and	r3, r3, #96
 2895 0010 002B     		cmp	r3, #0
 2896 0012 05D1     		bne	.L234
 2897              		.loc 1 1451 0 is_stmt 0 discriminator 1
 2898 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2899 0016 002B     		cmp	r3, #0
 2900 0018 02D0     		beq	.L234
 2901              		.loc 1 1451 0 discriminator 3
 2902 001a 4FF00103 		mov	r3, #1
 2903 001e 01E0     		b	.L235
 2904              	.L234:
 2905              		.loc 1 1451 0 discriminator 2
 2906 0020 4FF00003 		mov	r3, #0
 2907              	.L235:
 2908              		.loc 1 1451 0 discriminator 4
 2909 0024 1846     		mov	r0, r3
 2910 0026 FFF7FEFF 		bl	assert_param
1452:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
1453:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Perform Byte access to RCC_CIR[23:16] bits to clear the selected interrupt
1454:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****      pending bits */
1455:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *(__IO uint8_t *) CIR_BYTE3_ADDRESS = RCC_IT;
 2911              		.loc 1 1455 0 is_stmt 1 discriminator 4
 2912 002a 034B     		ldr	r3, .L236
 2913 002c FA79     		ldrb	r2, [r7, #7]
 2914 002e 1A70     		strb	r2, [r3, #0]
1456:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 2915              		.loc 1 1456 0 discriminator 4
 2916 0030 07F10807 		add	r7, r7, #8
 2917 0034 BD46     		mov	sp, r7
 2918 0036 80BD     		pop	{r7, pc}
 2919              	.L237:
 2920              		.align	2
 2921              	.L236:
 2922 0038 0A100240 		.word	1073877002
 2923              		.cfi_endproc
 2924              	.LFE61:
 2926              		.text
 2927              	.Letext0:
 2928              		.file 2 "d:\\programs\\stm programs\\codebench\\bin\\../lib/gcc/arm-none-eabi/4.7.3/../../../../ar
 2929              		.file 3 "D:\\PROGRAMMING\\stm\\stm-discovery_test_project\\libs\\CMSIS/stm32f10x.h"
 2930              		.file 4 "D:\\PROGRAMMING\\stm\\stm-discovery_test_project\\libs\\StdPeripheralDriver\\inc/stm32f10
 2931              		.file 5 "D:\\PROGRAMMING\\stm\\stm-discovery_test_project\\libs\\CMSIS/core_cm3.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f10x_rcc.c
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:19     .data.APBAHBPrescTable:00000000 $d
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:22     .data.APBAHBPrescTable:00000000 APBAHBPrescTable
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:40     .data.ADCPrescTable:00000000 $d
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:43     .data.ADCPrescTable:00000000 ADCPrescTable
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:49     .text.RCC_DeInit:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:54     .text.RCC_DeInit:00000000 RCC_DeInit
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:116    .text.RCC_DeInit:0000005c $d
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:122    .text.RCC_HSEConfig:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:127    .text.RCC_HSEConfig:00000000 RCC_HSEConfig
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:216    .text.RCC_HSEConfig:0000007c $d
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:221    .text.RCC_WaitForHSEStartUp:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:226    .text.RCC_WaitForHSEStartUp:00000000 RCC_WaitForHSEStartUp
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:2590   .text.RCC_GetFlagStatus:00000000 RCC_GetFlagStatus
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:296    .text.RCC_AdjustHSICalibrationValue:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:301    .text.RCC_AdjustHSICalibrationValue:00000000 RCC_AdjustHSICalibrationValue
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:357    .text.RCC_AdjustHSICalibrationValue:0000004c $d
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:362    .text.RCC_HSICmd:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:367    .text.RCC_HSICmd:00000000 RCC_HSICmd
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:416    .text.RCC_HSICmd:00000034 $d
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:421    .text.RCC_PLLConfig:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:426    .text.RCC_PLLConfig:00000000 RCC_PLLConfig
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:564    .text.RCC_PLLConfig:000000dc $d
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:569    .text.RCC_PLLCmd:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:574    .text.RCC_PLLCmd:00000000 RCC_PLLCmd
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:623    .text.RCC_PLLCmd:00000034 $d
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:628    .text.RCC_PREDIV1Config:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:633    .text.RCC_PREDIV1Config:00000000 RCC_PREDIV1Config
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:766    .text.RCC_PREDIV1Config:000000c0 $d
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:771    .text.RCC_SYSCLKConfig:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:776    .text.RCC_SYSCLKConfig:00000000 RCC_SYSCLKConfig
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:843    .text.RCC_SYSCLKConfig:00000054 $d
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:848    .text.RCC_GetSYSCLKSource:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:853    .text.RCC_GetSYSCLKSource:00000000 RCC_GetSYSCLKSource
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:881    .text.RCC_GetSYSCLKSource:00000018 $d
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:886    .text.RCC_HCLKConfig:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:891    .text.RCC_HCLKConfig:00000000 RCC_HCLKConfig
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:983    .text.RCC_HCLKConfig:00000078 $d
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:988    .text.RCC_PCLK1Config:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:993    .text.RCC_PCLK1Config:00000000 RCC_PCLK1Config
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:1069   .text.RCC_PCLK1Config:00000068 $d
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:1074   .text.RCC_PCLK2Config:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:1079   .text.RCC_PCLK2Config:00000000 RCC_PCLK2Config
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:1156   .text.RCC_PCLK2Config:0000006c $d
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:1161   .text.RCC_ITConfig:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:1166   .text.RCC_ITConfig:00000000 RCC_ITConfig
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:1259   .text.RCC_ITConfig:00000080 $d
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:1264   .text.RCC_USBCLKConfig:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:1269   .text.RCC_USBCLKConfig:00000000 RCC_USBCLKConfig
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:1317   .text.RCC_USBCLKConfig:00000034 $d
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:1322   .text.RCC_ADCCLKConfig:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:1327   .text.RCC_ADCCLKConfig:00000000 RCC_ADCCLKConfig
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:1399   .text.RCC_ADCCLKConfig:00000060 $d
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:1404   .text.RCC_LSEConfig:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:1409   .text.RCC_LSEConfig:00000000 RCC_LSEConfig
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:1491   .text.RCC_LSEConfig:00000068 $d
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:1496   .text.RCC_LSICmd:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:1501   .text.RCC_LSICmd:00000000 RCC_LSICmd
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:1550   .text.RCC_LSICmd:00000034 $d
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:1555   .text.RCC_RTCCLKConfig:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:1560   .text.RCC_RTCCLKConfig:00000000 RCC_RTCCLKConfig
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:1614   .text.RCC_RTCCLKConfig:00000044 $d
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:1619   .text.RCC_RTCCLKCmd:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:1624   .text.RCC_RTCCLKCmd:00000000 RCC_RTCCLKCmd
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:1673   .text.RCC_RTCCLKCmd:00000034 $d
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:1678   .text.RCC_GetClocksFreq:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:1683   .text.RCC_GetClocksFreq:00000000 RCC_GetClocksFreq
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:1893   .text.RCC_GetClocksFreq:00000168 $d
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:1902   .text.RCC_AHBPeriphClockCmd:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:1907   .text.RCC_AHBPeriphClockCmd:00000000 RCC_AHBPeriphClockCmd
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:1995   .text.RCC_AHBPeriphClockCmd:00000078 $d
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:2000   .text.RCC_APB2PeriphClockCmd:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:2005   .text.RCC_APB2PeriphClockCmd:00000000 RCC_APB2PeriphClockCmd
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:2093   .text.RCC_APB2PeriphClockCmd:00000074 $d
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:2099   .text.RCC_APB1PeriphClockCmd:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:2104   .text.RCC_APB1PeriphClockCmd:00000000 RCC_APB1PeriphClockCmd
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:2192   .text.RCC_APB1PeriphClockCmd:00000074 $d
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:2198   .text.RCC_APB2PeriphResetCmd:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:2203   .text.RCC_APB2PeriphResetCmd:00000000 RCC_APB2PeriphResetCmd
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:2291   .text.RCC_APB2PeriphResetCmd:00000074 $d
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:2297   .text.RCC_APB1PeriphResetCmd:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:2302   .text.RCC_APB1PeriphResetCmd:00000000 RCC_APB1PeriphResetCmd
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:2390   .text.RCC_APB1PeriphResetCmd:00000074 $d
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:2396   .text.RCC_BackupResetCmd:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:2401   .text.RCC_BackupResetCmd:00000000 RCC_BackupResetCmd
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:2450   .text.RCC_BackupResetCmd:00000034 $d
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:2455   .text.RCC_ClockSecuritySystemCmd:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:2460   .text.RCC_ClockSecuritySystemCmd:00000000 RCC_ClockSecuritySystemCmd
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:2509   .text.RCC_ClockSecuritySystemCmd:00000034 $d
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:2514   .text.RCC_MCOConfig:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:2519   .text.RCC_MCOConfig:00000000 RCC_MCOConfig
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:2580   .text.RCC_MCOConfig:00000048 $d
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:2585   .text.RCC_GetFlagStatus:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:2733   .text.RCC_GetFlagStatus:000000cc $d
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:2738   .text.RCC_ClearFlag:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:2743   .text.RCC_ClearFlag:00000000 RCC_ClearFlag
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:2770   .text.RCC_ClearFlag:00000018 $d
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:2775   .text.RCC_GetITStatus:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:2780   .text.RCC_GetITStatus:00000000 RCC_GetITStatus
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:2863   .text.RCC_GetITStatus:0000006c $d
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:2868   .text.RCC_ClearITPendingBit:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:2873   .text.RCC_ClearITPendingBit:00000000 RCC_ClearITPendingBit
C:\Users\6262~1\AppData\Local\Temp\cchmeVTA.s:2922   .text.RCC_ClearITPendingBit:00000038 $d
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.a89c7a2b9e0955e95368adfe2cbc52f6
                           .group:00000000 wm4.stm32f10x.h.51.b859cb68ed44ee02c916b41cb8c68f1c
                           .group:00000000 wm4.core_cm3.h.25.d35e9a9b04ec4aaebae9bf79fff061f9
                           .group:00000000 wm4.stdint.h.10.90b695f550ca6cc3fb08fa83baf01e05
                           .group:00000000 wm4.core_cm3.h.113.b286929a54d33b4c8909a7132437b244
                           .group:00000000 wm4.stm32f10x.h.522.a925aafc848b1f088438cf0e9b167b78
                           .group:00000000 wm4.stm32f10x.h.8304.f7d8ad90959e99679b3257267c3aadfe
                           .group:00000000 wm4.stm32f10x_rcc.h.67.b2ac3f177eed824c6a7f550d9877061e

UNDEFINED SYMBOLS
assert_param
