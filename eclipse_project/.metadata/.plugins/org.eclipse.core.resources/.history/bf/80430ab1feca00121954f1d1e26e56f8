   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f10x_adc.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.ADC_DeInit,"ax",%progbits
  19              		.align	2
  20              		.global	ADC_DeInit
  21              		.thumb
  22              		.thumb_func
  24              	ADC_DeInit:
  25              	.LFB29:
  26              		.file 1 "../libs/StdPeripheralDriver/src/stm32f10x_adc.c"
   1:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** /**
   2:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   ******************************************************************************
   3:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @file    stm32f10x_adc.c
   4:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @author  MCD Application Team
   5:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @version V3.5.0
   6:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @date    11-March-2011
   7:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @brief   This file provides all the ADC firmware functions.
   8:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   ******************************************************************************
   9:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @attention
  10:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *
  11:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  12:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  13:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  14:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  15:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  16:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  17:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *
  18:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  19:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   ******************************************************************************
  20:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
  21:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** 
  22:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** /* Includes ------------------------------------------------------------------*/
  23:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** #include "stm32f10x_adc.h"
  24:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** #include "stm32f10x_rcc.h"
  25:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** 
  26:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** /** @addtogroup STM32F10x_StdPeriph_Driver
  27:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @{
  28:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
  29:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** 
  30:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** /** @defgroup ADC 
  31:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @brief ADC driver modules
  32:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @{
  33:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
  34:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** 
  35:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** /** @defgroup ADC_Private_TypesDefinitions
  36:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @{
  37:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
  38:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** 
  39:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** /**
  40:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @}
  41:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
  42:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** 
  43:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** /** @defgroup ADC_Private_Defines
  44:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @{
  45:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
  46:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** 
  47:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** /* ADC DISCNUM mask */
  48:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** #define CR1_DISCNUM_Reset           ((uint32_t)0xFFFF1FFF)
  49:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** 
  50:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** /* ADC DISCEN mask */
  51:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** #define CR1_DISCEN_Set              ((uint32_t)0x00000800)
  52:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** #define CR1_DISCEN_Reset            ((uint32_t)0xFFFFF7FF)
  53:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** 
  54:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** /* ADC JAUTO mask */
  55:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** #define CR1_JAUTO_Set               ((uint32_t)0x00000400)
  56:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** #define CR1_JAUTO_Reset             ((uint32_t)0xFFFFFBFF)
  57:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** 
  58:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** /* ADC JDISCEN mask */
  59:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** #define CR1_JDISCEN_Set             ((uint32_t)0x00001000)
  60:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** #define CR1_JDISCEN_Reset           ((uint32_t)0xFFFFEFFF)
  61:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** 
  62:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** /* ADC AWDCH mask */
  63:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** #define CR1_AWDCH_Reset             ((uint32_t)0xFFFFFFE0)
  64:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** 
  65:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** /* ADC Analog watchdog enable mode mask */
  66:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** #define CR1_AWDMode_Reset           ((uint32_t)0xFF3FFDFF)
  67:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** 
  68:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** /* CR1 register Mask */
  69:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** #define CR1_CLEAR_Mask              ((uint32_t)0xFFF0FEFF)
  70:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** 
  71:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** /* ADC ADON mask */
  72:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** #define CR2_ADON_Set                ((uint32_t)0x00000001)
  73:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** #define CR2_ADON_Reset              ((uint32_t)0xFFFFFFFE)
  74:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** 
  75:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** /* ADC DMA mask */
  76:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** #define CR2_DMA_Set                 ((uint32_t)0x00000100)
  77:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** #define CR2_DMA_Reset               ((uint32_t)0xFFFFFEFF)
  78:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** 
  79:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** /* ADC RSTCAL mask */
  80:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** #define CR2_RSTCAL_Set              ((uint32_t)0x00000008)
  81:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** 
  82:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** /* ADC CAL mask */
  83:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** #define CR2_CAL_Set                 ((uint32_t)0x00000004)
  84:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** 
  85:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** /* ADC SWSTART mask */
  86:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** #define CR2_SWSTART_Set             ((uint32_t)0x00400000)
  87:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** 
  88:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** /* ADC EXTTRIG mask */
  89:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** #define CR2_EXTTRIG_Set             ((uint32_t)0x00100000)
  90:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** #define CR2_EXTTRIG_Reset           ((uint32_t)0xFFEFFFFF)
  91:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** 
  92:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** /* ADC Software start mask */
  93:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** #define CR2_EXTTRIG_SWSTART_Set     ((uint32_t)0x00500000)
  94:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** #define CR2_EXTTRIG_SWSTART_Reset   ((uint32_t)0xFFAFFFFF)
  95:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** 
  96:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** /* ADC JEXTSEL mask */
  97:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** #define CR2_JEXTSEL_Reset           ((uint32_t)0xFFFF8FFF)
  98:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** 
  99:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** /* ADC JEXTTRIG mask */
 100:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** #define CR2_JEXTTRIG_Set            ((uint32_t)0x00008000)
 101:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** #define CR2_JEXTTRIG_Reset          ((uint32_t)0xFFFF7FFF)
 102:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 103:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** /* ADC JSWSTART mask */
 104:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** #define CR2_JSWSTART_Set            ((uint32_t)0x00200000)
 105:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 106:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** /* ADC injected software start mask */
 107:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** #define CR2_JEXTTRIG_JSWSTART_Set   ((uint32_t)0x00208000)
 108:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** #define CR2_JEXTTRIG_JSWSTART_Reset ((uint32_t)0xFFDF7FFF)
 109:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 110:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** /* ADC TSPD mask */
 111:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** #define CR2_TSVREFE_Set             ((uint32_t)0x00800000)
 112:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** #define CR2_TSVREFE_Reset           ((uint32_t)0xFF7FFFFF)
 113:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 114:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** /* CR2 register Mask */
 115:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** #define CR2_CLEAR_Mask              ((uint32_t)0xFFF1F7FD)
 116:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 117:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** /* ADC SQx mask */
 118:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** #define SQR3_SQ_Set                 ((uint32_t)0x0000001F)
 119:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** #define SQR2_SQ_Set                 ((uint32_t)0x0000001F)
 120:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** #define SQR1_SQ_Set                 ((uint32_t)0x0000001F)
 121:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 122:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** /* SQR1 register Mask */
 123:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** #define SQR1_CLEAR_Mask             ((uint32_t)0xFF0FFFFF)
 124:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 125:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** /* ADC JSQx mask */
 126:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** #define JSQR_JSQ_Set                ((uint32_t)0x0000001F)
 127:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 128:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** /* ADC JL mask */
 129:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** #define JSQR_JL_Set                 ((uint32_t)0x00300000)
 130:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** #define JSQR_JL_Reset               ((uint32_t)0xFFCFFFFF)
 131:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 132:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** /* ADC SMPx mask */
 133:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** #define SMPR1_SMP_Set               ((uint32_t)0x00000007)
 134:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** #define SMPR2_SMP_Set               ((uint32_t)0x00000007)
 135:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 136:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** /* ADC JDRx registers offset */
 137:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** #define JDR_Offset                  ((uint8_t)0x28)
 138:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 139:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** /* ADC1 DR register base address */
 140:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** #define DR_ADDRESS                  ((uint32_t)0x4001244C)
 141:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 142:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** /**
 143:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @}
 144:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
 145:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 146:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** /** @defgroup ADC_Private_Macros
 147:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @{
 148:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
 149:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 150:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** /**
 151:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @}
 152:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
 153:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 154:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** /** @defgroup ADC_Private_Variables
 155:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @{
 156:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
 157:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 158:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** /**
 159:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @}
 160:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
 161:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 162:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** /** @defgroup ADC_Private_FunctionPrototypes
 163:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @{
 164:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
 165:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 166:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** /**
 167:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @}
 168:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
 169:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 170:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** /** @defgroup ADC_Private_Functions
 171:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @{
 172:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
 173:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 174:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** /**
 175:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @brief  Deinitializes the ADCx peripheral registers to their default reset values.
 176:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 177:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @retval None
 178:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
 179:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** void ADC_DeInit(ADC_TypeDef* ADCx)
 180:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** {
  27              		.loc 1 180 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 82B0     		sub	sp, sp, #8
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 16
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
  42 0006 7860     		str	r0, [r7, #4]
 181:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Check the parameters */
 182:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
  43              		.loc 1 182 0
  44 0008 7A68     		ldr	r2, [r7, #4]
  45 000a 244B     		ldr	r3, .L8
  46 000c 9A42     		cmp	r2, r3
  47 000e 07D0     		beq	.L2
  48              		.loc 1 182 0 is_stmt 0 discriminator 2
  49 0010 7A68     		ldr	r2, [r7, #4]
  50 0012 234B     		ldr	r3, .L8+4
  51 0014 9A42     		cmp	r2, r3
  52 0016 03D0     		beq	.L2
  53              		.loc 1 182 0 discriminator 1
  54 0018 7A68     		ldr	r2, [r7, #4]
  55 001a 224B     		ldr	r3, .L8+8
  56 001c 9A42     		cmp	r2, r3
  57 001e 02D1     		bne	.L3
  58              	.L2:
  59 0020 4FF00103 		mov	r3, #1
  60 0024 01E0     		b	.L4
  61              	.L3:
  62              		.loc 1 182 0 discriminator 3
  63 0026 4FF00003 		mov	r3, #0
  64              	.L4:
  65              		.loc 1 182 0 discriminator 4
  66 002a 1846     		mov	r0, r3
  67 002c FFF7FEFF 		bl	assert_param
 183:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   
 184:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   if (ADCx == ADC1)
  68              		.loc 1 184 0 is_stmt 1 discriminator 4
  69 0030 7A68     		ldr	r2, [r7, #4]
  70 0032 1A4B     		ldr	r3, .L8
  71 0034 9A42     		cmp	r2, r3
  72 0036 0CD1     		bne	.L5
 185:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
 186:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Enable ADC1 reset state */
 187:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC1, ENABLE);
  73              		.loc 1 187 0
  74 0038 4FF40070 		mov	r0, #512
  75 003c 4FF00101 		mov	r1, #1
  76 0040 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 188:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Release ADC1 from reset state */
 189:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC1, DISABLE);
  77              		.loc 1 189 0
  78 0044 4FF40070 		mov	r0, #512
  79 0048 4FF00001 		mov	r1, #0
  80 004c FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  81 0050 20E0     		b	.L1
  82              	.L5:
 190:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
 191:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   else if (ADCx == ADC2)
  83              		.loc 1 191 0
  84 0052 7A68     		ldr	r2, [r7, #4]
  85 0054 124B     		ldr	r3, .L8+4
  86 0056 9A42     		cmp	r2, r3
  87 0058 0CD1     		bne	.L7
 192:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
 193:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Enable ADC2 reset state */
 194:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC2, ENABLE);
  88              		.loc 1 194 0
  89 005a 4FF48060 		mov	r0, #1024
  90 005e 4FF00101 		mov	r1, #1
  91 0062 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 195:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Release ADC2 from reset state */
 196:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC2, DISABLE);
  92              		.loc 1 196 0
  93 0066 4FF48060 		mov	r0, #1024
  94 006a 4FF00001 		mov	r1, #0
  95 006e FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  96 0072 0FE0     		b	.L1
  97              	.L7:
 197:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
 198:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   else
 199:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
 200:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     if (ADCx == ADC3)
  98              		.loc 1 200 0
  99 0074 7A68     		ldr	r2, [r7, #4]
 100 0076 0B4B     		ldr	r3, .L8+8
 101 0078 9A42     		cmp	r2, r3
 102 007a 0BD1     		bne	.L1
 201:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     {
 202:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****       /* Enable ADC3 reset state */
 203:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC3, ENABLE);
 103              		.loc 1 203 0
 104 007c 4FF40040 		mov	r0, #32768
 105 0080 4FF00101 		mov	r1, #1
 106 0084 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 204:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****       /* Release ADC3 from reset state */
 205:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC3, DISABLE);
 107              		.loc 1 205 0
 108 0088 4FF40040 		mov	r0, #32768
 109 008c 4FF00001 		mov	r1, #0
 110 0090 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 111              	.L1:
 206:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     }
 207:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
 208:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** }
 112              		.loc 1 208 0
 113 0094 07F10807 		add	r7, r7, #8
 114 0098 BD46     		mov	sp, r7
 115 009a 80BD     		pop	{r7, pc}
 116              	.L9:
 117              		.align	2
 118              	.L8:
 119 009c 00240140 		.word	1073816576
 120 00a0 00280140 		.word	1073817600
 121 00a4 003C0140 		.word	1073822720
 122              		.cfi_endproc
 123              	.LFE29:
 125              		.section	.text.ADC_Init,"ax",%progbits
 126              		.align	2
 127              		.global	ADC_Init
 128              		.thumb
 129              		.thumb_func
 131              	ADC_Init:
 132              	.LFB30:
 209:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 210:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** /**
 211:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @brief  Initializes the ADCx peripheral according to the specified parameters
 212:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *         in the ADC_InitStruct.
 213:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 214:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADC_InitStruct: pointer to an ADC_InitTypeDef structure that contains
 215:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *         the configuration information for the specified ADC peripheral.
 216:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @retval None
 217:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
 218:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** void ADC_Init(ADC_TypeDef* ADCx, ADC_InitTypeDef* ADC_InitStruct)
 219:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** {
 133              		.loc 1 219 0
 134              		.cfi_startproc
 135              		@ args = 0, pretend = 0, frame = 16
 136              		@ frame_needed = 1, uses_anonymous_args = 0
 137 0000 80B5     		push	{r7, lr}
 138              	.LCFI3:
 139              		.cfi_def_cfa_offset 8
 140              		.cfi_offset 7, -8
 141              		.cfi_offset 14, -4
 142 0002 84B0     		sub	sp, sp, #16
 143              	.LCFI4:
 144              		.cfi_def_cfa_offset 24
 145 0004 00AF     		add	r7, sp, #0
 146              	.LCFI5:
 147              		.cfi_def_cfa_register 7
 148 0006 7860     		str	r0, [r7, #4]
 149 0008 3960     		str	r1, [r7, #0]
 220:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   uint32_t tmpreg1 = 0;
 150              		.loc 1 220 0
 151 000a 4FF00003 		mov	r3, #0
 152 000e FB60     		str	r3, [r7, #12]
 221:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   uint8_t tmpreg2 = 0;
 153              		.loc 1 221 0
 154 0010 4FF00003 		mov	r3, #0
 155 0014 FB72     		strb	r3, [r7, #11]
 222:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Check the parameters */
 223:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 156              		.loc 1 223 0
 157 0016 7A68     		ldr	r2, [r7, #4]
 158 0018 904B     		ldr	r3, .L31
 159 001a 9A42     		cmp	r2, r3
 160 001c 07D0     		beq	.L11
 161              		.loc 1 223 0 is_stmt 0 discriminator 2
 162 001e 7A68     		ldr	r2, [r7, #4]
 163 0020 8F4B     		ldr	r3, .L31+4
 164 0022 9A42     		cmp	r2, r3
 165 0024 03D0     		beq	.L11
 166              		.loc 1 223 0 discriminator 1
 167 0026 7A68     		ldr	r2, [r7, #4]
 168 0028 8E4B     		ldr	r3, .L31+8
 169 002a 9A42     		cmp	r2, r3
 170 002c 02D1     		bne	.L12
 171              	.L11:
 172 002e 4FF00103 		mov	r3, #1
 173 0032 01E0     		b	.L13
 174              	.L12:
 175              		.loc 1 223 0 discriminator 3
 176 0034 4FF00003 		mov	r3, #0
 177              	.L13:
 178              		.loc 1 223 0 discriminator 4
 179 0038 1846     		mov	r0, r3
 180 003a FFF7FEFF 		bl	assert_param
 224:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_MODE(ADC_InitStruct->ADC_Mode));
 181              		.loc 1 224 0 is_stmt 1 discriminator 4
 182 003e 3B68     		ldr	r3, [r7, #0]
 183 0040 1B68     		ldr	r3, [r3, #0]
 184 0042 002B     		cmp	r3, #0
 185 0044 2CD0     		beq	.L14
 186              		.loc 1 224 0 is_stmt 0 discriminator 2
 187 0046 3B68     		ldr	r3, [r7, #0]
 188 0048 1B68     		ldr	r3, [r3, #0]
 189 004a B3F5803F 		cmp	r3, #65536
 190 004e 27D0     		beq	.L14
 191              		.loc 1 224 0 discriminator 1
 192 0050 3B68     		ldr	r3, [r7, #0]
 193 0052 1B68     		ldr	r3, [r3, #0]
 194 0054 B3F5003F 		cmp	r3, #131072
 195 0058 22D0     		beq	.L14
 196              		.loc 1 224 0 discriminator 2
 197 005a 3B68     		ldr	r3, [r7, #0]
 198 005c 1B68     		ldr	r3, [r3, #0]
 199 005e B3F5403F 		cmp	r3, #196608
 200 0062 1DD0     		beq	.L14
 201              		.loc 1 224 0 discriminator 3
 202 0064 3B68     		ldr	r3, [r7, #0]
 203 0066 1B68     		ldr	r3, [r3, #0]
 204 0068 B3F5802F 		cmp	r3, #262144
 205 006c 18D0     		beq	.L14
 206              		.loc 1 224 0 discriminator 4
 207 006e 3B68     		ldr	r3, [r7, #0]
 208 0070 1B68     		ldr	r3, [r3, #0]
 209 0072 B3F5A02F 		cmp	r3, #327680
 210 0076 13D0     		beq	.L14
 211              		.loc 1 224 0 discriminator 5
 212 0078 3B68     		ldr	r3, [r7, #0]
 213 007a 1B68     		ldr	r3, [r3, #0]
 214 007c B3F5C02F 		cmp	r3, #393216
 215 0080 0ED0     		beq	.L14
 216              		.loc 1 224 0 discriminator 6
 217 0082 3B68     		ldr	r3, [r7, #0]
 218 0084 1B68     		ldr	r3, [r3, #0]
 219 0086 B3F5E02F 		cmp	r3, #458752
 220 008a 09D0     		beq	.L14
 221              		.loc 1 224 0 discriminator 7
 222 008c 3B68     		ldr	r3, [r7, #0]
 223 008e 1B68     		ldr	r3, [r3, #0]
 224 0090 B3F5002F 		cmp	r3, #524288
 225 0094 04D0     		beq	.L14
 226              		.loc 1 224 0 discriminator 8
 227 0096 3B68     		ldr	r3, [r7, #0]
 228 0098 1B68     		ldr	r3, [r3, #0]
 229 009a B3F5102F 		cmp	r3, #589824
 230 009e 02D1     		bne	.L15
 231              	.L14:
 232              		.loc 1 224 0 discriminator 1
 233 00a0 4FF00103 		mov	r3, #1
 234 00a4 01E0     		b	.L16
 235              	.L15:
 236              		.loc 1 224 0 discriminator 3
 237 00a6 4FF00003 		mov	r3, #0
 238              	.L16:
 239              		.loc 1 224 0 discriminator 4
 240 00aa 1846     		mov	r0, r3
 241 00ac FFF7FEFF 		bl	assert_param
 225:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(ADC_InitStruct->ADC_ScanConvMode));
 242              		.loc 1 225 0 is_stmt 1 discriminator 4
 243 00b0 3B68     		ldr	r3, [r7, #0]
 244 00b2 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 245 00b4 002B     		cmp	r3, #0
 246 00b6 03D0     		beq	.L17
 247              		.loc 1 225 0 is_stmt 0 discriminator 2
 248 00b8 3B68     		ldr	r3, [r7, #0]
 249 00ba 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 250 00bc 012B     		cmp	r3, #1
 251 00be 02D1     		bne	.L18
 252              	.L17:
 253              		.loc 1 225 0 discriminator 1
 254 00c0 4FF00103 		mov	r3, #1
 255 00c4 01E0     		b	.L19
 256              	.L18:
 257              		.loc 1 225 0 discriminator 3
 258 00c6 4FF00003 		mov	r3, #0
 259              	.L19:
 260              		.loc 1 225 0 discriminator 4
 261 00ca 1846     		mov	r0, r3
 262 00cc FFF7FEFF 		bl	assert_param
 226:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(ADC_InitStruct->ADC_ContinuousConvMode));
 263              		.loc 1 226 0 is_stmt 1 discriminator 4
 264 00d0 3B68     		ldr	r3, [r7, #0]
 265 00d2 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 266 00d4 002B     		cmp	r3, #0
 267 00d6 03D0     		beq	.L20
 268              		.loc 1 226 0 is_stmt 0 discriminator 2
 269 00d8 3B68     		ldr	r3, [r7, #0]
 270 00da 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 271 00dc 012B     		cmp	r3, #1
 272 00de 02D1     		bne	.L21
 273              	.L20:
 274              		.loc 1 226 0 discriminator 1
 275 00e0 4FF00103 		mov	r3, #1
 276 00e4 01E0     		b	.L22
 277              	.L21:
 278              		.loc 1 226 0 discriminator 3
 279 00e6 4FF00003 		mov	r3, #0
 280              	.L22:
 281              		.loc 1 226 0 discriminator 4
 282 00ea 1846     		mov	r0, r3
 283 00ec FFF7FEFF 		bl	assert_param
 227:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_EXT_TRIG(ADC_InitStruct->ADC_ExternalTrigConv));   
 284              		.loc 1 227 0 is_stmt 1 discriminator 4
 285 00f0 3B68     		ldr	r3, [r7, #0]
 286 00f2 9B68     		ldr	r3, [r3, #8]
 287 00f4 002B     		cmp	r3, #0
 288 00f6 3FD0     		beq	.L23
 289              		.loc 1 227 0 is_stmt 0 discriminator 2
 290 00f8 3B68     		ldr	r3, [r7, #0]
 291 00fa 9B68     		ldr	r3, [r3, #8]
 292 00fc B3F5003F 		cmp	r3, #131072
 293 0100 3AD0     		beq	.L23
 294              		.loc 1 227 0 discriminator 1
 295 0102 3B68     		ldr	r3, [r7, #0]
 296 0104 9B68     		ldr	r3, [r3, #8]
 297 0106 B3F5802F 		cmp	r3, #262144
 298 010a 35D0     		beq	.L23
 299              		.loc 1 227 0 discriminator 2
 300 010c 3B68     		ldr	r3, [r7, #0]
 301 010e 9B68     		ldr	r3, [r3, #8]
 302 0110 B3F5C02F 		cmp	r3, #393216
 303 0114 30D0     		beq	.L23
 304              		.loc 1 227 0 discriminator 3
 305 0116 3B68     		ldr	r3, [r7, #0]
 306 0118 9B68     		ldr	r3, [r3, #8]
 307 011a B3F5002F 		cmp	r3, #524288
 308 011e 2BD0     		beq	.L23
 309              		.loc 1 227 0 discriminator 4
 310 0120 3B68     		ldr	r3, [r7, #0]
 311 0122 9B68     		ldr	r3, [r3, #8]
 312 0124 B3F5202F 		cmp	r3, #655360
 313 0128 26D0     		beq	.L23
 314              		.loc 1 227 0 discriminator 5
 315 012a 3B68     		ldr	r3, [r7, #0]
 316 012c 9B68     		ldr	r3, [r3, #8]
 317 012e B3F5402F 		cmp	r3, #786432
 318 0132 21D0     		beq	.L23
 319              		.loc 1 227 0 discriminator 6
 320 0134 3B68     		ldr	r3, [r7, #0]
 321 0136 9B68     		ldr	r3, [r3, #8]
 322 0138 B3F5602F 		cmp	r3, #917504
 323 013c 1CD0     		beq	.L23
 324              		.loc 1 227 0 discriminator 7
 325 013e 3B68     		ldr	r3, [r7, #0]
 326 0140 9B68     		ldr	r3, [r3, #8]
 327 0142 002B     		cmp	r3, #0
 328 0144 18D0     		beq	.L23
 329              		.loc 1 227 0 discriminator 8
 330 0146 3B68     		ldr	r3, [r7, #0]
 331 0148 9B68     		ldr	r3, [r3, #8]
 332 014a B3F5003F 		cmp	r3, #131072
 333 014e 13D0     		beq	.L23
 334              		.loc 1 227 0 discriminator 9
 335 0150 3B68     		ldr	r3, [r7, #0]
 336 0152 9B68     		ldr	r3, [r3, #8]
 337 0154 B3F5C02F 		cmp	r3, #393216
 338 0158 0ED0     		beq	.L23
 339              		.loc 1 227 0 discriminator 10
 340 015a 3B68     		ldr	r3, [r7, #0]
 341 015c 9B68     		ldr	r3, [r3, #8]
 342 015e B3F5002F 		cmp	r3, #524288
 343 0162 09D0     		beq	.L23
 344              		.loc 1 227 0 discriminator 11
 345 0164 3B68     		ldr	r3, [r7, #0]
 346 0166 9B68     		ldr	r3, [r3, #8]
 347 0168 B3F5202F 		cmp	r3, #655360
 348 016c 04D0     		beq	.L23
 349              		.loc 1 227 0 discriminator 12
 350 016e 3B68     		ldr	r3, [r7, #0]
 351 0170 9B68     		ldr	r3, [r3, #8]
 352 0172 B3F5402F 		cmp	r3, #786432
 353 0176 02D1     		bne	.L24
 354              	.L23:
 355              		.loc 1 227 0 discriminator 1
 356 0178 4FF00103 		mov	r3, #1
 357 017c 01E0     		b	.L25
 358              	.L24:
 359              		.loc 1 227 0 discriminator 3
 360 017e 4FF00003 		mov	r3, #0
 361              	.L25:
 362              		.loc 1 227 0 discriminator 4
 363 0182 1846     		mov	r0, r3
 364 0184 FFF7FEFF 		bl	assert_param
 228:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_DATA_ALIGN(ADC_InitStruct->ADC_DataAlign)); 
 365              		.loc 1 228 0 is_stmt 1 discriminator 4
 366 0188 3B68     		ldr	r3, [r7, #0]
 367 018a DB68     		ldr	r3, [r3, #12]
 368 018c 002B     		cmp	r3, #0
 369 018e 04D0     		beq	.L26
 370              		.loc 1 228 0 is_stmt 0 discriminator 2
 371 0190 3B68     		ldr	r3, [r7, #0]
 372 0192 DB68     		ldr	r3, [r3, #12]
 373 0194 B3F5006F 		cmp	r3, #2048
 374 0198 02D1     		bne	.L27
 375              	.L26:
 376              		.loc 1 228 0 discriminator 1
 377 019a 4FF00103 		mov	r3, #1
 378 019e 01E0     		b	.L28
 379              	.L27:
 380              		.loc 1 228 0 discriminator 3
 381 01a0 4FF00003 		mov	r3, #0
 382              	.L28:
 383              		.loc 1 228 0 discriminator 4
 384 01a4 1846     		mov	r0, r3
 385 01a6 FFF7FEFF 		bl	assert_param
 229:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_REGULAR_LENGTH(ADC_InitStruct->ADC_NbrOfChannel));
 386              		.loc 1 229 0 is_stmt 1 discriminator 4
 387 01aa 3B68     		ldr	r3, [r7, #0]
 388 01ac 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 389 01ae 002B     		cmp	r3, #0
 390 01b0 06D0     		beq	.L29
 391              		.loc 1 229 0 is_stmt 0 discriminator 1
 392 01b2 3B68     		ldr	r3, [r7, #0]
 393 01b4 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 394 01b6 102B     		cmp	r3, #16
 395 01b8 02D8     		bhi	.L29
 396              		.loc 1 229 0 discriminator 3
 397 01ba 4FF00103 		mov	r3, #1
 398 01be 01E0     		b	.L30
 399              	.L29:
 400              		.loc 1 229 0 discriminator 2
 401 01c0 4FF00003 		mov	r3, #0
 402              	.L30:
 403              		.loc 1 229 0 discriminator 4
 404 01c4 1846     		mov	r0, r3
 405 01c6 FFF7FEFF 		bl	assert_param
 230:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 231:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /*---------------------------- ADCx CR1 Configuration -----------------*/
 232:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Get the ADCx CR1 value */
 233:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   tmpreg1 = ADCx->CR1;
 406              		.loc 1 233 0 is_stmt 1 discriminator 4
 407 01ca 7B68     		ldr	r3, [r7, #4]
 408 01cc 5B68     		ldr	r3, [r3, #4]
 409 01ce FB60     		str	r3, [r7, #12]
 234:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Clear DUALMOD and SCAN bits */
 235:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   tmpreg1 &= CR1_CLEAR_Mask;
 410              		.loc 1 235 0 discriminator 4
 411 01d0 FB68     		ldr	r3, [r7, #12]
 412 01d2 23F47023 		bic	r3, r3, #983040
 413 01d6 23F48073 		bic	r3, r3, #256
 414 01da FB60     		str	r3, [r7, #12]
 236:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Configure ADCx: Dual mode and scan conversion mode */
 237:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Set DUALMOD bits according to ADC_Mode value */
 238:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Set SCAN bit according to ADC_ScanConvMode value */
 239:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   tmpreg1 |= (uint32_t)(ADC_InitStruct->ADC_Mode | ((uint32_t)ADC_InitStruct->ADC_ScanConvMode << 8
 415              		.loc 1 239 0 discriminator 4
 416 01dc 3B68     		ldr	r3, [r7, #0]
 417 01de 1A68     		ldr	r2, [r3, #0]
 418 01e0 3B68     		ldr	r3, [r7, #0]
 419 01e2 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 420 01e4 4FEA0323 		lsl	r3, r3, #8
 421 01e8 1343     		orrs	r3, r3, r2
 422 01ea FA68     		ldr	r2, [r7, #12]
 423 01ec 1343     		orrs	r3, r3, r2
 424 01ee FB60     		str	r3, [r7, #12]
 240:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Write to ADCx CR1 */
 241:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   ADCx->CR1 = tmpreg1;
 425              		.loc 1 241 0 discriminator 4
 426 01f0 7B68     		ldr	r3, [r7, #4]
 427 01f2 FA68     		ldr	r2, [r7, #12]
 428 01f4 5A60     		str	r2, [r3, #4]
 242:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 243:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /*---------------------------- ADCx CR2 Configuration -----------------*/
 244:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Get the ADCx CR2 value */
 245:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   tmpreg1 = ADCx->CR2;
 429              		.loc 1 245 0 discriminator 4
 430 01f6 7B68     		ldr	r3, [r7, #4]
 431 01f8 9B68     		ldr	r3, [r3, #8]
 432 01fa FB60     		str	r3, [r7, #12]
 246:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Clear CONT, ALIGN and EXTSEL bits */
 247:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   tmpreg1 &= CR2_CLEAR_Mask;
 433              		.loc 1 247 0 discriminator 4
 434 01fc FA68     		ldr	r2, [r7, #12]
 435 01fe 1A4B     		ldr	r3, .L31+12
 436 0200 1340     		ands	r3, r3, r2
 437 0202 FB60     		str	r3, [r7, #12]
 248:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Configure ADCx: external trigger event and continuous conversion mode */
 249:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Set ALIGN bit according to ADC_DataAlign value */
 250:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Set EXTSEL bits according to ADC_ExternalTrigConv value */
 251:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Set CONT bit according to ADC_ContinuousConvMode value */
 252:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   tmpreg1 |= (uint32_t)(ADC_InitStruct->ADC_DataAlign | ADC_InitStruct->ADC_ExternalTrigConv |
 438              		.loc 1 252 0 discriminator 4
 439 0204 3B68     		ldr	r3, [r7, #0]
 440 0206 DA68     		ldr	r2, [r3, #12]
 441 0208 3B68     		ldr	r3, [r7, #0]
 442 020a 9B68     		ldr	r3, [r3, #8]
 443 020c 1A43     		orrs	r2, r2, r3
 253:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****             ((uint32_t)ADC_InitStruct->ADC_ContinuousConvMode << 1));
 444              		.loc 1 253 0 discriminator 4
 445 020e 3B68     		ldr	r3, [r7, #0]
 446 0210 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 447 0212 4FEA4303 		lsl	r3, r3, #1
 252:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   tmpreg1 |= (uint32_t)(ADC_InitStruct->ADC_DataAlign | ADC_InitStruct->ADC_ExternalTrigConv |
 448              		.loc 1 252 0 discriminator 4
 449 0216 1343     		orrs	r3, r3, r2
 450 0218 FA68     		ldr	r2, [r7, #12]
 451 021a 1343     		orrs	r3, r3, r2
 452 021c FB60     		str	r3, [r7, #12]
 254:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Write to ADCx CR2 */
 255:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   ADCx->CR2 = tmpreg1;
 453              		.loc 1 255 0 discriminator 4
 454 021e 7B68     		ldr	r3, [r7, #4]
 455 0220 FA68     		ldr	r2, [r7, #12]
 456 0222 9A60     		str	r2, [r3, #8]
 256:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 257:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /*---------------------------- ADCx SQR1 Configuration -----------------*/
 258:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Get the ADCx SQR1 value */
 259:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   tmpreg1 = ADCx->SQR1;
 457              		.loc 1 259 0 discriminator 4
 458 0224 7B68     		ldr	r3, [r7, #4]
 459 0226 DB6A     		ldr	r3, [r3, #44]
 460 0228 FB60     		str	r3, [r7, #12]
 260:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Clear L bits */
 261:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   tmpreg1 &= SQR1_CLEAR_Mask;
 461              		.loc 1 261 0 discriminator 4
 462 022a FB68     		ldr	r3, [r7, #12]
 463 022c 23F47003 		bic	r3, r3, #15728640
 464 0230 FB60     		str	r3, [r7, #12]
 262:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Configure ADCx: regular channel sequence length */
 263:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Set L bits according to ADC_NbrOfChannel value */
 264:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   tmpreg2 |= (uint8_t) (ADC_InitStruct->ADC_NbrOfChannel - (uint8_t)1);
 465              		.loc 1 264 0 discriminator 4
 466 0232 3B68     		ldr	r3, [r7, #0]
 467 0234 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 468 0236 03F1FF33 		add	r3, r3, #-1
 469 023a DAB2     		uxtb	r2, r3
 470 023c FB7A     		ldrb	r3, [r7, #11]
 471 023e 1343     		orrs	r3, r3, r2
 472 0240 FB72     		strb	r3, [r7, #11]
 265:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   tmpreg1 |= (uint32_t)tmpreg2 << 20;
 473              		.loc 1 265 0 discriminator 4
 474 0242 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 475 0244 4FEA0353 		lsl	r3, r3, #20
 476 0248 FA68     		ldr	r2, [r7, #12]
 477 024a 1343     		orrs	r3, r3, r2
 478 024c FB60     		str	r3, [r7, #12]
 266:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Write to ADCx SQR1 */
 267:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   ADCx->SQR1 = tmpreg1;
 479              		.loc 1 267 0 discriminator 4
 480 024e 7B68     		ldr	r3, [r7, #4]
 481 0250 FA68     		ldr	r2, [r7, #12]
 482 0252 DA62     		str	r2, [r3, #44]
 268:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** }
 483              		.loc 1 268 0 discriminator 4
 484 0254 07F11007 		add	r7, r7, #16
 485 0258 BD46     		mov	sp, r7
 486 025a 80BD     		pop	{r7, pc}
 487              	.L32:
 488              		.align	2
 489              	.L31:
 490 025c 00240140 		.word	1073816576
 491 0260 00280140 		.word	1073817600
 492 0264 003C0140 		.word	1073822720
 493 0268 FDF7F1FF 		.word	-919555
 494              		.cfi_endproc
 495              	.LFE30:
 497              		.section	.text.ADC_StructInit,"ax",%progbits
 498              		.align	2
 499              		.global	ADC_StructInit
 500              		.thumb
 501              		.thumb_func
 503              	ADC_StructInit:
 504              	.LFB31:
 269:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 270:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** /**
 271:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @brief  Fills each ADC_InitStruct member with its default value.
 272:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADC_InitStruct : pointer to an ADC_InitTypeDef structure which will be initialized.
 273:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @retval None
 274:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
 275:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** void ADC_StructInit(ADC_InitTypeDef* ADC_InitStruct)
 276:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** {
 505              		.loc 1 276 0
 506              		.cfi_startproc
 507              		@ args = 0, pretend = 0, frame = 8
 508              		@ frame_needed = 1, uses_anonymous_args = 0
 509              		@ link register save eliminated.
 510 0000 80B4     		push	{r7}
 511              	.LCFI6:
 512              		.cfi_def_cfa_offset 4
 513              		.cfi_offset 7, -4
 514 0002 83B0     		sub	sp, sp, #12
 515              	.LCFI7:
 516              		.cfi_def_cfa_offset 16
 517 0004 00AF     		add	r7, sp, #0
 518              	.LCFI8:
 519              		.cfi_def_cfa_register 7
 520 0006 7860     		str	r0, [r7, #4]
 277:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Reset ADC init structure parameters values */
 278:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Initialize the ADC_Mode member */
 279:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   ADC_InitStruct->ADC_Mode = ADC_Mode_Independent;
 521              		.loc 1 279 0
 522 0008 7B68     		ldr	r3, [r7, #4]
 523 000a 4FF00002 		mov	r2, #0
 524 000e 1A60     		str	r2, [r3, #0]
 280:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* initialize the ADC_ScanConvMode member */
 281:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   ADC_InitStruct->ADC_ScanConvMode = DISABLE;
 525              		.loc 1 281 0
 526 0010 7B68     		ldr	r3, [r7, #4]
 527 0012 4FF00002 		mov	r2, #0
 528 0016 1A71     		strb	r2, [r3, #4]
 282:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Initialize the ADC_ContinuousConvMode member */
 283:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   ADC_InitStruct->ADC_ContinuousConvMode = DISABLE;
 529              		.loc 1 283 0
 530 0018 7B68     		ldr	r3, [r7, #4]
 531 001a 4FF00002 		mov	r2, #0
 532 001e 5A71     		strb	r2, [r3, #5]
 284:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Initialize the ADC_ExternalTrigConv member */
 285:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   ADC_InitStruct->ADC_ExternalTrigConv = ADC_ExternalTrigConv_T1_CC1;
 533              		.loc 1 285 0
 534 0020 7B68     		ldr	r3, [r7, #4]
 535 0022 4FF00002 		mov	r2, #0
 536 0026 9A60     		str	r2, [r3, #8]
 286:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Initialize the ADC_DataAlign member */
 287:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   ADC_InitStruct->ADC_DataAlign = ADC_DataAlign_Right;
 537              		.loc 1 287 0
 538 0028 7B68     		ldr	r3, [r7, #4]
 539 002a 4FF00002 		mov	r2, #0
 540 002e DA60     		str	r2, [r3, #12]
 288:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Initialize the ADC_NbrOfChannel member */
 289:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   ADC_InitStruct->ADC_NbrOfChannel = 1;
 541              		.loc 1 289 0
 542 0030 7B68     		ldr	r3, [r7, #4]
 543 0032 4FF00102 		mov	r2, #1
 544 0036 1A74     		strb	r2, [r3, #16]
 290:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** }
 545              		.loc 1 290 0
 546 0038 07F10C07 		add	r7, r7, #12
 547 003c BD46     		mov	sp, r7
 548 003e 80BC     		pop	{r7}
 549 0040 7047     		bx	lr
 550              		.cfi_endproc
 551              	.LFE31:
 553 0042 00BF     		.section	.text.ADC_Cmd,"ax",%progbits
 554              		.align	2
 555              		.global	ADC_Cmd
 556              		.thumb
 557              		.thumb_func
 559              	ADC_Cmd:
 560              	.LFB32:
 291:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 292:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** /**
 293:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the specified ADC peripheral.
 294:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 295:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the ADCx peripheral.
 296:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
 297:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @retval None
 298:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
 299:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** void ADC_Cmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 300:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** {
 561              		.loc 1 300 0
 562              		.cfi_startproc
 563              		@ args = 0, pretend = 0, frame = 8
 564              		@ frame_needed = 1, uses_anonymous_args = 0
 565 0000 80B5     		push	{r7, lr}
 566              	.LCFI9:
 567              		.cfi_def_cfa_offset 8
 568              		.cfi_offset 7, -8
 569              		.cfi_offset 14, -4
 570 0002 82B0     		sub	sp, sp, #8
 571              	.LCFI10:
 572              		.cfi_def_cfa_offset 16
 573 0004 00AF     		add	r7, sp, #0
 574              	.LCFI11:
 575              		.cfi_def_cfa_register 7
 576 0006 7860     		str	r0, [r7, #4]
 577 0008 0B46     		mov	r3, r1
 578 000a FB70     		strb	r3, [r7, #3]
 301:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Check the parameters */
 302:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 579              		.loc 1 302 0
 580 000c 7A68     		ldr	r2, [r7, #4]
 581 000e 1A4B     		ldr	r3, .L43
 582 0010 9A42     		cmp	r2, r3
 583 0012 07D0     		beq	.L35
 584              		.loc 1 302 0 is_stmt 0 discriminator 2
 585 0014 7A68     		ldr	r2, [r7, #4]
 586 0016 194B     		ldr	r3, .L43+4
 587 0018 9A42     		cmp	r2, r3
 588 001a 03D0     		beq	.L35
 589              		.loc 1 302 0 discriminator 1
 590 001c 7A68     		ldr	r2, [r7, #4]
 591 001e 184B     		ldr	r3, .L43+8
 592 0020 9A42     		cmp	r2, r3
 593 0022 02D1     		bne	.L36
 594              	.L35:
 595 0024 4FF00103 		mov	r3, #1
 596 0028 01E0     		b	.L37
 597              	.L36:
 598              		.loc 1 302 0 discriminator 3
 599 002a 4FF00003 		mov	r3, #0
 600              	.L37:
 601              		.loc 1 302 0 discriminator 4
 602 002e 1846     		mov	r0, r3
 603 0030 FFF7FEFF 		bl	assert_param
 303:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 604              		.loc 1 303 0 is_stmt 1 discriminator 4
 605 0034 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 606 0036 002B     		cmp	r3, #0
 607 0038 02D0     		beq	.L38
 608              		.loc 1 303 0 is_stmt 0 discriminator 2
 609 003a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 610 003c 012B     		cmp	r3, #1
 611 003e 02D1     		bne	.L39
 612              	.L38:
 613              		.loc 1 303 0 discriminator 1
 614 0040 4FF00103 		mov	r3, #1
 615 0044 01E0     		b	.L40
 616              	.L39:
 617              		.loc 1 303 0 discriminator 3
 618 0046 4FF00003 		mov	r3, #0
 619              	.L40:
 620              		.loc 1 303 0 discriminator 4
 621 004a 1846     		mov	r0, r3
 622 004c FFF7FEFF 		bl	assert_param
 304:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 623              		.loc 1 304 0 is_stmt 1 discriminator 4
 624 0050 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 625 0052 002B     		cmp	r3, #0
 626 0054 06D0     		beq	.L41
 305:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
 306:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Set the ADON bit to wake up the ADC from power down mode */
 307:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     ADCx->CR2 |= CR2_ADON_Set;
 627              		.loc 1 307 0
 628 0056 7B68     		ldr	r3, [r7, #4]
 629 0058 9B68     		ldr	r3, [r3, #8]
 630 005a 43F00102 		orr	r2, r3, #1
 631 005e 7B68     		ldr	r3, [r7, #4]
 632 0060 9A60     		str	r2, [r3, #8]
 633 0062 05E0     		b	.L34
 634              	.L41:
 308:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
 309:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   else
 310:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
 311:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Disable the selected ADC peripheral */
 312:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     ADCx->CR2 &= CR2_ADON_Reset;
 635              		.loc 1 312 0
 636 0064 7B68     		ldr	r3, [r7, #4]
 637 0066 9B68     		ldr	r3, [r3, #8]
 638 0068 23F00102 		bic	r2, r3, #1
 639 006c 7B68     		ldr	r3, [r7, #4]
 640 006e 9A60     		str	r2, [r3, #8]
 641              	.L34:
 313:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
 314:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** }
 642              		.loc 1 314 0
 643 0070 07F10807 		add	r7, r7, #8
 644 0074 BD46     		mov	sp, r7
 645 0076 80BD     		pop	{r7, pc}
 646              	.L44:
 647              		.align	2
 648              	.L43:
 649 0078 00240140 		.word	1073816576
 650 007c 00280140 		.word	1073817600
 651 0080 003C0140 		.word	1073822720
 652              		.cfi_endproc
 653              	.LFE32:
 655              		.section	.text.ADC_DMACmd,"ax",%progbits
 656              		.align	2
 657              		.global	ADC_DMACmd
 658              		.thumb
 659              		.thumb_func
 661              	ADC_DMACmd:
 662              	.LFB33:
 315:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 316:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** /**
 317:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the specified ADC DMA request.
 318:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1 or 3 to select the ADC peripheral.
 319:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *   Note: ADC2 hasn't a DMA capability.
 320:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the selected ADC DMA transfer.
 321:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
 322:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @retval None
 323:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
 324:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** void ADC_DMACmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 325:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** {
 663              		.loc 1 325 0
 664              		.cfi_startproc
 665              		@ args = 0, pretend = 0, frame = 8
 666              		@ frame_needed = 1, uses_anonymous_args = 0
 667 0000 80B5     		push	{r7, lr}
 668              	.LCFI12:
 669              		.cfi_def_cfa_offset 8
 670              		.cfi_offset 7, -8
 671              		.cfi_offset 14, -4
 672 0002 82B0     		sub	sp, sp, #8
 673              	.LCFI13:
 674              		.cfi_def_cfa_offset 16
 675 0004 00AF     		add	r7, sp, #0
 676              	.LCFI14:
 677              		.cfi_def_cfa_register 7
 678 0006 7860     		str	r0, [r7, #4]
 679 0008 0B46     		mov	r3, r1
 680 000a FB70     		strb	r3, [r7, #3]
 326:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Check the parameters */
 327:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_DMA_PERIPH(ADCx));
 681              		.loc 1 327 0
 682 000c 7A68     		ldr	r2, [r7, #4]
 683 000e 184B     		ldr	r3, .L54
 684 0010 9A42     		cmp	r2, r3
 685 0012 03D0     		beq	.L46
 686              		.loc 1 327 0 is_stmt 0 discriminator 2
 687 0014 7A68     		ldr	r2, [r7, #4]
 688 0016 174B     		ldr	r3, .L54+4
 689 0018 9A42     		cmp	r2, r3
 690 001a 02D1     		bne	.L47
 691              	.L46:
 692              		.loc 1 327 0 discriminator 1
 693 001c 4FF00103 		mov	r3, #1
 694 0020 01E0     		b	.L48
 695              	.L47:
 696              		.loc 1 327 0 discriminator 3
 697 0022 4FF00003 		mov	r3, #0
 698              	.L48:
 699              		.loc 1 327 0 discriminator 4
 700 0026 1846     		mov	r0, r3
 701 0028 FFF7FEFF 		bl	assert_param
 328:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 702              		.loc 1 328 0 is_stmt 1 discriminator 4
 703 002c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 704 002e 002B     		cmp	r3, #0
 705 0030 02D0     		beq	.L49
 706              		.loc 1 328 0 is_stmt 0 discriminator 2
 707 0032 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 708 0034 012B     		cmp	r3, #1
 709 0036 02D1     		bne	.L50
 710              	.L49:
 711              		.loc 1 328 0 discriminator 1
 712 0038 4FF00103 		mov	r3, #1
 713 003c 01E0     		b	.L51
 714              	.L50:
 715              		.loc 1 328 0 discriminator 3
 716 003e 4FF00003 		mov	r3, #0
 717              	.L51:
 718              		.loc 1 328 0 discriminator 4
 719 0042 1846     		mov	r0, r3
 720 0044 FFF7FEFF 		bl	assert_param
 329:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 721              		.loc 1 329 0 is_stmt 1 discriminator 4
 722 0048 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 723 004a 002B     		cmp	r3, #0
 724 004c 06D0     		beq	.L52
 330:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
 331:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Enable the selected ADC DMA request */
 332:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     ADCx->CR2 |= CR2_DMA_Set;
 725              		.loc 1 332 0
 726 004e 7B68     		ldr	r3, [r7, #4]
 727 0050 9B68     		ldr	r3, [r3, #8]
 728 0052 43F48072 		orr	r2, r3, #256
 729 0056 7B68     		ldr	r3, [r7, #4]
 730 0058 9A60     		str	r2, [r3, #8]
 731 005a 05E0     		b	.L45
 732              	.L52:
 333:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
 334:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   else
 335:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
 336:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Disable the selected ADC DMA request */
 337:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     ADCx->CR2 &= CR2_DMA_Reset;
 733              		.loc 1 337 0
 734 005c 7B68     		ldr	r3, [r7, #4]
 735 005e 9B68     		ldr	r3, [r3, #8]
 736 0060 23F48072 		bic	r2, r3, #256
 737 0064 7B68     		ldr	r3, [r7, #4]
 738 0066 9A60     		str	r2, [r3, #8]
 739              	.L45:
 338:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
 339:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** }
 740              		.loc 1 339 0
 741 0068 07F10807 		add	r7, r7, #8
 742 006c BD46     		mov	sp, r7
 743 006e 80BD     		pop	{r7, pc}
 744              	.L55:
 745              		.align	2
 746              	.L54:
 747 0070 00240140 		.word	1073816576
 748 0074 003C0140 		.word	1073822720
 749              		.cfi_endproc
 750              	.LFE33:
 752              		.section	.text.ADC_ITConfig,"ax",%progbits
 753              		.align	2
 754              		.global	ADC_ITConfig
 755              		.thumb
 756              		.thumb_func
 758              	ADC_ITConfig:
 759              	.LFB34:
 340:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 341:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** /**
 342:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the specified ADC interrupts.
 343:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 344:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADC_IT: specifies the ADC interrupt sources to be enabled or disabled. 
 345:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *   This parameter can be any combination of the following values:
 346:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_IT_EOC: End of conversion interrupt mask
 347:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_IT_AWD: Analog watchdog interrupt mask
 348:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_IT_JEOC: End of injected conversion interrupt mask
 349:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the specified ADC interrupts.
 350:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
 351:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @retval None
 352:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
 353:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** void ADC_ITConfig(ADC_TypeDef* ADCx, uint16_t ADC_IT, FunctionalState NewState)
 354:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** {
 760              		.loc 1 354 0
 761              		.cfi_startproc
 762              		@ args = 0, pretend = 0, frame = 16
 763              		@ frame_needed = 1, uses_anonymous_args = 0
 764 0000 80B5     		push	{r7, lr}
 765              	.LCFI15:
 766              		.cfi_def_cfa_offset 8
 767              		.cfi_offset 7, -8
 768              		.cfi_offset 14, -4
 769 0002 84B0     		sub	sp, sp, #16
 770              	.LCFI16:
 771              		.cfi_def_cfa_offset 24
 772 0004 00AF     		add	r7, sp, #0
 773              	.LCFI17:
 774              		.cfi_def_cfa_register 7
 775 0006 7860     		str	r0, [r7, #4]
 776 0008 1346     		mov	r3, r2
 777 000a 0A46     		mov	r2, r1	@ movhi
 778 000c 7A80     		strh	r2, [r7, #2]	@ movhi
 779 000e 7B70     		strb	r3, [r7, #1]
 355:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   uint8_t itmask = 0;
 780              		.loc 1 355 0
 781 0010 4FF00003 		mov	r3, #0
 782 0014 FB73     		strb	r3, [r7, #15]
 356:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Check the parameters */
 357:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 783              		.loc 1 357 0
 784 0016 7A68     		ldr	r2, [r7, #4]
 785 0018 244B     		ldr	r3, .L67
 786 001a 9A42     		cmp	r2, r3
 787 001c 07D0     		beq	.L57
 788              		.loc 1 357 0 is_stmt 0 discriminator 2
 789 001e 7A68     		ldr	r2, [r7, #4]
 790 0020 234B     		ldr	r3, .L67+4
 791 0022 9A42     		cmp	r2, r3
 792 0024 03D0     		beq	.L57
 793              		.loc 1 357 0 discriminator 1
 794 0026 7A68     		ldr	r2, [r7, #4]
 795 0028 224B     		ldr	r3, .L67+8
 796 002a 9A42     		cmp	r2, r3
 797 002c 02D1     		bne	.L58
 798              	.L57:
 799 002e 4FF00103 		mov	r3, #1
 800 0032 01E0     		b	.L59
 801              	.L58:
 802              		.loc 1 357 0 discriminator 3
 803 0034 4FF00003 		mov	r3, #0
 804              	.L59:
 805              		.loc 1 357 0 discriminator 4
 806 0038 1846     		mov	r0, r3
 807 003a FFF7FEFF 		bl	assert_param
 358:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 808              		.loc 1 358 0 is_stmt 1 discriminator 4
 809 003e 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 810 0040 002B     		cmp	r3, #0
 811 0042 02D0     		beq	.L60
 812              		.loc 1 358 0 is_stmt 0 discriminator 2
 813 0044 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 814 0046 012B     		cmp	r3, #1
 815 0048 02D1     		bne	.L61
 816              	.L60:
 817              		.loc 1 358 0 discriminator 1
 818 004a 4FF00103 		mov	r3, #1
 819 004e 01E0     		b	.L62
 820              	.L61:
 821              		.loc 1 358 0 discriminator 3
 822 0050 4FF00003 		mov	r3, #0
 823              	.L62:
 824              		.loc 1 358 0 discriminator 4
 825 0054 1846     		mov	r0, r3
 826 0056 FFF7FEFF 		bl	assert_param
 359:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_IT(ADC_IT));
 827              		.loc 1 359 0 is_stmt 1 discriminator 4
 828 005a 7A88     		ldrh	r2, [r7, #2]
 829 005c 4FF61F03 		movw	r3, #63519
 830 0060 1340     		ands	r3, r3, r2
 831 0062 002B     		cmp	r3, #0
 832 0064 05D1     		bne	.L63
 833              		.loc 1 359 0 is_stmt 0 discriminator 1
 834 0066 7B88     		ldrh	r3, [r7, #2]
 835 0068 002B     		cmp	r3, #0
 836 006a 02D0     		beq	.L63
 837              		.loc 1 359 0 discriminator 3
 838 006c 4FF00103 		mov	r3, #1
 839 0070 01E0     		b	.L64
 840              	.L63:
 841              		.loc 1 359 0 discriminator 2
 842 0072 4FF00003 		mov	r3, #0
 843              	.L64:
 844              		.loc 1 359 0 discriminator 4
 845 0076 1846     		mov	r0, r3
 846 0078 FFF7FEFF 		bl	assert_param
 360:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Get the ADC IT index */
 361:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   itmask = (uint8_t)ADC_IT;
 847              		.loc 1 361 0 is_stmt 1 discriminator 4
 848 007c 7B88     		ldrh	r3, [r7, #2]	@ movhi
 849 007e FB73     		strb	r3, [r7, #15]
 362:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 850              		.loc 1 362 0 discriminator 4
 851 0080 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 852 0082 002B     		cmp	r3, #0
 853 0084 06D0     		beq	.L65
 363:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
 364:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Enable the selected ADC interrupts */
 365:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     ADCx->CR1 |= itmask;
 854              		.loc 1 365 0
 855 0086 7B68     		ldr	r3, [r7, #4]
 856 0088 5A68     		ldr	r2, [r3, #4]
 857 008a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 858 008c 1A43     		orrs	r2, r2, r3
 859 008e 7B68     		ldr	r3, [r7, #4]
 860 0090 5A60     		str	r2, [r3, #4]
 861 0092 07E0     		b	.L56
 862              	.L65:
 366:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
 367:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   else
 368:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
 369:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Disable the selected ADC interrupts */
 370:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     ADCx->CR1 &= (~(uint32_t)itmask);
 863              		.loc 1 370 0
 864 0094 7B68     		ldr	r3, [r7, #4]
 865 0096 5A68     		ldr	r2, [r3, #4]
 866 0098 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 867 009a 6FEA0303 		mvn	r3, r3
 868 009e 1A40     		ands	r2, r2, r3
 869 00a0 7B68     		ldr	r3, [r7, #4]
 870 00a2 5A60     		str	r2, [r3, #4]
 871              	.L56:
 371:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
 372:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** }
 872              		.loc 1 372 0
 873 00a4 07F11007 		add	r7, r7, #16
 874 00a8 BD46     		mov	sp, r7
 875 00aa 80BD     		pop	{r7, pc}
 876              	.L68:
 877              		.align	2
 878              	.L67:
 879 00ac 00240140 		.word	1073816576
 880 00b0 00280140 		.word	1073817600
 881 00b4 003C0140 		.word	1073822720
 882              		.cfi_endproc
 883              	.LFE34:
 885              		.section	.text.ADC_ResetCalibration,"ax",%progbits
 886              		.align	2
 887              		.global	ADC_ResetCalibration
 888              		.thumb
 889              		.thumb_func
 891              	ADC_ResetCalibration:
 892              	.LFB35:
 373:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 374:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** /**
 375:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @brief  Resets the selected ADC calibration registers.
 376:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 377:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @retval None
 378:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
 379:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** void ADC_ResetCalibration(ADC_TypeDef* ADCx)
 380:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** {
 893              		.loc 1 380 0
 894              		.cfi_startproc
 895              		@ args = 0, pretend = 0, frame = 8
 896              		@ frame_needed = 1, uses_anonymous_args = 0
 897 0000 80B5     		push	{r7, lr}
 898              	.LCFI18:
 899              		.cfi_def_cfa_offset 8
 900              		.cfi_offset 7, -8
 901              		.cfi_offset 14, -4
 902 0002 82B0     		sub	sp, sp, #8
 903              	.LCFI19:
 904              		.cfi_def_cfa_offset 16
 905 0004 00AF     		add	r7, sp, #0
 906              	.LCFI20:
 907              		.cfi_def_cfa_register 7
 908 0006 7860     		str	r0, [r7, #4]
 381:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Check the parameters */
 382:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 909              		.loc 1 382 0
 910 0008 7A68     		ldr	r2, [r7, #4]
 911 000a 0E4B     		ldr	r3, .L73
 912 000c 9A42     		cmp	r2, r3
 913 000e 07D0     		beq	.L70
 914              		.loc 1 382 0 is_stmt 0 discriminator 2
 915 0010 7A68     		ldr	r2, [r7, #4]
 916 0012 0D4B     		ldr	r3, .L73+4
 917 0014 9A42     		cmp	r2, r3
 918 0016 03D0     		beq	.L70
 919              		.loc 1 382 0 discriminator 1
 920 0018 7A68     		ldr	r2, [r7, #4]
 921 001a 0C4B     		ldr	r3, .L73+8
 922 001c 9A42     		cmp	r2, r3
 923 001e 02D1     		bne	.L71
 924              	.L70:
 925 0020 4FF00103 		mov	r3, #1
 926 0024 01E0     		b	.L72
 927              	.L71:
 928              		.loc 1 382 0 discriminator 3
 929 0026 4FF00003 		mov	r3, #0
 930              	.L72:
 931              		.loc 1 382 0 discriminator 4
 932 002a 1846     		mov	r0, r3
 933 002c FFF7FEFF 		bl	assert_param
 383:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Resets the selected ADC calibration registers */  
 384:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   ADCx->CR2 |= CR2_RSTCAL_Set;
 934              		.loc 1 384 0 is_stmt 1 discriminator 4
 935 0030 7B68     		ldr	r3, [r7, #4]
 936 0032 9B68     		ldr	r3, [r3, #8]
 937 0034 43F00802 		orr	r2, r3, #8
 938 0038 7B68     		ldr	r3, [r7, #4]
 939 003a 9A60     		str	r2, [r3, #8]
 385:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** }
 940              		.loc 1 385 0 discriminator 4
 941 003c 07F10807 		add	r7, r7, #8
 942 0040 BD46     		mov	sp, r7
 943 0042 80BD     		pop	{r7, pc}
 944              	.L74:
 945              		.align	2
 946              	.L73:
 947 0044 00240140 		.word	1073816576
 948 0048 00280140 		.word	1073817600
 949 004c 003C0140 		.word	1073822720
 950              		.cfi_endproc
 951              	.LFE35:
 953              		.section	.text.ADC_GetResetCalibrationStatus,"ax",%progbits
 954              		.align	2
 955              		.global	ADC_GetResetCalibrationStatus
 956              		.thumb
 957              		.thumb_func
 959              	ADC_GetResetCalibrationStatus:
 960              	.LFB36:
 386:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 387:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** /**
 388:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @brief  Gets the selected ADC reset calibration registers status.
 389:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 390:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @retval The new state of ADC reset calibration registers (SET or RESET).
 391:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
 392:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** FlagStatus ADC_GetResetCalibrationStatus(ADC_TypeDef* ADCx)
 393:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** {
 961              		.loc 1 393 0
 962              		.cfi_startproc
 963              		@ args = 0, pretend = 0, frame = 16
 964              		@ frame_needed = 1, uses_anonymous_args = 0
 965 0000 80B5     		push	{r7, lr}
 966              	.LCFI21:
 967              		.cfi_def_cfa_offset 8
 968              		.cfi_offset 7, -8
 969              		.cfi_offset 14, -4
 970 0002 84B0     		sub	sp, sp, #16
 971              	.LCFI22:
 972              		.cfi_def_cfa_offset 24
 973 0004 00AF     		add	r7, sp, #0
 974              	.LCFI23:
 975              		.cfi_def_cfa_register 7
 976 0006 7860     		str	r0, [r7, #4]
 394:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   FlagStatus bitstatus = RESET;
 977              		.loc 1 394 0
 978 0008 4FF00003 		mov	r3, #0
 979 000c FB73     		strb	r3, [r7, #15]
 395:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Check the parameters */
 396:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 980              		.loc 1 396 0
 981 000e 7A68     		ldr	r2, [r7, #4]
 982 0010 124B     		ldr	r3, .L82
 983 0012 9A42     		cmp	r2, r3
 984 0014 07D0     		beq	.L76
 985              		.loc 1 396 0 is_stmt 0 discriminator 2
 986 0016 7A68     		ldr	r2, [r7, #4]
 987 0018 114B     		ldr	r3, .L82+4
 988 001a 9A42     		cmp	r2, r3
 989 001c 03D0     		beq	.L76
 990              		.loc 1 396 0 discriminator 1
 991 001e 7A68     		ldr	r2, [r7, #4]
 992 0020 104B     		ldr	r3, .L82+8
 993 0022 9A42     		cmp	r2, r3
 994 0024 02D1     		bne	.L77
 995              	.L76:
 996 0026 4FF00103 		mov	r3, #1
 997 002a 01E0     		b	.L78
 998              	.L77:
 999              		.loc 1 396 0 discriminator 3
 1000 002c 4FF00003 		mov	r3, #0
 1001              	.L78:
 1002              		.loc 1 396 0 discriminator 4
 1003 0030 1846     		mov	r0, r3
 1004 0032 FFF7FEFF 		bl	assert_param
 397:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Check the status of RSTCAL bit */
 398:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   if ((ADCx->CR2 & CR2_RSTCAL_Set) != (uint32_t)RESET)
 1005              		.loc 1 398 0 is_stmt 1 discriminator 4
 1006 0036 7B68     		ldr	r3, [r7, #4]
 1007 0038 9B68     		ldr	r3, [r3, #8]
 1008 003a 03F00803 		and	r3, r3, #8
 1009 003e 002B     		cmp	r3, #0
 1010 0040 03D0     		beq	.L79
 399:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
 400:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* RSTCAL bit is set */
 401:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     bitstatus = SET;
 1011              		.loc 1 401 0
 1012 0042 4FF00103 		mov	r3, #1
 1013 0046 FB73     		strb	r3, [r7, #15]
 1014 0048 02E0     		b	.L80
 1015              	.L79:
 402:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
 403:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   else
 404:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
 405:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* RSTCAL bit is reset */
 406:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     bitstatus = RESET;
 1016              		.loc 1 406 0
 1017 004a 4FF00003 		mov	r3, #0
 1018 004e FB73     		strb	r3, [r7, #15]
 1019              	.L80:
 407:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
 408:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Return the RSTCAL bit status */
 409:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   return  bitstatus;
 1020              		.loc 1 409 0
 1021 0050 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 410:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** }
 1022              		.loc 1 410 0
 1023 0052 1846     		mov	r0, r3
 1024 0054 07F11007 		add	r7, r7, #16
 1025 0058 BD46     		mov	sp, r7
 1026 005a 80BD     		pop	{r7, pc}
 1027              	.L83:
 1028              		.align	2
 1029              	.L82:
 1030 005c 00240140 		.word	1073816576
 1031 0060 00280140 		.word	1073817600
 1032 0064 003C0140 		.word	1073822720
 1033              		.cfi_endproc
 1034              	.LFE36:
 1036              		.section	.text.ADC_StartCalibration,"ax",%progbits
 1037              		.align	2
 1038              		.global	ADC_StartCalibration
 1039              		.thumb
 1040              		.thumb_func
 1042              	ADC_StartCalibration:
 1043              	.LFB37:
 411:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 412:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** /**
 413:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @brief  Starts the selected ADC calibration process.
 414:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 415:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @retval None
 416:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
 417:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** void ADC_StartCalibration(ADC_TypeDef* ADCx)
 418:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** {
 1044              		.loc 1 418 0
 1045              		.cfi_startproc
 1046              		@ args = 0, pretend = 0, frame = 8
 1047              		@ frame_needed = 1, uses_anonymous_args = 0
 1048 0000 80B5     		push	{r7, lr}
 1049              	.LCFI24:
 1050              		.cfi_def_cfa_offset 8
 1051              		.cfi_offset 7, -8
 1052              		.cfi_offset 14, -4
 1053 0002 82B0     		sub	sp, sp, #8
 1054              	.LCFI25:
 1055              		.cfi_def_cfa_offset 16
 1056 0004 00AF     		add	r7, sp, #0
 1057              	.LCFI26:
 1058              		.cfi_def_cfa_register 7
 1059 0006 7860     		str	r0, [r7, #4]
 419:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Check the parameters */
 420:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 1060              		.loc 1 420 0
 1061 0008 7A68     		ldr	r2, [r7, #4]
 1062 000a 0E4B     		ldr	r3, .L88
 1063 000c 9A42     		cmp	r2, r3
 1064 000e 07D0     		beq	.L85
 1065              		.loc 1 420 0 is_stmt 0 discriminator 2
 1066 0010 7A68     		ldr	r2, [r7, #4]
 1067 0012 0D4B     		ldr	r3, .L88+4
 1068 0014 9A42     		cmp	r2, r3
 1069 0016 03D0     		beq	.L85
 1070              		.loc 1 420 0 discriminator 1
 1071 0018 7A68     		ldr	r2, [r7, #4]
 1072 001a 0C4B     		ldr	r3, .L88+8
 1073 001c 9A42     		cmp	r2, r3
 1074 001e 02D1     		bne	.L86
 1075              	.L85:
 1076 0020 4FF00103 		mov	r3, #1
 1077 0024 01E0     		b	.L87
 1078              	.L86:
 1079              		.loc 1 420 0 discriminator 3
 1080 0026 4FF00003 		mov	r3, #0
 1081              	.L87:
 1082              		.loc 1 420 0 discriminator 4
 1083 002a 1846     		mov	r0, r3
 1084 002c FFF7FEFF 		bl	assert_param
 421:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Enable the selected ADC calibration process */  
 422:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   ADCx->CR2 |= CR2_CAL_Set;
 1085              		.loc 1 422 0 is_stmt 1 discriminator 4
 1086 0030 7B68     		ldr	r3, [r7, #4]
 1087 0032 9B68     		ldr	r3, [r3, #8]
 1088 0034 43F00402 		orr	r2, r3, #4
 1089 0038 7B68     		ldr	r3, [r7, #4]
 1090 003a 9A60     		str	r2, [r3, #8]
 423:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** }
 1091              		.loc 1 423 0 discriminator 4
 1092 003c 07F10807 		add	r7, r7, #8
 1093 0040 BD46     		mov	sp, r7
 1094 0042 80BD     		pop	{r7, pc}
 1095              	.L89:
 1096              		.align	2
 1097              	.L88:
 1098 0044 00240140 		.word	1073816576
 1099 0048 00280140 		.word	1073817600
 1100 004c 003C0140 		.word	1073822720
 1101              		.cfi_endproc
 1102              	.LFE37:
 1104              		.section	.text.ADC_GetCalibrationStatus,"ax",%progbits
 1105              		.align	2
 1106              		.global	ADC_GetCalibrationStatus
 1107              		.thumb
 1108              		.thumb_func
 1110              	ADC_GetCalibrationStatus:
 1111              	.LFB38:
 424:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 425:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** /**
 426:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @brief  Gets the selected ADC calibration status.
 427:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 428:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @retval The new state of ADC calibration (SET or RESET).
 429:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
 430:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** FlagStatus ADC_GetCalibrationStatus(ADC_TypeDef* ADCx)
 431:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** {
 1112              		.loc 1 431 0
 1113              		.cfi_startproc
 1114              		@ args = 0, pretend = 0, frame = 16
 1115              		@ frame_needed = 1, uses_anonymous_args = 0
 1116 0000 80B5     		push	{r7, lr}
 1117              	.LCFI27:
 1118              		.cfi_def_cfa_offset 8
 1119              		.cfi_offset 7, -8
 1120              		.cfi_offset 14, -4
 1121 0002 84B0     		sub	sp, sp, #16
 1122              	.LCFI28:
 1123              		.cfi_def_cfa_offset 24
 1124 0004 00AF     		add	r7, sp, #0
 1125              	.LCFI29:
 1126              		.cfi_def_cfa_register 7
 1127 0006 7860     		str	r0, [r7, #4]
 432:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   FlagStatus bitstatus = RESET;
 1128              		.loc 1 432 0
 1129 0008 4FF00003 		mov	r3, #0
 1130 000c FB73     		strb	r3, [r7, #15]
 433:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Check the parameters */
 434:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 1131              		.loc 1 434 0
 1132 000e 7A68     		ldr	r2, [r7, #4]
 1133 0010 124B     		ldr	r3, .L97
 1134 0012 9A42     		cmp	r2, r3
 1135 0014 07D0     		beq	.L91
 1136              		.loc 1 434 0 is_stmt 0 discriminator 2
 1137 0016 7A68     		ldr	r2, [r7, #4]
 1138 0018 114B     		ldr	r3, .L97+4
 1139 001a 9A42     		cmp	r2, r3
 1140 001c 03D0     		beq	.L91
 1141              		.loc 1 434 0 discriminator 1
 1142 001e 7A68     		ldr	r2, [r7, #4]
 1143 0020 104B     		ldr	r3, .L97+8
 1144 0022 9A42     		cmp	r2, r3
 1145 0024 02D1     		bne	.L92
 1146              	.L91:
 1147 0026 4FF00103 		mov	r3, #1
 1148 002a 01E0     		b	.L93
 1149              	.L92:
 1150              		.loc 1 434 0 discriminator 3
 1151 002c 4FF00003 		mov	r3, #0
 1152              	.L93:
 1153              		.loc 1 434 0 discriminator 4
 1154 0030 1846     		mov	r0, r3
 1155 0032 FFF7FEFF 		bl	assert_param
 435:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Check the status of CAL bit */
 436:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   if ((ADCx->CR2 & CR2_CAL_Set) != (uint32_t)RESET)
 1156              		.loc 1 436 0 is_stmt 1 discriminator 4
 1157 0036 7B68     		ldr	r3, [r7, #4]
 1158 0038 9B68     		ldr	r3, [r3, #8]
 1159 003a 03F00403 		and	r3, r3, #4
 1160 003e 002B     		cmp	r3, #0
 1161 0040 03D0     		beq	.L94
 437:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
 438:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* CAL bit is set: calibration on going */
 439:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     bitstatus = SET;
 1162              		.loc 1 439 0
 1163 0042 4FF00103 		mov	r3, #1
 1164 0046 FB73     		strb	r3, [r7, #15]
 1165 0048 02E0     		b	.L95
 1166              	.L94:
 440:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
 441:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   else
 442:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
 443:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* CAL bit is reset: end of calibration */
 444:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     bitstatus = RESET;
 1167              		.loc 1 444 0
 1168 004a 4FF00003 		mov	r3, #0
 1169 004e FB73     		strb	r3, [r7, #15]
 1170              	.L95:
 445:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
 446:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Return the CAL bit status */
 447:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   return  bitstatus;
 1171              		.loc 1 447 0
 1172 0050 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 448:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** }
 1173              		.loc 1 448 0
 1174 0052 1846     		mov	r0, r3
 1175 0054 07F11007 		add	r7, r7, #16
 1176 0058 BD46     		mov	sp, r7
 1177 005a 80BD     		pop	{r7, pc}
 1178              	.L98:
 1179              		.align	2
 1180              	.L97:
 1181 005c 00240140 		.word	1073816576
 1182 0060 00280140 		.word	1073817600
 1183 0064 003C0140 		.word	1073822720
 1184              		.cfi_endproc
 1185              	.LFE38:
 1187              		.section	.text.ADC_SoftwareStartConvCmd,"ax",%progbits
 1188              		.align	2
 1189              		.global	ADC_SoftwareStartConvCmd
 1190              		.thumb
 1191              		.thumb_func
 1193              	ADC_SoftwareStartConvCmd:
 1194              	.LFB39:
 449:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 450:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** /**
 451:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the selected ADC software start conversion .
 452:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 453:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the selected ADC software start conversion.
 454:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
 455:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @retval None
 456:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
 457:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** void ADC_SoftwareStartConvCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 458:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** {
 1195              		.loc 1 458 0
 1196              		.cfi_startproc
 1197              		@ args = 0, pretend = 0, frame = 8
 1198              		@ frame_needed = 1, uses_anonymous_args = 0
 1199 0000 80B5     		push	{r7, lr}
 1200              	.LCFI30:
 1201              		.cfi_def_cfa_offset 8
 1202              		.cfi_offset 7, -8
 1203              		.cfi_offset 14, -4
 1204 0002 82B0     		sub	sp, sp, #8
 1205              	.LCFI31:
 1206              		.cfi_def_cfa_offset 16
 1207 0004 00AF     		add	r7, sp, #0
 1208              	.LCFI32:
 1209              		.cfi_def_cfa_register 7
 1210 0006 7860     		str	r0, [r7, #4]
 1211 0008 0B46     		mov	r3, r1
 1212 000a FB70     		strb	r3, [r7, #3]
 459:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Check the parameters */
 460:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 1213              		.loc 1 460 0
 1214 000c 7A68     		ldr	r2, [r7, #4]
 1215 000e 1A4B     		ldr	r3, .L108
 1216 0010 9A42     		cmp	r2, r3
 1217 0012 07D0     		beq	.L100
 1218              		.loc 1 460 0 is_stmt 0 discriminator 2
 1219 0014 7A68     		ldr	r2, [r7, #4]
 1220 0016 194B     		ldr	r3, .L108+4
 1221 0018 9A42     		cmp	r2, r3
 1222 001a 03D0     		beq	.L100
 1223              		.loc 1 460 0 discriminator 1
 1224 001c 7A68     		ldr	r2, [r7, #4]
 1225 001e 184B     		ldr	r3, .L108+8
 1226 0020 9A42     		cmp	r2, r3
 1227 0022 02D1     		bne	.L101
 1228              	.L100:
 1229 0024 4FF00103 		mov	r3, #1
 1230 0028 01E0     		b	.L102
 1231              	.L101:
 1232              		.loc 1 460 0 discriminator 3
 1233 002a 4FF00003 		mov	r3, #0
 1234              	.L102:
 1235              		.loc 1 460 0 discriminator 4
 1236 002e 1846     		mov	r0, r3
 1237 0030 FFF7FEFF 		bl	assert_param
 461:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1238              		.loc 1 461 0 is_stmt 1 discriminator 4
 1239 0034 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1240 0036 002B     		cmp	r3, #0
 1241 0038 02D0     		beq	.L103
 1242              		.loc 1 461 0 is_stmt 0 discriminator 2
 1243 003a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1244 003c 012B     		cmp	r3, #1
 1245 003e 02D1     		bne	.L104
 1246              	.L103:
 1247              		.loc 1 461 0 discriminator 1
 1248 0040 4FF00103 		mov	r3, #1
 1249 0044 01E0     		b	.L105
 1250              	.L104:
 1251              		.loc 1 461 0 discriminator 3
 1252 0046 4FF00003 		mov	r3, #0
 1253              	.L105:
 1254              		.loc 1 461 0 discriminator 4
 1255 004a 1846     		mov	r0, r3
 1256 004c FFF7FEFF 		bl	assert_param
 462:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 1257              		.loc 1 462 0 is_stmt 1 discriminator 4
 1258 0050 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1259 0052 002B     		cmp	r3, #0
 1260 0054 06D0     		beq	.L106
 463:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
 464:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Enable the selected ADC conversion on external event and start the selected
 465:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****        ADC conversion */
 466:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     ADCx->CR2 |= CR2_EXTTRIG_SWSTART_Set;
 1261              		.loc 1 466 0
 1262 0056 7B68     		ldr	r3, [r7, #4]
 1263 0058 9B68     		ldr	r3, [r3, #8]
 1264 005a 43F4A002 		orr	r2, r3, #5242880
 1265 005e 7B68     		ldr	r3, [r7, #4]
 1266 0060 9A60     		str	r2, [r3, #8]
 1267 0062 05E0     		b	.L99
 1268              	.L106:
 467:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
 468:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   else
 469:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
 470:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Disable the selected ADC conversion on external event and stop the selected
 471:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****        ADC conversion */
 472:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     ADCx->CR2 &= CR2_EXTTRIG_SWSTART_Reset;
 1269              		.loc 1 472 0
 1270 0064 7B68     		ldr	r3, [r7, #4]
 1271 0066 9B68     		ldr	r3, [r3, #8]
 1272 0068 23F4A002 		bic	r2, r3, #5242880
 1273 006c 7B68     		ldr	r3, [r7, #4]
 1274 006e 9A60     		str	r2, [r3, #8]
 1275              	.L99:
 473:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
 474:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** }
 1276              		.loc 1 474 0
 1277 0070 07F10807 		add	r7, r7, #8
 1278 0074 BD46     		mov	sp, r7
 1279 0076 80BD     		pop	{r7, pc}
 1280              	.L109:
 1281              		.align	2
 1282              	.L108:
 1283 0078 00240140 		.word	1073816576
 1284 007c 00280140 		.word	1073817600
 1285 0080 003C0140 		.word	1073822720
 1286              		.cfi_endproc
 1287              	.LFE39:
 1289              		.section	.text.ADC_GetSoftwareStartConvStatus,"ax",%progbits
 1290              		.align	2
 1291              		.global	ADC_GetSoftwareStartConvStatus
 1292              		.thumb
 1293              		.thumb_func
 1295              	ADC_GetSoftwareStartConvStatus:
 1296              	.LFB40:
 475:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 476:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** /**
 477:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @brief  Gets the selected ADC Software start conversion Status.
 478:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 479:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @retval The new state of ADC software start conversion (SET or RESET).
 480:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
 481:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** FlagStatus ADC_GetSoftwareStartConvStatus(ADC_TypeDef* ADCx)
 482:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** {
 1297              		.loc 1 482 0
 1298              		.cfi_startproc
 1299              		@ args = 0, pretend = 0, frame = 16
 1300              		@ frame_needed = 1, uses_anonymous_args = 0
 1301 0000 80B5     		push	{r7, lr}
 1302              	.LCFI33:
 1303              		.cfi_def_cfa_offset 8
 1304              		.cfi_offset 7, -8
 1305              		.cfi_offset 14, -4
 1306 0002 84B0     		sub	sp, sp, #16
 1307              	.LCFI34:
 1308              		.cfi_def_cfa_offset 24
 1309 0004 00AF     		add	r7, sp, #0
 1310              	.LCFI35:
 1311              		.cfi_def_cfa_register 7
 1312 0006 7860     		str	r0, [r7, #4]
 483:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   FlagStatus bitstatus = RESET;
 1313              		.loc 1 483 0
 1314 0008 4FF00003 		mov	r3, #0
 1315 000c FB73     		strb	r3, [r7, #15]
 484:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Check the parameters */
 485:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 1316              		.loc 1 485 0
 1317 000e 7A68     		ldr	r2, [r7, #4]
 1318 0010 124B     		ldr	r3, .L117
 1319 0012 9A42     		cmp	r2, r3
 1320 0014 07D0     		beq	.L111
 1321              		.loc 1 485 0 is_stmt 0 discriminator 2
 1322 0016 7A68     		ldr	r2, [r7, #4]
 1323 0018 114B     		ldr	r3, .L117+4
 1324 001a 9A42     		cmp	r2, r3
 1325 001c 03D0     		beq	.L111
 1326              		.loc 1 485 0 discriminator 1
 1327 001e 7A68     		ldr	r2, [r7, #4]
 1328 0020 104B     		ldr	r3, .L117+8
 1329 0022 9A42     		cmp	r2, r3
 1330 0024 02D1     		bne	.L112
 1331              	.L111:
 1332 0026 4FF00103 		mov	r3, #1
 1333 002a 01E0     		b	.L113
 1334              	.L112:
 1335              		.loc 1 485 0 discriminator 3
 1336 002c 4FF00003 		mov	r3, #0
 1337              	.L113:
 1338              		.loc 1 485 0 discriminator 4
 1339 0030 1846     		mov	r0, r3
 1340 0032 FFF7FEFF 		bl	assert_param
 486:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Check the status of SWSTART bit */
 487:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   if ((ADCx->CR2 & CR2_SWSTART_Set) != (uint32_t)RESET)
 1341              		.loc 1 487 0 is_stmt 1 discriminator 4
 1342 0036 7B68     		ldr	r3, [r7, #4]
 1343 0038 9B68     		ldr	r3, [r3, #8]
 1344 003a 03F48003 		and	r3, r3, #4194304
 1345 003e 002B     		cmp	r3, #0
 1346 0040 03D0     		beq	.L114
 488:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
 489:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* SWSTART bit is set */
 490:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     bitstatus = SET;
 1347              		.loc 1 490 0
 1348 0042 4FF00103 		mov	r3, #1
 1349 0046 FB73     		strb	r3, [r7, #15]
 1350 0048 02E0     		b	.L115
 1351              	.L114:
 491:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
 492:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   else
 493:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
 494:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* SWSTART bit is reset */
 495:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     bitstatus = RESET;
 1352              		.loc 1 495 0
 1353 004a 4FF00003 		mov	r3, #0
 1354 004e FB73     		strb	r3, [r7, #15]
 1355              	.L115:
 496:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
 497:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Return the SWSTART bit status */
 498:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   return  bitstatus;
 1356              		.loc 1 498 0
 1357 0050 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 499:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** }
 1358              		.loc 1 499 0
 1359 0052 1846     		mov	r0, r3
 1360 0054 07F11007 		add	r7, r7, #16
 1361 0058 BD46     		mov	sp, r7
 1362 005a 80BD     		pop	{r7, pc}
 1363              	.L118:
 1364              		.align	2
 1365              	.L117:
 1366 005c 00240140 		.word	1073816576
 1367 0060 00280140 		.word	1073817600
 1368 0064 003C0140 		.word	1073822720
 1369              		.cfi_endproc
 1370              	.LFE40:
 1372              		.section	.text.ADC_DiscModeChannelCountConfig,"ax",%progbits
 1373              		.align	2
 1374              		.global	ADC_DiscModeChannelCountConfig
 1375              		.thumb
 1376              		.thumb_func
 1378              	ADC_DiscModeChannelCountConfig:
 1379              	.LFB41:
 500:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 501:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** /**
 502:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @brief  Configures the discontinuous mode for the selected ADC regular
 503:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *         group channel.
 504:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 505:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  Number: specifies the discontinuous mode regular channel
 506:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *         count value. This number must be between 1 and 8.
 507:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @retval None
 508:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
 509:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** void ADC_DiscModeChannelCountConfig(ADC_TypeDef* ADCx, uint8_t Number)
 510:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** {
 1380              		.loc 1 510 0
 1381              		.cfi_startproc
 1382              		@ args = 0, pretend = 0, frame = 16
 1383              		@ frame_needed = 1, uses_anonymous_args = 0
 1384 0000 80B5     		push	{r7, lr}
 1385              	.LCFI36:
 1386              		.cfi_def_cfa_offset 8
 1387              		.cfi_offset 7, -8
 1388              		.cfi_offset 14, -4
 1389 0002 84B0     		sub	sp, sp, #16
 1390              	.LCFI37:
 1391              		.cfi_def_cfa_offset 24
 1392 0004 00AF     		add	r7, sp, #0
 1393              	.LCFI38:
 1394              		.cfi_def_cfa_register 7
 1395 0006 7860     		str	r0, [r7, #4]
 1396 0008 0B46     		mov	r3, r1
 1397 000a FB70     		strb	r3, [r7, #3]
 511:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   uint32_t tmpreg1 = 0;
 1398              		.loc 1 511 0
 1399 000c 4FF00003 		mov	r3, #0
 1400 0010 FB60     		str	r3, [r7, #12]
 512:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   uint32_t tmpreg2 = 0;
 1401              		.loc 1 512 0
 1402 0012 4FF00003 		mov	r3, #0
 1403 0016 BB60     		str	r3, [r7, #8]
 513:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Check the parameters */
 514:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 1404              		.loc 1 514 0
 1405 0018 7A68     		ldr	r2, [r7, #4]
 1406 001a 1C4B     		ldr	r3, .L125
 1407 001c 9A42     		cmp	r2, r3
 1408 001e 07D0     		beq	.L120
 1409              		.loc 1 514 0 is_stmt 0 discriminator 2
 1410 0020 7A68     		ldr	r2, [r7, #4]
 1411 0022 1B4B     		ldr	r3, .L125+4
 1412 0024 9A42     		cmp	r2, r3
 1413 0026 03D0     		beq	.L120
 1414              		.loc 1 514 0 discriminator 1
 1415 0028 7A68     		ldr	r2, [r7, #4]
 1416 002a 1A4B     		ldr	r3, .L125+8
 1417 002c 9A42     		cmp	r2, r3
 1418 002e 02D1     		bne	.L121
 1419              	.L120:
 1420 0030 4FF00103 		mov	r3, #1
 1421 0034 01E0     		b	.L122
 1422              	.L121:
 1423              		.loc 1 514 0 discriminator 3
 1424 0036 4FF00003 		mov	r3, #0
 1425              	.L122:
 1426              		.loc 1 514 0 discriminator 4
 1427 003a 1846     		mov	r0, r3
 1428 003c FFF7FEFF 		bl	assert_param
 515:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_REGULAR_DISC_NUMBER(Number));
 1429              		.loc 1 515 0 is_stmt 1 discriminator 4
 1430 0040 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1431 0042 002B     		cmp	r3, #0
 1432 0044 05D0     		beq	.L123
 1433              		.loc 1 515 0 is_stmt 0 discriminator 1
 1434 0046 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1435 0048 082B     		cmp	r3, #8
 1436 004a 02D8     		bhi	.L123
 1437              		.loc 1 515 0 discriminator 3
 1438 004c 4FF00103 		mov	r3, #1
 1439 0050 01E0     		b	.L124
 1440              	.L123:
 1441              		.loc 1 515 0 discriminator 2
 1442 0052 4FF00003 		mov	r3, #0
 1443              	.L124:
 1444              		.loc 1 515 0 discriminator 4
 1445 0056 1846     		mov	r0, r3
 1446 0058 FFF7FEFF 		bl	assert_param
 516:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Get the old register value */
 517:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   tmpreg1 = ADCx->CR1;
 1447              		.loc 1 517 0 is_stmt 1 discriminator 4
 1448 005c 7B68     		ldr	r3, [r7, #4]
 1449 005e 5B68     		ldr	r3, [r3, #4]
 1450 0060 FB60     		str	r3, [r7, #12]
 518:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Clear the old discontinuous mode channel count */
 519:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   tmpreg1 &= CR1_DISCNUM_Reset;
 1451              		.loc 1 519 0 discriminator 4
 1452 0062 FB68     		ldr	r3, [r7, #12]
 1453 0064 23F46043 		bic	r3, r3, #57344
 1454 0068 FB60     		str	r3, [r7, #12]
 520:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Set the discontinuous mode channel count */
 521:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   tmpreg2 = Number - 1;
 1455              		.loc 1 521 0 discriminator 4
 1456 006a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1457 006c 03F1FF33 		add	r3, r3, #-1
 1458 0070 BB60     		str	r3, [r7, #8]
 522:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   tmpreg1 |= tmpreg2 << 13;
 1459              		.loc 1 522 0 discriminator 4
 1460 0072 BB68     		ldr	r3, [r7, #8]
 1461 0074 4FEA4333 		lsl	r3, r3, #13
 1462 0078 FA68     		ldr	r2, [r7, #12]
 1463 007a 1343     		orrs	r3, r3, r2
 1464 007c FB60     		str	r3, [r7, #12]
 523:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Store the new register value */
 524:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   ADCx->CR1 = tmpreg1;
 1465              		.loc 1 524 0 discriminator 4
 1466 007e 7B68     		ldr	r3, [r7, #4]
 1467 0080 FA68     		ldr	r2, [r7, #12]
 1468 0082 5A60     		str	r2, [r3, #4]
 525:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** }
 1469              		.loc 1 525 0 discriminator 4
 1470 0084 07F11007 		add	r7, r7, #16
 1471 0088 BD46     		mov	sp, r7
 1472 008a 80BD     		pop	{r7, pc}
 1473              	.L126:
 1474              		.align	2
 1475              	.L125:
 1476 008c 00240140 		.word	1073816576
 1477 0090 00280140 		.word	1073817600
 1478 0094 003C0140 		.word	1073822720
 1479              		.cfi_endproc
 1480              	.LFE41:
 1482              		.section	.text.ADC_DiscModeCmd,"ax",%progbits
 1483              		.align	2
 1484              		.global	ADC_DiscModeCmd
 1485              		.thumb
 1486              		.thumb_func
 1488              	ADC_DiscModeCmd:
 1489              	.LFB42:
 526:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 527:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** /**
 528:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the discontinuous mode on regular group
 529:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *         channel for the specified ADC
 530:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 531:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the selected ADC discontinuous mode
 532:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *         on regular group channel.
 533:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *         This parameter can be: ENABLE or DISABLE.
 534:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @retval None
 535:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
 536:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** void ADC_DiscModeCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 537:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** {
 1490              		.loc 1 537 0
 1491              		.cfi_startproc
 1492              		@ args = 0, pretend = 0, frame = 8
 1493              		@ frame_needed = 1, uses_anonymous_args = 0
 1494 0000 80B5     		push	{r7, lr}
 1495              	.LCFI39:
 1496              		.cfi_def_cfa_offset 8
 1497              		.cfi_offset 7, -8
 1498              		.cfi_offset 14, -4
 1499 0002 82B0     		sub	sp, sp, #8
 1500              	.LCFI40:
 1501              		.cfi_def_cfa_offset 16
 1502 0004 00AF     		add	r7, sp, #0
 1503              	.LCFI41:
 1504              		.cfi_def_cfa_register 7
 1505 0006 7860     		str	r0, [r7, #4]
 1506 0008 0B46     		mov	r3, r1
 1507 000a FB70     		strb	r3, [r7, #3]
 538:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Check the parameters */
 539:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 1508              		.loc 1 539 0
 1509 000c 7A68     		ldr	r2, [r7, #4]
 1510 000e 1A4B     		ldr	r3, .L136
 1511 0010 9A42     		cmp	r2, r3
 1512 0012 07D0     		beq	.L128
 1513              		.loc 1 539 0 is_stmt 0 discriminator 2
 1514 0014 7A68     		ldr	r2, [r7, #4]
 1515 0016 194B     		ldr	r3, .L136+4
 1516 0018 9A42     		cmp	r2, r3
 1517 001a 03D0     		beq	.L128
 1518              		.loc 1 539 0 discriminator 1
 1519 001c 7A68     		ldr	r2, [r7, #4]
 1520 001e 184B     		ldr	r3, .L136+8
 1521 0020 9A42     		cmp	r2, r3
 1522 0022 02D1     		bne	.L129
 1523              	.L128:
 1524 0024 4FF00103 		mov	r3, #1
 1525 0028 01E0     		b	.L130
 1526              	.L129:
 1527              		.loc 1 539 0 discriminator 3
 1528 002a 4FF00003 		mov	r3, #0
 1529              	.L130:
 1530              		.loc 1 539 0 discriminator 4
 1531 002e 1846     		mov	r0, r3
 1532 0030 FFF7FEFF 		bl	assert_param
 540:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1533              		.loc 1 540 0 is_stmt 1 discriminator 4
 1534 0034 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1535 0036 002B     		cmp	r3, #0
 1536 0038 02D0     		beq	.L131
 1537              		.loc 1 540 0 is_stmt 0 discriminator 2
 1538 003a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1539 003c 012B     		cmp	r3, #1
 1540 003e 02D1     		bne	.L132
 1541              	.L131:
 1542              		.loc 1 540 0 discriminator 1
 1543 0040 4FF00103 		mov	r3, #1
 1544 0044 01E0     		b	.L133
 1545              	.L132:
 1546              		.loc 1 540 0 discriminator 3
 1547 0046 4FF00003 		mov	r3, #0
 1548              	.L133:
 1549              		.loc 1 540 0 discriminator 4
 1550 004a 1846     		mov	r0, r3
 1551 004c FFF7FEFF 		bl	assert_param
 541:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 1552              		.loc 1 541 0 is_stmt 1 discriminator 4
 1553 0050 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1554 0052 002B     		cmp	r3, #0
 1555 0054 06D0     		beq	.L134
 542:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
 543:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Enable the selected ADC regular discontinuous mode */
 544:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     ADCx->CR1 |= CR1_DISCEN_Set;
 1556              		.loc 1 544 0
 1557 0056 7B68     		ldr	r3, [r7, #4]
 1558 0058 5B68     		ldr	r3, [r3, #4]
 1559 005a 43F40062 		orr	r2, r3, #2048
 1560 005e 7B68     		ldr	r3, [r7, #4]
 1561 0060 5A60     		str	r2, [r3, #4]
 1562 0062 05E0     		b	.L127
 1563              	.L134:
 545:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
 546:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   else
 547:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
 548:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Disable the selected ADC regular discontinuous mode */
 549:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     ADCx->CR1 &= CR1_DISCEN_Reset;
 1564              		.loc 1 549 0
 1565 0064 7B68     		ldr	r3, [r7, #4]
 1566 0066 5B68     		ldr	r3, [r3, #4]
 1567 0068 23F40062 		bic	r2, r3, #2048
 1568 006c 7B68     		ldr	r3, [r7, #4]
 1569 006e 5A60     		str	r2, [r3, #4]
 1570              	.L127:
 550:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
 551:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** }
 1571              		.loc 1 551 0
 1572 0070 07F10807 		add	r7, r7, #8
 1573 0074 BD46     		mov	sp, r7
 1574 0076 80BD     		pop	{r7, pc}
 1575              	.L137:
 1576              		.align	2
 1577              	.L136:
 1578 0078 00240140 		.word	1073816576
 1579 007c 00280140 		.word	1073817600
 1580 0080 003C0140 		.word	1073822720
 1581              		.cfi_endproc
 1582              	.LFE42:
 1584              		.section	.text.ADC_RegularChannelConfig,"ax",%progbits
 1585              		.align	2
 1586              		.global	ADC_RegularChannelConfig
 1587              		.thumb
 1588              		.thumb_func
 1590              	ADC_RegularChannelConfig:
 1591              	.LFB43:
 552:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 553:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** /**
 554:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @brief  Configures for the selected ADC regular channel its corresponding
 555:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *         rank in the sequencer and its sample time.
 556:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 557:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADC_Channel: the ADC channel to configure. 
 558:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
 559:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_0: ADC Channel0 selected
 560:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_1: ADC Channel1 selected
 561:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_2: ADC Channel2 selected
 562:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_3: ADC Channel3 selected
 563:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_4: ADC Channel4 selected
 564:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_5: ADC Channel5 selected
 565:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_6: ADC Channel6 selected
 566:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_7: ADC Channel7 selected
 567:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_8: ADC Channel8 selected
 568:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_9: ADC Channel9 selected
 569:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_10: ADC Channel10 selected
 570:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_11: ADC Channel11 selected
 571:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_12: ADC Channel12 selected
 572:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_13: ADC Channel13 selected
 573:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_14: ADC Channel14 selected
 574:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_15: ADC Channel15 selected
 575:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_16: ADC Channel16 selected
 576:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_17: ADC Channel17 selected
 577:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  Rank: The rank in the regular group sequencer. This parameter must be between 1 to 16.
 578:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADC_SampleTime: The sample time value to be set for the selected channel. 
 579:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
 580:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_1Cycles5: Sample time equal to 1.5 cycles
 581:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_7Cycles5: Sample time equal to 7.5 cycles
 582:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_13Cycles5: Sample time equal to 13.5 cycles
 583:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_28Cycles5: Sample time equal to 28.5 cycles	
 584:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_41Cycles5: Sample time equal to 41.5 cycles	
 585:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_55Cycles5: Sample time equal to 55.5 cycles	
 586:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_71Cycles5: Sample time equal to 71.5 cycles	
 587:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_239Cycles5: Sample time equal to 239.5 cycles	
 588:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @retval None
 589:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
 590:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** void ADC_RegularChannelConfig(ADC_TypeDef* ADCx, uint8_t ADC_Channel, uint8_t Rank, uint8_t ADC_Sam
 591:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** {
 1592              		.loc 1 591 0
 1593              		.cfi_startproc
 1594              		@ args = 0, pretend = 0, frame = 16
 1595              		@ frame_needed = 1, uses_anonymous_args = 0
 1596 0000 80B5     		push	{r7, lr}
 1597              	.LCFI42:
 1598              		.cfi_def_cfa_offset 8
 1599              		.cfi_offset 7, -8
 1600              		.cfi_offset 14, -4
 1601 0002 84B0     		sub	sp, sp, #16
 1602              	.LCFI43:
 1603              		.cfi_def_cfa_offset 24
 1604 0004 00AF     		add	r7, sp, #0
 1605              	.LCFI44:
 1606              		.cfi_def_cfa_register 7
 1607 0006 7860     		str	r0, [r7, #4]
 1608 0008 F970     		strb	r1, [r7, #3]
 1609 000a BA70     		strb	r2, [r7, #2]
 1610 000c 7B70     		strb	r3, [r7, #1]
 592:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   uint32_t tmpreg1 = 0, tmpreg2 = 0;
 1611              		.loc 1 592 0
 1612 000e 4FF00003 		mov	r3, #0
 1613 0012 FB60     		str	r3, [r7, #12]
 1614 0014 4FF00003 		mov	r3, #0
 1615 0018 BB60     		str	r3, [r7, #8]
 593:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Check the parameters */
 594:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 1616              		.loc 1 594 0
 1617 001a 7A68     		ldr	r2, [r7, #4]
 1618 001c 914B     		ldr	r3, .L155
 1619 001e 9A42     		cmp	r2, r3
 1620 0020 07D0     		beq	.L139
 1621              		.loc 1 594 0 is_stmt 0 discriminator 2
 1622 0022 7A68     		ldr	r2, [r7, #4]
 1623 0024 904B     		ldr	r3, .L155+4
 1624 0026 9A42     		cmp	r2, r3
 1625 0028 03D0     		beq	.L139
 1626              		.loc 1 594 0 discriminator 1
 1627 002a 7A68     		ldr	r2, [r7, #4]
 1628 002c 8F4B     		ldr	r3, .L155+8
 1629 002e 9A42     		cmp	r2, r3
 1630 0030 02D1     		bne	.L140
 1631              	.L139:
 1632 0032 4FF00103 		mov	r3, #1
 1633 0036 01E0     		b	.L141
 1634              	.L140:
 1635              		.loc 1 594 0 discriminator 3
 1636 0038 4FF00003 		mov	r3, #0
 1637              	.L141:
 1638              		.loc 1 594 0 discriminator 4
 1639 003c 1846     		mov	r0, r3
 1640 003e FFF7FEFF 		bl	assert_param
 595:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_CHANNEL(ADC_Channel));
 1641              		.loc 1 595 0 is_stmt 1 discriminator 4
 1642 0042 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1643 0044 002B     		cmp	r3, #0
 1644 0046 32D0     		beq	.L142
 1645              		.loc 1 595 0 is_stmt 0 discriminator 2
 1646 0048 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1647 004a 012B     		cmp	r3, #1
 1648 004c 2FD0     		beq	.L142
 1649              		.loc 1 595 0 discriminator 1
 1650 004e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1651 0050 022B     		cmp	r3, #2
 1652 0052 2CD0     		beq	.L142
 1653              		.loc 1 595 0 discriminator 2
 1654 0054 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1655 0056 032B     		cmp	r3, #3
 1656 0058 29D0     		beq	.L142
 1657              		.loc 1 595 0 discriminator 3
 1658 005a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1659 005c 042B     		cmp	r3, #4
 1660 005e 26D0     		beq	.L142
 1661              		.loc 1 595 0 discriminator 4
 1662 0060 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1663 0062 052B     		cmp	r3, #5
 1664 0064 23D0     		beq	.L142
 1665              		.loc 1 595 0 discriminator 5
 1666 0066 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1667 0068 062B     		cmp	r3, #6
 1668 006a 20D0     		beq	.L142
 1669              		.loc 1 595 0 discriminator 6
 1670 006c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1671 006e 072B     		cmp	r3, #7
 1672 0070 1DD0     		beq	.L142
 1673              		.loc 1 595 0 discriminator 7
 1674 0072 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1675 0074 082B     		cmp	r3, #8
 1676 0076 1AD0     		beq	.L142
 1677              		.loc 1 595 0 discriminator 8
 1678 0078 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1679 007a 092B     		cmp	r3, #9
 1680 007c 17D0     		beq	.L142
 1681              		.loc 1 595 0 discriminator 9
 1682 007e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1683 0080 0A2B     		cmp	r3, #10
 1684 0082 14D0     		beq	.L142
 1685              		.loc 1 595 0 discriminator 10
 1686 0084 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1687 0086 0B2B     		cmp	r3, #11
 1688 0088 11D0     		beq	.L142
 1689              		.loc 1 595 0 discriminator 11
 1690 008a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1691 008c 0C2B     		cmp	r3, #12
 1692 008e 0ED0     		beq	.L142
 1693              		.loc 1 595 0 discriminator 12
 1694 0090 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1695 0092 0D2B     		cmp	r3, #13
 1696 0094 0BD0     		beq	.L142
 1697              		.loc 1 595 0 discriminator 13
 1698 0096 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1699 0098 0E2B     		cmp	r3, #14
 1700 009a 08D0     		beq	.L142
 1701              		.loc 1 595 0 discriminator 14
 1702 009c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1703 009e 0F2B     		cmp	r3, #15
 1704 00a0 05D0     		beq	.L142
 1705              		.loc 1 595 0 discriminator 15
 1706 00a2 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1707 00a4 102B     		cmp	r3, #16
 1708 00a6 02D0     		beq	.L142
 1709              		.loc 1 595 0 discriminator 16
 1710 00a8 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1711 00aa 112B     		cmp	r3, #17
 1712 00ac 02D1     		bne	.L143
 1713              	.L142:
 1714              		.loc 1 595 0 discriminator 1
 1715 00ae 4FF00103 		mov	r3, #1
 1716 00b2 01E0     		b	.L144
 1717              	.L143:
 1718              		.loc 1 595 0 discriminator 3
 1719 00b4 4FF00003 		mov	r3, #0
 1720              	.L144:
 1721              		.loc 1 595 0 discriminator 4
 1722 00b8 1846     		mov	r0, r3
 1723 00ba FFF7FEFF 		bl	assert_param
 596:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_REGULAR_RANK(Rank));
 1724              		.loc 1 596 0 is_stmt 1 discriminator 4
 1725 00be BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 1726 00c0 002B     		cmp	r3, #0
 1727 00c2 05D0     		beq	.L145
 1728              		.loc 1 596 0 is_stmt 0 discriminator 1
 1729 00c4 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 1730 00c6 102B     		cmp	r3, #16
 1731 00c8 02D8     		bhi	.L145
 1732              		.loc 1 596 0 discriminator 3
 1733 00ca 4FF00103 		mov	r3, #1
 1734 00ce 01E0     		b	.L146
 1735              	.L145:
 1736              		.loc 1 596 0 discriminator 2
 1737 00d0 4FF00003 		mov	r3, #0
 1738              	.L146:
 1739              		.loc 1 596 0 discriminator 4
 1740 00d4 1846     		mov	r0, r3
 1741 00d6 FFF7FEFF 		bl	assert_param
 597:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(ADC_SampleTime));
 1742              		.loc 1 597 0 is_stmt 1 discriminator 4
 1743 00da 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 1744 00dc 002B     		cmp	r3, #0
 1745 00de 14D0     		beq	.L147
 1746              		.loc 1 597 0 is_stmt 0 discriminator 2
 1747 00e0 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 1748 00e2 012B     		cmp	r3, #1
 1749 00e4 11D0     		beq	.L147
 1750              		.loc 1 597 0 discriminator 1
 1751 00e6 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 1752 00e8 022B     		cmp	r3, #2
 1753 00ea 0ED0     		beq	.L147
 1754              		.loc 1 597 0 discriminator 2
 1755 00ec 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 1756 00ee 032B     		cmp	r3, #3
 1757 00f0 0BD0     		beq	.L147
 1758              		.loc 1 597 0 discriminator 3
 1759 00f2 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 1760 00f4 042B     		cmp	r3, #4
 1761 00f6 08D0     		beq	.L147
 1762              		.loc 1 597 0 discriminator 4
 1763 00f8 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 1764 00fa 052B     		cmp	r3, #5
 1765 00fc 05D0     		beq	.L147
 1766              		.loc 1 597 0 discriminator 5
 1767 00fe 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 1768 0100 062B     		cmp	r3, #6
 1769 0102 02D0     		beq	.L147
 1770              		.loc 1 597 0 discriminator 6
 1771 0104 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 1772 0106 072B     		cmp	r3, #7
 1773 0108 02D1     		bne	.L148
 1774              	.L147:
 1775              		.loc 1 597 0 discriminator 1
 1776 010a 4FF00103 		mov	r3, #1
 1777 010e 01E0     		b	.L149
 1778              	.L148:
 1779              		.loc 1 597 0 discriminator 3
 1780 0110 4FF00003 		mov	r3, #0
 1781              	.L149:
 1782              		.loc 1 597 0 discriminator 4
 1783 0114 1846     		mov	r0, r3
 1784 0116 FFF7FEFF 		bl	assert_param
 598:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* if ADC_Channel_10 ... ADC_Channel_17 is selected */
 599:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   if (ADC_Channel > ADC_Channel_9)
 1785              		.loc 1 599 0 is_stmt 1 discriminator 4
 1786 011a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1787 011c 092B     		cmp	r3, #9
 1788 011e 27D9     		bls	.L150
 600:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
 601:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Get the old register value */
 602:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     tmpreg1 = ADCx->SMPR1;
 1789              		.loc 1 602 0
 1790 0120 7B68     		ldr	r3, [r7, #4]
 1791 0122 DB68     		ldr	r3, [r3, #12]
 1792 0124 FB60     		str	r3, [r7, #12]
 603:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Calculate the mask to clear */
 604:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     tmpreg2 = SMPR1_SMP_Set << (3 * (ADC_Channel - 10));
 1793              		.loc 1 604 0
 1794 0126 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1795 0128 1346     		mov	r3, r2
 1796 012a 4FEA4303 		lsl	r3, r3, #1
 1797 012e 9B18     		adds	r3, r3, r2
 1798 0130 A3F11E03 		sub	r3, r3, #30
 1799 0134 4FF00702 		mov	r2, #7
 1800 0138 02FA03F3 		lsl	r3, r2, r3
 1801 013c BB60     		str	r3, [r7, #8]
 605:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Clear the old channel sample time */
 606:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     tmpreg1 &= ~tmpreg2;
 1802              		.loc 1 606 0
 1803 013e BB68     		ldr	r3, [r7, #8]
 1804 0140 6FEA0303 		mvn	r3, r3
 1805 0144 FA68     		ldr	r2, [r7, #12]
 1806 0146 1340     		ands	r3, r3, r2
 1807 0148 FB60     		str	r3, [r7, #12]
 607:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Calculate the mask to set */
 608:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     tmpreg2 = (uint32_t)ADC_SampleTime << (3 * (ADC_Channel - 10));
 1808              		.loc 1 608 0
 1809 014a 7978     		ldrb	r1, [r7, #1]	@ zero_extendqisi2
 1810 014c FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1811 014e 1346     		mov	r3, r2
 1812 0150 4FEA4303 		lsl	r3, r3, #1
 1813 0154 9B18     		adds	r3, r3, r2
 1814 0156 A3F11E03 		sub	r3, r3, #30
 1815 015a 01FA03F3 		lsl	r3, r1, r3
 1816 015e BB60     		str	r3, [r7, #8]
 609:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Set the new channel sample time */
 610:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     tmpreg1 |= tmpreg2;
 1817              		.loc 1 610 0
 1818 0160 FA68     		ldr	r2, [r7, #12]
 1819 0162 BB68     		ldr	r3, [r7, #8]
 1820 0164 1343     		orrs	r3, r3, r2
 1821 0166 FB60     		str	r3, [r7, #12]
 611:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Store the new register value */
 612:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     ADCx->SMPR1 = tmpreg1;
 1822              		.loc 1 612 0
 1823 0168 7B68     		ldr	r3, [r7, #4]
 1824 016a FA68     		ldr	r2, [r7, #12]
 1825 016c DA60     		str	r2, [r3, #12]
 1826 016e 22E0     		b	.L151
 1827              	.L150:
 613:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
 614:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   else /* ADC_Channel include in ADC_Channel_[0..9] */
 615:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
 616:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Get the old register value */
 617:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     tmpreg1 = ADCx->SMPR2;
 1828              		.loc 1 617 0
 1829 0170 7B68     		ldr	r3, [r7, #4]
 1830 0172 1B69     		ldr	r3, [r3, #16]
 1831 0174 FB60     		str	r3, [r7, #12]
 618:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Calculate the mask to clear */
 619:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     tmpreg2 = SMPR2_SMP_Set << (3 * ADC_Channel);
 1832              		.loc 1 619 0
 1833 0176 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1834 0178 1346     		mov	r3, r2
 1835 017a 4FEA4303 		lsl	r3, r3, #1
 1836 017e 9B18     		adds	r3, r3, r2
 1837 0180 4FF00702 		mov	r2, #7
 1838 0184 02FA03F3 		lsl	r3, r2, r3
 1839 0188 BB60     		str	r3, [r7, #8]
 620:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Clear the old channel sample time */
 621:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     tmpreg1 &= ~tmpreg2;
 1840              		.loc 1 621 0
 1841 018a BB68     		ldr	r3, [r7, #8]
 1842 018c 6FEA0303 		mvn	r3, r3
 1843 0190 FA68     		ldr	r2, [r7, #12]
 1844 0192 1340     		ands	r3, r3, r2
 1845 0194 FB60     		str	r3, [r7, #12]
 622:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Calculate the mask to set */
 623:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     tmpreg2 = (uint32_t)ADC_SampleTime << (3 * ADC_Channel);
 1846              		.loc 1 623 0
 1847 0196 7978     		ldrb	r1, [r7, #1]	@ zero_extendqisi2
 1848 0198 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1849 019a 1346     		mov	r3, r2
 1850 019c 4FEA4303 		lsl	r3, r3, #1
 1851 01a0 9B18     		adds	r3, r3, r2
 1852 01a2 01FA03F3 		lsl	r3, r1, r3
 1853 01a6 BB60     		str	r3, [r7, #8]
 624:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Set the new channel sample time */
 625:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     tmpreg1 |= tmpreg2;
 1854              		.loc 1 625 0
 1855 01a8 FA68     		ldr	r2, [r7, #12]
 1856 01aa BB68     		ldr	r3, [r7, #8]
 1857 01ac 1343     		orrs	r3, r3, r2
 1858 01ae FB60     		str	r3, [r7, #12]
 626:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Store the new register value */
 627:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     ADCx->SMPR2 = tmpreg1;
 1859              		.loc 1 627 0
 1860 01b0 7B68     		ldr	r3, [r7, #4]
 1861 01b2 FA68     		ldr	r2, [r7, #12]
 1862 01b4 1A61     		str	r2, [r3, #16]
 1863              	.L151:
 628:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
 629:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* For Rank 1 to 6 */
 630:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   if (Rank < 7)
 1864              		.loc 1 630 0
 1865 01b6 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 1866 01b8 062B     		cmp	r3, #6
 1867 01ba 27D8     		bhi	.L152
 631:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
 632:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Get the old register value */
 633:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     tmpreg1 = ADCx->SQR3;
 1868              		.loc 1 633 0
 1869 01bc 7B68     		ldr	r3, [r7, #4]
 1870 01be 5B6B     		ldr	r3, [r3, #52]
 1871 01c0 FB60     		str	r3, [r7, #12]
 634:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Calculate the mask to clear */
 635:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     tmpreg2 = SQR3_SQ_Set << (5 * (Rank - 1));
 1872              		.loc 1 635 0
 1873 01c2 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 1874 01c4 03F1FF32 		add	r2, r3, #-1
 1875 01c8 1346     		mov	r3, r2
 1876 01ca 4FEA8303 		lsl	r3, r3, #2
 1877 01ce 9B18     		adds	r3, r3, r2
 1878 01d0 4FF01F02 		mov	r2, #31
 1879 01d4 02FA03F3 		lsl	r3, r2, r3
 1880 01d8 BB60     		str	r3, [r7, #8]
 636:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Clear the old SQx bits for the selected rank */
 637:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     tmpreg1 &= ~tmpreg2;
 1881              		.loc 1 637 0
 1882 01da BB68     		ldr	r3, [r7, #8]
 1883 01dc 6FEA0303 		mvn	r3, r3
 1884 01e0 FA68     		ldr	r2, [r7, #12]
 1885 01e2 1340     		ands	r3, r3, r2
 1886 01e4 FB60     		str	r3, [r7, #12]
 638:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Calculate the mask to set */
 639:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     tmpreg2 = (uint32_t)ADC_Channel << (5 * (Rank - 1));
 1887              		.loc 1 639 0
 1888 01e6 F978     		ldrb	r1, [r7, #3]	@ zero_extendqisi2
 1889 01e8 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 1890 01ea 03F1FF32 		add	r2, r3, #-1
 1891 01ee 1346     		mov	r3, r2
 1892 01f0 4FEA8303 		lsl	r3, r3, #2
 1893 01f4 9B18     		adds	r3, r3, r2
 1894 01f6 01FA03F3 		lsl	r3, r1, r3
 1895 01fa BB60     		str	r3, [r7, #8]
 640:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Set the SQx bits for the selected rank */
 641:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     tmpreg1 |= tmpreg2;
 1896              		.loc 1 641 0
 1897 01fc FA68     		ldr	r2, [r7, #12]
 1898 01fe BB68     		ldr	r3, [r7, #8]
 1899 0200 1343     		orrs	r3, r3, r2
 1900 0202 FB60     		str	r3, [r7, #12]
 642:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Store the new register value */
 643:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     ADCx->SQR3 = tmpreg1;
 1901              		.loc 1 643 0
 1902 0204 7B68     		ldr	r3, [r7, #4]
 1903 0206 FA68     		ldr	r2, [r7, #12]
 1904 0208 5A63     		str	r2, [r3, #52]
 1905 020a 58E0     		b	.L138
 1906              	.L152:
 644:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
 645:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* For Rank 7 to 12 */
 646:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   else if (Rank < 13)
 1907              		.loc 1 646 0
 1908 020c BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 1909 020e 0C2B     		cmp	r3, #12
 1910 0210 2ED8     		bhi	.L154
 647:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
 648:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Get the old register value */
 649:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     tmpreg1 = ADCx->SQR2;
 1911              		.loc 1 649 0
 1912 0212 7B68     		ldr	r3, [r7, #4]
 1913 0214 1B6B     		ldr	r3, [r3, #48]
 1914 0216 FB60     		str	r3, [r7, #12]
 650:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Calculate the mask to clear */
 651:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     tmpreg2 = SQR2_SQ_Set << (5 * (Rank - 7));
 1915              		.loc 1 651 0
 1916 0218 BA78     		ldrb	r2, [r7, #2]	@ zero_extendqisi2
 1917 021a 1346     		mov	r3, r2
 1918 021c 4FEA8303 		lsl	r3, r3, #2
 1919 0220 9B18     		adds	r3, r3, r2
 1920 0222 A3F12303 		sub	r3, r3, #35
 1921 0226 4FF01F02 		mov	r2, #31
 1922 022a 02FA03F3 		lsl	r3, r2, r3
 1923 022e BB60     		str	r3, [r7, #8]
 652:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Clear the old SQx bits for the selected rank */
 653:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     tmpreg1 &= ~tmpreg2;
 1924              		.loc 1 653 0
 1925 0230 BB68     		ldr	r3, [r7, #8]
 1926 0232 6FEA0303 		mvn	r3, r3
 1927 0236 FA68     		ldr	r2, [r7, #12]
 1928 0238 1340     		ands	r3, r3, r2
 1929 023a FB60     		str	r3, [r7, #12]
 654:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Calculate the mask to set */
 655:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     tmpreg2 = (uint32_t)ADC_Channel << (5 * (Rank - 7));
 1930              		.loc 1 655 0
 1931 023c F978     		ldrb	r1, [r7, #3]	@ zero_extendqisi2
 1932 023e BA78     		ldrb	r2, [r7, #2]	@ zero_extendqisi2
 1933 0240 1346     		mov	r3, r2
 1934 0242 4FEA8303 		lsl	r3, r3, #2
 1935 0246 9B18     		adds	r3, r3, r2
 1936 0248 A3F12303 		sub	r3, r3, #35
 1937 024c 01FA03F3 		lsl	r3, r1, r3
 1938 0250 BB60     		str	r3, [r7, #8]
 656:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Set the SQx bits for the selected rank */
 657:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     tmpreg1 |= tmpreg2;
 1939              		.loc 1 657 0
 1940 0252 FA68     		ldr	r2, [r7, #12]
 1941 0254 BB68     		ldr	r3, [r7, #8]
 1942 0256 1343     		orrs	r3, r3, r2
 1943 0258 FB60     		str	r3, [r7, #12]
 658:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Store the new register value */
 659:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     ADCx->SQR2 = tmpreg1;
 1944              		.loc 1 659 0
 1945 025a 7B68     		ldr	r3, [r7, #4]
 1946 025c FA68     		ldr	r2, [r7, #12]
 1947 025e 1A63     		str	r2, [r3, #48]
 1948 0260 2DE0     		b	.L138
 1949              	.L156:
 1950 0262 00BF     		.align	2
 1951              	.L155:
 1952 0264 00240140 		.word	1073816576
 1953 0268 00280140 		.word	1073817600
 1954 026c 003C0140 		.word	1073822720
 1955              	.L154:
 660:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
 661:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* For Rank 13 to 16 */
 662:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   else
 663:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
 664:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Get the old register value */
 665:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     tmpreg1 = ADCx->SQR1;
 1956              		.loc 1 665 0
 1957 0270 7B68     		ldr	r3, [r7, #4]
 1958 0272 DB6A     		ldr	r3, [r3, #44]
 1959 0274 FB60     		str	r3, [r7, #12]
 666:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Calculate the mask to clear */
 667:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     tmpreg2 = SQR1_SQ_Set << (5 * (Rank - 13));
 1960              		.loc 1 667 0
 1961 0276 BA78     		ldrb	r2, [r7, #2]	@ zero_extendqisi2
 1962 0278 1346     		mov	r3, r2
 1963 027a 4FEA8303 		lsl	r3, r3, #2
 1964 027e 9B18     		adds	r3, r3, r2
 1965 0280 A3F14103 		sub	r3, r3, #65
 1966 0284 4FF01F02 		mov	r2, #31
 1967 0288 02FA03F3 		lsl	r3, r2, r3
 1968 028c BB60     		str	r3, [r7, #8]
 668:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Clear the old SQx bits for the selected rank */
 669:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     tmpreg1 &= ~tmpreg2;
 1969              		.loc 1 669 0
 1970 028e BB68     		ldr	r3, [r7, #8]
 1971 0290 6FEA0303 		mvn	r3, r3
 1972 0294 FA68     		ldr	r2, [r7, #12]
 1973 0296 1340     		ands	r3, r3, r2
 1974 0298 FB60     		str	r3, [r7, #12]
 670:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Calculate the mask to set */
 671:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     tmpreg2 = (uint32_t)ADC_Channel << (5 * (Rank - 13));
 1975              		.loc 1 671 0
 1976 029a F978     		ldrb	r1, [r7, #3]	@ zero_extendqisi2
 1977 029c BA78     		ldrb	r2, [r7, #2]	@ zero_extendqisi2
 1978 029e 1346     		mov	r3, r2
 1979 02a0 4FEA8303 		lsl	r3, r3, #2
 1980 02a4 9B18     		adds	r3, r3, r2
 1981 02a6 A3F14103 		sub	r3, r3, #65
 1982 02aa 01FA03F3 		lsl	r3, r1, r3
 1983 02ae BB60     		str	r3, [r7, #8]
 672:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Set the SQx bits for the selected rank */
 673:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     tmpreg1 |= tmpreg2;
 1984              		.loc 1 673 0
 1985 02b0 FA68     		ldr	r2, [r7, #12]
 1986 02b2 BB68     		ldr	r3, [r7, #8]
 1987 02b4 1343     		orrs	r3, r3, r2
 1988 02b6 FB60     		str	r3, [r7, #12]
 674:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Store the new register value */
 675:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     ADCx->SQR1 = tmpreg1;
 1989              		.loc 1 675 0
 1990 02b8 7B68     		ldr	r3, [r7, #4]
 1991 02ba FA68     		ldr	r2, [r7, #12]
 1992 02bc DA62     		str	r2, [r3, #44]
 1993              	.L138:
 676:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
 677:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** }
 1994              		.loc 1 677 0
 1995 02be 07F11007 		add	r7, r7, #16
 1996 02c2 BD46     		mov	sp, r7
 1997 02c4 80BD     		pop	{r7, pc}
 1998              		.cfi_endproc
 1999              	.LFE43:
 2001 02c6 00BF     		.section	.text.ADC_ExternalTrigConvCmd,"ax",%progbits
 2002              		.align	2
 2003              		.global	ADC_ExternalTrigConvCmd
 2004              		.thumb
 2005              		.thumb_func
 2007              	ADC_ExternalTrigConvCmd:
 2008              	.LFB44:
 678:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 679:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** /**
 680:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the ADCx conversion through external trigger.
 681:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 682:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the selected ADC external trigger start of conversion.
 683:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
 684:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @retval None
 685:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
 686:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** void ADC_ExternalTrigConvCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 687:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** {
 2009              		.loc 1 687 0
 2010              		.cfi_startproc
 2011              		@ args = 0, pretend = 0, frame = 8
 2012              		@ frame_needed = 1, uses_anonymous_args = 0
 2013 0000 80B5     		push	{r7, lr}
 2014              	.LCFI45:
 2015              		.cfi_def_cfa_offset 8
 2016              		.cfi_offset 7, -8
 2017              		.cfi_offset 14, -4
 2018 0002 82B0     		sub	sp, sp, #8
 2019              	.LCFI46:
 2020              		.cfi_def_cfa_offset 16
 2021 0004 00AF     		add	r7, sp, #0
 2022              	.LCFI47:
 2023              		.cfi_def_cfa_register 7
 2024 0006 7860     		str	r0, [r7, #4]
 2025 0008 0B46     		mov	r3, r1
 2026 000a FB70     		strb	r3, [r7, #3]
 688:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Check the parameters */
 689:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 2027              		.loc 1 689 0
 2028 000c 7A68     		ldr	r2, [r7, #4]
 2029 000e 1A4B     		ldr	r3, .L166
 2030 0010 9A42     		cmp	r2, r3
 2031 0012 07D0     		beq	.L158
 2032              		.loc 1 689 0 is_stmt 0 discriminator 2
 2033 0014 7A68     		ldr	r2, [r7, #4]
 2034 0016 194B     		ldr	r3, .L166+4
 2035 0018 9A42     		cmp	r2, r3
 2036 001a 03D0     		beq	.L158
 2037              		.loc 1 689 0 discriminator 1
 2038 001c 7A68     		ldr	r2, [r7, #4]
 2039 001e 184B     		ldr	r3, .L166+8
 2040 0020 9A42     		cmp	r2, r3
 2041 0022 02D1     		bne	.L159
 2042              	.L158:
 2043 0024 4FF00103 		mov	r3, #1
 2044 0028 01E0     		b	.L160
 2045              	.L159:
 2046              		.loc 1 689 0 discriminator 3
 2047 002a 4FF00003 		mov	r3, #0
 2048              	.L160:
 2049              		.loc 1 689 0 discriminator 4
 2050 002e 1846     		mov	r0, r3
 2051 0030 FFF7FEFF 		bl	assert_param
 690:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 2052              		.loc 1 690 0 is_stmt 1 discriminator 4
 2053 0034 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2054 0036 002B     		cmp	r3, #0
 2055 0038 02D0     		beq	.L161
 2056              		.loc 1 690 0 is_stmt 0 discriminator 2
 2057 003a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2058 003c 012B     		cmp	r3, #1
 2059 003e 02D1     		bne	.L162
 2060              	.L161:
 2061              		.loc 1 690 0 discriminator 1
 2062 0040 4FF00103 		mov	r3, #1
 2063 0044 01E0     		b	.L163
 2064              	.L162:
 2065              		.loc 1 690 0 discriminator 3
 2066 0046 4FF00003 		mov	r3, #0
 2067              	.L163:
 2068              		.loc 1 690 0 discriminator 4
 2069 004a 1846     		mov	r0, r3
 2070 004c FFF7FEFF 		bl	assert_param
 691:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 2071              		.loc 1 691 0 is_stmt 1 discriminator 4
 2072 0050 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2073 0052 002B     		cmp	r3, #0
 2074 0054 06D0     		beq	.L164
 692:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
 693:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Enable the selected ADC conversion on external event */
 694:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     ADCx->CR2 |= CR2_EXTTRIG_Set;
 2075              		.loc 1 694 0
 2076 0056 7B68     		ldr	r3, [r7, #4]
 2077 0058 9B68     		ldr	r3, [r3, #8]
 2078 005a 43F48012 		orr	r2, r3, #1048576
 2079 005e 7B68     		ldr	r3, [r7, #4]
 2080 0060 9A60     		str	r2, [r3, #8]
 2081 0062 05E0     		b	.L157
 2082              	.L164:
 695:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
 696:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   else
 697:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
 698:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Disable the selected ADC conversion on external event */
 699:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     ADCx->CR2 &= CR2_EXTTRIG_Reset;
 2083              		.loc 1 699 0
 2084 0064 7B68     		ldr	r3, [r7, #4]
 2085 0066 9B68     		ldr	r3, [r3, #8]
 2086 0068 23F48012 		bic	r2, r3, #1048576
 2087 006c 7B68     		ldr	r3, [r7, #4]
 2088 006e 9A60     		str	r2, [r3, #8]
 2089              	.L157:
 700:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
 701:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** }
 2090              		.loc 1 701 0
 2091 0070 07F10807 		add	r7, r7, #8
 2092 0074 BD46     		mov	sp, r7
 2093 0076 80BD     		pop	{r7, pc}
 2094              	.L167:
 2095              		.align	2
 2096              	.L166:
 2097 0078 00240140 		.word	1073816576
 2098 007c 00280140 		.word	1073817600
 2099 0080 003C0140 		.word	1073822720
 2100              		.cfi_endproc
 2101              	.LFE44:
 2103              		.section	.text.ADC_GetConversionValue,"ax",%progbits
 2104              		.align	2
 2105              		.global	ADC_GetConversionValue
 2106              		.thumb
 2107              		.thumb_func
 2109              	ADC_GetConversionValue:
 2110              	.LFB45:
 702:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 703:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** /**
 704:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @brief  Returns the last ADCx conversion result data for regular channel.
 705:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 706:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @retval The Data conversion value.
 707:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
 708:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** uint16_t ADC_GetConversionValue(ADC_TypeDef* ADCx)
 709:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** {
 2111              		.loc 1 709 0
 2112              		.cfi_startproc
 2113              		@ args = 0, pretend = 0, frame = 8
 2114              		@ frame_needed = 1, uses_anonymous_args = 0
 2115 0000 80B5     		push	{r7, lr}
 2116              	.LCFI48:
 2117              		.cfi_def_cfa_offset 8
 2118              		.cfi_offset 7, -8
 2119              		.cfi_offset 14, -4
 2120 0002 82B0     		sub	sp, sp, #8
 2121              	.LCFI49:
 2122              		.cfi_def_cfa_offset 16
 2123 0004 00AF     		add	r7, sp, #0
 2124              	.LCFI50:
 2125              		.cfi_def_cfa_register 7
 2126 0006 7860     		str	r0, [r7, #4]
 710:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Check the parameters */
 711:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 2127              		.loc 1 711 0
 2128 0008 7A68     		ldr	r2, [r7, #4]
 2129 000a 0D4B     		ldr	r3, .L173
 2130 000c 9A42     		cmp	r2, r3
 2131 000e 07D0     		beq	.L169
 2132              		.loc 1 711 0 is_stmt 0 discriminator 2
 2133 0010 7A68     		ldr	r2, [r7, #4]
 2134 0012 0C4B     		ldr	r3, .L173+4
 2135 0014 9A42     		cmp	r2, r3
 2136 0016 03D0     		beq	.L169
 2137              		.loc 1 711 0 discriminator 1
 2138 0018 7A68     		ldr	r2, [r7, #4]
 2139 001a 0B4B     		ldr	r3, .L173+8
 2140 001c 9A42     		cmp	r2, r3
 2141 001e 02D1     		bne	.L170
 2142              	.L169:
 2143 0020 4FF00103 		mov	r3, #1
 2144 0024 01E0     		b	.L171
 2145              	.L170:
 2146              		.loc 1 711 0 discriminator 3
 2147 0026 4FF00003 		mov	r3, #0
 2148              	.L171:
 2149              		.loc 1 711 0 discriminator 4
 2150 002a 1846     		mov	r0, r3
 2151 002c FFF7FEFF 		bl	assert_param
 712:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Return the selected ADC conversion value */
 713:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   return (uint16_t) ADCx->DR;
 2152              		.loc 1 713 0 is_stmt 1 discriminator 4
 2153 0030 7B68     		ldr	r3, [r7, #4]
 2154 0032 DB6C     		ldr	r3, [r3, #76]
 2155 0034 9BB2     		uxth	r3, r3
 714:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** }
 2156              		.loc 1 714 0 discriminator 4
 2157 0036 1846     		mov	r0, r3
 2158 0038 07F10807 		add	r7, r7, #8
 2159 003c BD46     		mov	sp, r7
 2160 003e 80BD     		pop	{r7, pc}
 2161              	.L174:
 2162              		.align	2
 2163              	.L173:
 2164 0040 00240140 		.word	1073816576
 2165 0044 00280140 		.word	1073817600
 2166 0048 003C0140 		.word	1073822720
 2167              		.cfi_endproc
 2168              	.LFE45:
 2170              		.section	.text.ADC_GetDualModeConversionValue,"ax",%progbits
 2171              		.align	2
 2172              		.global	ADC_GetDualModeConversionValue
 2173              		.thumb
 2174              		.thumb_func
 2176              	ADC_GetDualModeConversionValue:
 2177              	.LFB46:
 715:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 716:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** /**
 717:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @brief  Returns the last ADC1 and ADC2 conversion result data in dual mode.
 718:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @retval The Data conversion value.
 719:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
 720:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** uint32_t ADC_GetDualModeConversionValue(void)
 721:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** {
 2178              		.loc 1 721 0
 2179              		.cfi_startproc
 2180              		@ args = 0, pretend = 0, frame = 0
 2181              		@ frame_needed = 1, uses_anonymous_args = 0
 2182              		@ link register save eliminated.
 2183 0000 80B4     		push	{r7}
 2184              	.LCFI51:
 2185              		.cfi_def_cfa_offset 4
 2186              		.cfi_offset 7, -4
 2187 0002 00AF     		add	r7, sp, #0
 2188              	.LCFI52:
 2189              		.cfi_def_cfa_register 7
 722:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Return the dual mode conversion value */
 723:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   return (*(__IO uint32_t *) DR_ADDRESS);
 2190              		.loc 1 723 0
 2191 0004 024B     		ldr	r3, .L177
 2192 0006 1B68     		ldr	r3, [r3, #0]
 724:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** }
 2193              		.loc 1 724 0
 2194 0008 1846     		mov	r0, r3
 2195 000a BD46     		mov	sp, r7
 2196 000c 80BC     		pop	{r7}
 2197 000e 7047     		bx	lr
 2198              	.L178:
 2199              		.align	2
 2200              	.L177:
 2201 0010 4C240140 		.word	1073816652
 2202              		.cfi_endproc
 2203              	.LFE46:
 2205              		.section	.text.ADC_AutoInjectedConvCmd,"ax",%progbits
 2206              		.align	2
 2207              		.global	ADC_AutoInjectedConvCmd
 2208              		.thumb
 2209              		.thumb_func
 2211              	ADC_AutoInjectedConvCmd:
 2212              	.LFB47:
 725:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 726:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** /**
 727:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the selected ADC automatic injected group
 728:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *         conversion after regular one.
 729:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 730:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the selected ADC auto injected conversion
 731:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
 732:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @retval None
 733:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
 734:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** void ADC_AutoInjectedConvCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 735:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** {
 2213              		.loc 1 735 0
 2214              		.cfi_startproc
 2215              		@ args = 0, pretend = 0, frame = 8
 2216              		@ frame_needed = 1, uses_anonymous_args = 0
 2217 0000 80B5     		push	{r7, lr}
 2218              	.LCFI53:
 2219              		.cfi_def_cfa_offset 8
 2220              		.cfi_offset 7, -8
 2221              		.cfi_offset 14, -4
 2222 0002 82B0     		sub	sp, sp, #8
 2223              	.LCFI54:
 2224              		.cfi_def_cfa_offset 16
 2225 0004 00AF     		add	r7, sp, #0
 2226              	.LCFI55:
 2227              		.cfi_def_cfa_register 7
 2228 0006 7860     		str	r0, [r7, #4]
 2229 0008 0B46     		mov	r3, r1
 2230 000a FB70     		strb	r3, [r7, #3]
 736:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Check the parameters */
 737:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 2231              		.loc 1 737 0
 2232 000c 7A68     		ldr	r2, [r7, #4]
 2233 000e 1A4B     		ldr	r3, .L188
 2234 0010 9A42     		cmp	r2, r3
 2235 0012 07D0     		beq	.L180
 2236              		.loc 1 737 0 is_stmt 0 discriminator 2
 2237 0014 7A68     		ldr	r2, [r7, #4]
 2238 0016 194B     		ldr	r3, .L188+4
 2239 0018 9A42     		cmp	r2, r3
 2240 001a 03D0     		beq	.L180
 2241              		.loc 1 737 0 discriminator 1
 2242 001c 7A68     		ldr	r2, [r7, #4]
 2243 001e 184B     		ldr	r3, .L188+8
 2244 0020 9A42     		cmp	r2, r3
 2245 0022 02D1     		bne	.L181
 2246              	.L180:
 2247 0024 4FF00103 		mov	r3, #1
 2248 0028 01E0     		b	.L182
 2249              	.L181:
 2250              		.loc 1 737 0 discriminator 3
 2251 002a 4FF00003 		mov	r3, #0
 2252              	.L182:
 2253              		.loc 1 737 0 discriminator 4
 2254 002e 1846     		mov	r0, r3
 2255 0030 FFF7FEFF 		bl	assert_param
 738:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 2256              		.loc 1 738 0 is_stmt 1 discriminator 4
 2257 0034 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2258 0036 002B     		cmp	r3, #0
 2259 0038 02D0     		beq	.L183
 2260              		.loc 1 738 0 is_stmt 0 discriminator 2
 2261 003a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2262 003c 012B     		cmp	r3, #1
 2263 003e 02D1     		bne	.L184
 2264              	.L183:
 2265              		.loc 1 738 0 discriminator 1
 2266 0040 4FF00103 		mov	r3, #1
 2267 0044 01E0     		b	.L185
 2268              	.L184:
 2269              		.loc 1 738 0 discriminator 3
 2270 0046 4FF00003 		mov	r3, #0
 2271              	.L185:
 2272              		.loc 1 738 0 discriminator 4
 2273 004a 1846     		mov	r0, r3
 2274 004c FFF7FEFF 		bl	assert_param
 739:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 2275              		.loc 1 739 0 is_stmt 1 discriminator 4
 2276 0050 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2277 0052 002B     		cmp	r3, #0
 2278 0054 06D0     		beq	.L186
 740:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
 741:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Enable the selected ADC automatic injected group conversion */
 742:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     ADCx->CR1 |= CR1_JAUTO_Set;
 2279              		.loc 1 742 0
 2280 0056 7B68     		ldr	r3, [r7, #4]
 2281 0058 5B68     		ldr	r3, [r3, #4]
 2282 005a 43F48062 		orr	r2, r3, #1024
 2283 005e 7B68     		ldr	r3, [r7, #4]
 2284 0060 5A60     		str	r2, [r3, #4]
 2285 0062 05E0     		b	.L179
 2286              	.L186:
 743:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
 744:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   else
 745:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
 746:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Disable the selected ADC automatic injected group conversion */
 747:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     ADCx->CR1 &= CR1_JAUTO_Reset;
 2287              		.loc 1 747 0
 2288 0064 7B68     		ldr	r3, [r7, #4]
 2289 0066 5B68     		ldr	r3, [r3, #4]
 2290 0068 23F48062 		bic	r2, r3, #1024
 2291 006c 7B68     		ldr	r3, [r7, #4]
 2292 006e 5A60     		str	r2, [r3, #4]
 2293              	.L179:
 748:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
 749:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** }
 2294              		.loc 1 749 0
 2295 0070 07F10807 		add	r7, r7, #8
 2296 0074 BD46     		mov	sp, r7
 2297 0076 80BD     		pop	{r7, pc}
 2298              	.L189:
 2299              		.align	2
 2300              	.L188:
 2301 0078 00240140 		.word	1073816576
 2302 007c 00280140 		.word	1073817600
 2303 0080 003C0140 		.word	1073822720
 2304              		.cfi_endproc
 2305              	.LFE47:
 2307              		.section	.text.ADC_InjectedDiscModeCmd,"ax",%progbits
 2308              		.align	2
 2309              		.global	ADC_InjectedDiscModeCmd
 2310              		.thumb
 2311              		.thumb_func
 2313              	ADC_InjectedDiscModeCmd:
 2314              	.LFB48:
 750:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 751:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** /**
 752:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the discontinuous mode for injected group
 753:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *         channel for the specified ADC
 754:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 755:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the selected ADC discontinuous mode
 756:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *         on injected group channel.
 757:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
 758:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @retval None
 759:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
 760:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** void ADC_InjectedDiscModeCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 761:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** {
 2315              		.loc 1 761 0
 2316              		.cfi_startproc
 2317              		@ args = 0, pretend = 0, frame = 8
 2318              		@ frame_needed = 1, uses_anonymous_args = 0
 2319 0000 80B5     		push	{r7, lr}
 2320              	.LCFI56:
 2321              		.cfi_def_cfa_offset 8
 2322              		.cfi_offset 7, -8
 2323              		.cfi_offset 14, -4
 2324 0002 82B0     		sub	sp, sp, #8
 2325              	.LCFI57:
 2326              		.cfi_def_cfa_offset 16
 2327 0004 00AF     		add	r7, sp, #0
 2328              	.LCFI58:
 2329              		.cfi_def_cfa_register 7
 2330 0006 7860     		str	r0, [r7, #4]
 2331 0008 0B46     		mov	r3, r1
 2332 000a FB70     		strb	r3, [r7, #3]
 762:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Check the parameters */
 763:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 2333              		.loc 1 763 0
 2334 000c 7A68     		ldr	r2, [r7, #4]
 2335 000e 1A4B     		ldr	r3, .L199
 2336 0010 9A42     		cmp	r2, r3
 2337 0012 07D0     		beq	.L191
 2338              		.loc 1 763 0 is_stmt 0 discriminator 2
 2339 0014 7A68     		ldr	r2, [r7, #4]
 2340 0016 194B     		ldr	r3, .L199+4
 2341 0018 9A42     		cmp	r2, r3
 2342 001a 03D0     		beq	.L191
 2343              		.loc 1 763 0 discriminator 1
 2344 001c 7A68     		ldr	r2, [r7, #4]
 2345 001e 184B     		ldr	r3, .L199+8
 2346 0020 9A42     		cmp	r2, r3
 2347 0022 02D1     		bne	.L192
 2348              	.L191:
 2349 0024 4FF00103 		mov	r3, #1
 2350 0028 01E0     		b	.L193
 2351              	.L192:
 2352              		.loc 1 763 0 discriminator 3
 2353 002a 4FF00003 		mov	r3, #0
 2354              	.L193:
 2355              		.loc 1 763 0 discriminator 4
 2356 002e 1846     		mov	r0, r3
 2357 0030 FFF7FEFF 		bl	assert_param
 764:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 2358              		.loc 1 764 0 is_stmt 1 discriminator 4
 2359 0034 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2360 0036 002B     		cmp	r3, #0
 2361 0038 02D0     		beq	.L194
 2362              		.loc 1 764 0 is_stmt 0 discriminator 2
 2363 003a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2364 003c 012B     		cmp	r3, #1
 2365 003e 02D1     		bne	.L195
 2366              	.L194:
 2367              		.loc 1 764 0 discriminator 1
 2368 0040 4FF00103 		mov	r3, #1
 2369 0044 01E0     		b	.L196
 2370              	.L195:
 2371              		.loc 1 764 0 discriminator 3
 2372 0046 4FF00003 		mov	r3, #0
 2373              	.L196:
 2374              		.loc 1 764 0 discriminator 4
 2375 004a 1846     		mov	r0, r3
 2376 004c FFF7FEFF 		bl	assert_param
 765:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 2377              		.loc 1 765 0 is_stmt 1 discriminator 4
 2378 0050 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2379 0052 002B     		cmp	r3, #0
 2380 0054 06D0     		beq	.L197
 766:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
 767:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Enable the selected ADC injected discontinuous mode */
 768:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     ADCx->CR1 |= CR1_JDISCEN_Set;
 2381              		.loc 1 768 0
 2382 0056 7B68     		ldr	r3, [r7, #4]
 2383 0058 5B68     		ldr	r3, [r3, #4]
 2384 005a 43F48052 		orr	r2, r3, #4096
 2385 005e 7B68     		ldr	r3, [r7, #4]
 2386 0060 5A60     		str	r2, [r3, #4]
 2387 0062 05E0     		b	.L190
 2388              	.L197:
 769:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
 770:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   else
 771:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
 772:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Disable the selected ADC injected discontinuous mode */
 773:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     ADCx->CR1 &= CR1_JDISCEN_Reset;
 2389              		.loc 1 773 0
 2390 0064 7B68     		ldr	r3, [r7, #4]
 2391 0066 5B68     		ldr	r3, [r3, #4]
 2392 0068 23F48052 		bic	r2, r3, #4096
 2393 006c 7B68     		ldr	r3, [r7, #4]
 2394 006e 5A60     		str	r2, [r3, #4]
 2395              	.L190:
 774:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
 775:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** }
 2396              		.loc 1 775 0
 2397 0070 07F10807 		add	r7, r7, #8
 2398 0074 BD46     		mov	sp, r7
 2399 0076 80BD     		pop	{r7, pc}
 2400              	.L200:
 2401              		.align	2
 2402              	.L199:
 2403 0078 00240140 		.word	1073816576
 2404 007c 00280140 		.word	1073817600
 2405 0080 003C0140 		.word	1073822720
 2406              		.cfi_endproc
 2407              	.LFE48:
 2409              		.section	.text.ADC_ExternalTrigInjectedConvConfig,"ax",%progbits
 2410              		.align	2
 2411              		.global	ADC_ExternalTrigInjectedConvConfig
 2412              		.thumb
 2413              		.thumb_func
 2415              	ADC_ExternalTrigInjectedConvConfig:
 2416              	.LFB49:
 776:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 777:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** /**
 778:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @brief  Configures the ADCx external trigger for injected channels conversion.
 779:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 780:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADC_ExternalTrigInjecConv: specifies the ADC trigger to start injected conversion. 
 781:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
 782:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T1_TRGO: Timer1 TRGO event selected (for ADC1, ADC2 and ADC3
 783:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T1_CC4: Timer1 capture compare4 selected (for ADC1, ADC2 and
 784:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T2_TRGO: Timer2 TRGO event selected (for ADC1 and ADC2)
 785:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T2_CC1: Timer2 capture compare1 selected (for ADC1 and ADC2)
 786:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T3_CC4: Timer3 capture compare4 selected (for ADC1 and ADC2)
 787:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T4_TRGO: Timer4 TRGO event selected (for ADC1 and ADC2)
 788:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_Ext_IT15_TIM8_CC4: External interrupt line 15 or Timer8
 789:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *                                                       capture compare4 event selected (for ADC1
 790:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T4_CC3: Timer4 capture compare3 selected (for ADC3 only)
 791:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T8_CC2: Timer8 capture compare2 selected (for ADC3 only)    
 792:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T8_CC4: Timer8 capture compare4 selected (for ADC3 only)
 793:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T5_TRGO: Timer5 TRGO event selected (for ADC3 only)         
 794:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T5_CC4: Timer5 capture compare4 selected (for ADC3 only)    
 795:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_None: Injected conversion started by software and not
 796:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *                                          by external trigger (for ADC1, ADC2 and ADC3)
 797:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @retval None
 798:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
 799:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** void ADC_ExternalTrigInjectedConvConfig(ADC_TypeDef* ADCx, uint32_t ADC_ExternalTrigInjecConv)
 800:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** {
 2417              		.loc 1 800 0
 2418              		.cfi_startproc
 2419              		@ args = 0, pretend = 0, frame = 16
 2420              		@ frame_needed = 1, uses_anonymous_args = 0
 2421 0000 80B5     		push	{r7, lr}
 2422              	.LCFI59:
 2423              		.cfi_def_cfa_offset 8
 2424              		.cfi_offset 7, -8
 2425              		.cfi_offset 14, -4
 2426 0002 84B0     		sub	sp, sp, #16
 2427              	.LCFI60:
 2428              		.cfi_def_cfa_offset 24
 2429 0004 00AF     		add	r7, sp, #0
 2430              	.LCFI61:
 2431              		.cfi_def_cfa_register 7
 2432 0006 7860     		str	r0, [r7, #4]
 2433 0008 3960     		str	r1, [r7, #0]
 801:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   uint32_t tmpreg = 0;
 2434              		.loc 1 801 0
 2435 000a 4FF00003 		mov	r3, #0
 2436 000e FB60     		str	r3, [r7, #12]
 802:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Check the parameters */
 803:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 2437              		.loc 1 803 0
 2438 0010 7A68     		ldr	r2, [r7, #4]
 2439 0012 304B     		ldr	r3, .L208
 2440 0014 9A42     		cmp	r2, r3
 2441 0016 07D0     		beq	.L202
 2442              		.loc 1 803 0 is_stmt 0 discriminator 2
 2443 0018 7A68     		ldr	r2, [r7, #4]
 2444 001a 2F4B     		ldr	r3, .L208+4
 2445 001c 9A42     		cmp	r2, r3
 2446 001e 03D0     		beq	.L202
 2447              		.loc 1 803 0 discriminator 1
 2448 0020 7A68     		ldr	r2, [r7, #4]
 2449 0022 2E4B     		ldr	r3, .L208+8
 2450 0024 9A42     		cmp	r2, r3
 2451 0026 02D1     		bne	.L203
 2452              	.L202:
 2453 0028 4FF00103 		mov	r3, #1
 2454 002c 01E0     		b	.L204
 2455              	.L203:
 2456              		.loc 1 803 0 discriminator 3
 2457 002e 4FF00003 		mov	r3, #0
 2458              	.L204:
 2459              		.loc 1 803 0 discriminator 4
 2460 0032 1846     		mov	r0, r3
 2461 0034 FFF7FEFF 		bl	assert_param
 804:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_EXT_INJEC_TRIG(ADC_ExternalTrigInjecConv));
 2462              		.loc 1 804 0 is_stmt 1 discriminator 4
 2463 0038 3B68     		ldr	r3, [r7, #0]
 2464 003a 002B     		cmp	r3, #0
 2465 003c 2FD0     		beq	.L205
 2466              		.loc 1 804 0 is_stmt 0 discriminator 2
 2467 003e 3B68     		ldr	r3, [r7, #0]
 2468 0040 B3F5805F 		cmp	r3, #4096
 2469 0044 2BD0     		beq	.L205
 2470              		.loc 1 804 0 discriminator 1
 2471 0046 3B68     		ldr	r3, [r7, #0]
 2472 0048 B3F5005F 		cmp	r3, #8192
 2473 004c 27D0     		beq	.L205
 2474              		.loc 1 804 0 discriminator 2
 2475 004e 3B68     		ldr	r3, [r7, #0]
 2476 0050 B3F5405F 		cmp	r3, #12288
 2477 0054 23D0     		beq	.L205
 2478              		.loc 1 804 0 discriminator 3
 2479 0056 3B68     		ldr	r3, [r7, #0]
 2480 0058 B3F5804F 		cmp	r3, #16384
 2481 005c 1FD0     		beq	.L205
 2482              		.loc 1 804 0 discriminator 4
 2483 005e 3B68     		ldr	r3, [r7, #0]
 2484 0060 B3F5A04F 		cmp	r3, #20480
 2485 0064 1BD0     		beq	.L205
 2486              		.loc 1 804 0 discriminator 5
 2487 0066 3B68     		ldr	r3, [r7, #0]
 2488 0068 B3F5C04F 		cmp	r3, #24576
 2489 006c 17D0     		beq	.L205
 2490              		.loc 1 804 0 discriminator 6
 2491 006e 3B68     		ldr	r3, [r7, #0]
 2492 0070 B3F5E04F 		cmp	r3, #28672
 2493 0074 13D0     		beq	.L205
 2494              		.loc 1 804 0 discriminator 7
 2495 0076 3B68     		ldr	r3, [r7, #0]
 2496 0078 B3F5005F 		cmp	r3, #8192
 2497 007c 0FD0     		beq	.L205
 2498              		.loc 1 804 0 discriminator 8
 2499 007e 3B68     		ldr	r3, [r7, #0]
 2500 0080 B3F5405F 		cmp	r3, #12288
 2501 0084 0BD0     		beq	.L205
 2502              		.loc 1 804 0 discriminator 9
 2503 0086 3B68     		ldr	r3, [r7, #0]
 2504 0088 B3F5804F 		cmp	r3, #16384
 2505 008c 07D0     		beq	.L205
 2506              		.loc 1 804 0 discriminator 10
 2507 008e 3B68     		ldr	r3, [r7, #0]
 2508 0090 B3F5A04F 		cmp	r3, #20480
 2509 0094 03D0     		beq	.L205
 2510              		.loc 1 804 0 discriminator 11
 2511 0096 3B68     		ldr	r3, [r7, #0]
 2512 0098 B3F5C04F 		cmp	r3, #24576
 2513 009c 02D1     		bne	.L206
 2514              	.L205:
 2515              		.loc 1 804 0 discriminator 1
 2516 009e 4FF00103 		mov	r3, #1
 2517 00a2 01E0     		b	.L207
 2518              	.L206:
 2519              		.loc 1 804 0 discriminator 3
 2520 00a4 4FF00003 		mov	r3, #0
 2521              	.L207:
 2522              		.loc 1 804 0 discriminator 4
 2523 00a8 1846     		mov	r0, r3
 2524 00aa FFF7FEFF 		bl	assert_param
 805:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Get the old register value */
 806:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   tmpreg = ADCx->CR2;
 2525              		.loc 1 806 0 is_stmt 1 discriminator 4
 2526 00ae 7B68     		ldr	r3, [r7, #4]
 2527 00b0 9B68     		ldr	r3, [r3, #8]
 2528 00b2 FB60     		str	r3, [r7, #12]
 807:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Clear the old external event selection for injected group */
 808:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   tmpreg &= CR2_JEXTSEL_Reset;
 2529              		.loc 1 808 0 discriminator 4
 2530 00b4 FB68     		ldr	r3, [r7, #12]
 2531 00b6 23F4E043 		bic	r3, r3, #28672
 2532 00ba FB60     		str	r3, [r7, #12]
 809:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Set the external event selection for injected group */
 810:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   tmpreg |= ADC_ExternalTrigInjecConv;
 2533              		.loc 1 810 0 discriminator 4
 2534 00bc FA68     		ldr	r2, [r7, #12]
 2535 00be 3B68     		ldr	r3, [r7, #0]
 2536 00c0 1343     		orrs	r3, r3, r2
 2537 00c2 FB60     		str	r3, [r7, #12]
 811:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Store the new register value */
 812:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   ADCx->CR2 = tmpreg;
 2538              		.loc 1 812 0 discriminator 4
 2539 00c4 7B68     		ldr	r3, [r7, #4]
 2540 00c6 FA68     		ldr	r2, [r7, #12]
 2541 00c8 9A60     		str	r2, [r3, #8]
 813:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** }
 2542              		.loc 1 813 0 discriminator 4
 2543 00ca 07F11007 		add	r7, r7, #16
 2544 00ce BD46     		mov	sp, r7
 2545 00d0 80BD     		pop	{r7, pc}
 2546              	.L209:
 2547 00d2 00BF     		.align	2
 2548              	.L208:
 2549 00d4 00240140 		.word	1073816576
 2550 00d8 00280140 		.word	1073817600
 2551 00dc 003C0140 		.word	1073822720
 2552              		.cfi_endproc
 2553              	.LFE49:
 2555              		.section	.text.ADC_ExternalTrigInjectedConvCmd,"ax",%progbits
 2556              		.align	2
 2557              		.global	ADC_ExternalTrigInjectedConvCmd
 2558              		.thumb
 2559              		.thumb_func
 2561              	ADC_ExternalTrigInjectedConvCmd:
 2562              	.LFB50:
 814:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 815:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** /**
 816:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the ADCx injected channels conversion through
 817:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *         external trigger
 818:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 819:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the selected ADC external trigger start of
 820:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *         injected conversion.
 821:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
 822:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @retval None
 823:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
 824:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** void ADC_ExternalTrigInjectedConvCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 825:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** {
 2563              		.loc 1 825 0
 2564              		.cfi_startproc
 2565              		@ args = 0, pretend = 0, frame = 8
 2566              		@ frame_needed = 1, uses_anonymous_args = 0
 2567 0000 80B5     		push	{r7, lr}
 2568              	.LCFI62:
 2569              		.cfi_def_cfa_offset 8
 2570              		.cfi_offset 7, -8
 2571              		.cfi_offset 14, -4
 2572 0002 82B0     		sub	sp, sp, #8
 2573              	.LCFI63:
 2574              		.cfi_def_cfa_offset 16
 2575 0004 00AF     		add	r7, sp, #0
 2576              	.LCFI64:
 2577              		.cfi_def_cfa_register 7
 2578 0006 7860     		str	r0, [r7, #4]
 2579 0008 0B46     		mov	r3, r1
 2580 000a FB70     		strb	r3, [r7, #3]
 826:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Check the parameters */
 827:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 2581              		.loc 1 827 0
 2582 000c 7A68     		ldr	r2, [r7, #4]
 2583 000e 1A4B     		ldr	r3, .L219
 2584 0010 9A42     		cmp	r2, r3
 2585 0012 07D0     		beq	.L211
 2586              		.loc 1 827 0 is_stmt 0 discriminator 2
 2587 0014 7A68     		ldr	r2, [r7, #4]
 2588 0016 194B     		ldr	r3, .L219+4
 2589 0018 9A42     		cmp	r2, r3
 2590 001a 03D0     		beq	.L211
 2591              		.loc 1 827 0 discriminator 1
 2592 001c 7A68     		ldr	r2, [r7, #4]
 2593 001e 184B     		ldr	r3, .L219+8
 2594 0020 9A42     		cmp	r2, r3
 2595 0022 02D1     		bne	.L212
 2596              	.L211:
 2597 0024 4FF00103 		mov	r3, #1
 2598 0028 01E0     		b	.L213
 2599              	.L212:
 2600              		.loc 1 827 0 discriminator 3
 2601 002a 4FF00003 		mov	r3, #0
 2602              	.L213:
 2603              		.loc 1 827 0 discriminator 4
 2604 002e 1846     		mov	r0, r3
 2605 0030 FFF7FEFF 		bl	assert_param
 828:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 2606              		.loc 1 828 0 is_stmt 1 discriminator 4
 2607 0034 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2608 0036 002B     		cmp	r3, #0
 2609 0038 02D0     		beq	.L214
 2610              		.loc 1 828 0 is_stmt 0 discriminator 2
 2611 003a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2612 003c 012B     		cmp	r3, #1
 2613 003e 02D1     		bne	.L215
 2614              	.L214:
 2615              		.loc 1 828 0 discriminator 1
 2616 0040 4FF00103 		mov	r3, #1
 2617 0044 01E0     		b	.L216
 2618              	.L215:
 2619              		.loc 1 828 0 discriminator 3
 2620 0046 4FF00003 		mov	r3, #0
 2621              	.L216:
 2622              		.loc 1 828 0 discriminator 4
 2623 004a 1846     		mov	r0, r3
 2624 004c FFF7FEFF 		bl	assert_param
 829:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 2625              		.loc 1 829 0 is_stmt 1 discriminator 4
 2626 0050 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2627 0052 002B     		cmp	r3, #0
 2628 0054 06D0     		beq	.L217
 830:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
 831:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Enable the selected ADC external event selection for injected group */
 832:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     ADCx->CR2 |= CR2_JEXTTRIG_Set;
 2629              		.loc 1 832 0
 2630 0056 7B68     		ldr	r3, [r7, #4]
 2631 0058 9B68     		ldr	r3, [r3, #8]
 2632 005a 43F40042 		orr	r2, r3, #32768
 2633 005e 7B68     		ldr	r3, [r7, #4]
 2634 0060 9A60     		str	r2, [r3, #8]
 2635 0062 05E0     		b	.L210
 2636              	.L217:
 833:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
 834:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   else
 835:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
 836:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Disable the selected ADC external event selection for injected group */
 837:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     ADCx->CR2 &= CR2_JEXTTRIG_Reset;
 2637              		.loc 1 837 0
 2638 0064 7B68     		ldr	r3, [r7, #4]
 2639 0066 9B68     		ldr	r3, [r3, #8]
 2640 0068 23F40042 		bic	r2, r3, #32768
 2641 006c 7B68     		ldr	r3, [r7, #4]
 2642 006e 9A60     		str	r2, [r3, #8]
 2643              	.L210:
 838:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
 839:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** }
 2644              		.loc 1 839 0
 2645 0070 07F10807 		add	r7, r7, #8
 2646 0074 BD46     		mov	sp, r7
 2647 0076 80BD     		pop	{r7, pc}
 2648              	.L220:
 2649              		.align	2
 2650              	.L219:
 2651 0078 00240140 		.word	1073816576
 2652 007c 00280140 		.word	1073817600
 2653 0080 003C0140 		.word	1073822720
 2654              		.cfi_endproc
 2655              	.LFE50:
 2657              		.section	.text.ADC_SoftwareStartInjectedConvCmd,"ax",%progbits
 2658              		.align	2
 2659              		.global	ADC_SoftwareStartInjectedConvCmd
 2660              		.thumb
 2661              		.thumb_func
 2663              	ADC_SoftwareStartInjectedConvCmd:
 2664              	.LFB51:
 840:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 841:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** /**
 842:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the selected ADC start of the injected 
 843:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *         channels conversion.
 844:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 845:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the selected ADC software start injected conversion.
 846:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
 847:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @retval None
 848:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
 849:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** void ADC_SoftwareStartInjectedConvCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 850:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** {
 2665              		.loc 1 850 0
 2666              		.cfi_startproc
 2667              		@ args = 0, pretend = 0, frame = 8
 2668              		@ frame_needed = 1, uses_anonymous_args = 0
 2669 0000 80B5     		push	{r7, lr}
 2670              	.LCFI65:
 2671              		.cfi_def_cfa_offset 8
 2672              		.cfi_offset 7, -8
 2673              		.cfi_offset 14, -4
 2674 0002 82B0     		sub	sp, sp, #8
 2675              	.LCFI66:
 2676              		.cfi_def_cfa_offset 16
 2677 0004 00AF     		add	r7, sp, #0
 2678              	.LCFI67:
 2679              		.cfi_def_cfa_register 7
 2680 0006 7860     		str	r0, [r7, #4]
 2681 0008 0B46     		mov	r3, r1
 2682 000a FB70     		strb	r3, [r7, #3]
 851:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Check the parameters */
 852:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 2683              		.loc 1 852 0
 2684 000c 7A68     		ldr	r2, [r7, #4]
 2685 000e 1A4B     		ldr	r3, .L230
 2686 0010 9A42     		cmp	r2, r3
 2687 0012 07D0     		beq	.L222
 2688              		.loc 1 852 0 is_stmt 0 discriminator 2
 2689 0014 7A68     		ldr	r2, [r7, #4]
 2690 0016 194B     		ldr	r3, .L230+4
 2691 0018 9A42     		cmp	r2, r3
 2692 001a 03D0     		beq	.L222
 2693              		.loc 1 852 0 discriminator 1
 2694 001c 7A68     		ldr	r2, [r7, #4]
 2695 001e 184B     		ldr	r3, .L230+8
 2696 0020 9A42     		cmp	r2, r3
 2697 0022 02D1     		bne	.L223
 2698              	.L222:
 2699 0024 4FF00103 		mov	r3, #1
 2700 0028 01E0     		b	.L224
 2701              	.L223:
 2702              		.loc 1 852 0 discriminator 3
 2703 002a 4FF00003 		mov	r3, #0
 2704              	.L224:
 2705              		.loc 1 852 0 discriminator 4
 2706 002e 1846     		mov	r0, r3
 2707 0030 FFF7FEFF 		bl	assert_param
 853:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 2708              		.loc 1 853 0 is_stmt 1 discriminator 4
 2709 0034 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2710 0036 002B     		cmp	r3, #0
 2711 0038 02D0     		beq	.L225
 2712              		.loc 1 853 0 is_stmt 0 discriminator 2
 2713 003a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2714 003c 012B     		cmp	r3, #1
 2715 003e 02D1     		bne	.L226
 2716              	.L225:
 2717              		.loc 1 853 0 discriminator 1
 2718 0040 4FF00103 		mov	r3, #1
 2719 0044 01E0     		b	.L227
 2720              	.L226:
 2721              		.loc 1 853 0 discriminator 3
 2722 0046 4FF00003 		mov	r3, #0
 2723              	.L227:
 2724              		.loc 1 853 0 discriminator 4
 2725 004a 1846     		mov	r0, r3
 2726 004c FFF7FEFF 		bl	assert_param
 854:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 2727              		.loc 1 854 0 is_stmt 1 discriminator 4
 2728 0050 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2729 0052 002B     		cmp	r3, #0
 2730 0054 06D0     		beq	.L228
 855:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
 856:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Enable the selected ADC conversion for injected group on external event and start the select
 857:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****        ADC injected conversion */
 858:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     ADCx->CR2 |= CR2_JEXTTRIG_JSWSTART_Set;
 2731              		.loc 1 858 0
 2732 0056 7B68     		ldr	r3, [r7, #4]
 2733 0058 9B68     		ldr	r3, [r3, #8]
 2734 005a 43F40212 		orr	r2, r3, #2129920
 2735 005e 7B68     		ldr	r3, [r7, #4]
 2736 0060 9A60     		str	r2, [r3, #8]
 2737 0062 05E0     		b	.L221
 2738              	.L228:
 859:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
 860:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   else
 861:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
 862:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Disable the selected ADC conversion on external event for injected group and stop the select
 863:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****        ADC injected conversion */
 864:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     ADCx->CR2 &= CR2_JEXTTRIG_JSWSTART_Reset;
 2739              		.loc 1 864 0
 2740 0064 7B68     		ldr	r3, [r7, #4]
 2741 0066 9B68     		ldr	r3, [r3, #8]
 2742 0068 23F40212 		bic	r2, r3, #2129920
 2743 006c 7B68     		ldr	r3, [r7, #4]
 2744 006e 9A60     		str	r2, [r3, #8]
 2745              	.L221:
 865:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
 866:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** }
 2746              		.loc 1 866 0
 2747 0070 07F10807 		add	r7, r7, #8
 2748 0074 BD46     		mov	sp, r7
 2749 0076 80BD     		pop	{r7, pc}
 2750              	.L231:
 2751              		.align	2
 2752              	.L230:
 2753 0078 00240140 		.word	1073816576
 2754 007c 00280140 		.word	1073817600
 2755 0080 003C0140 		.word	1073822720
 2756              		.cfi_endproc
 2757              	.LFE51:
 2759              		.section	.text.ADC_GetSoftwareStartInjectedConvCmdStatus,"ax",%progbits
 2760              		.align	2
 2761              		.global	ADC_GetSoftwareStartInjectedConvCmdStatus
 2762              		.thumb
 2763              		.thumb_func
 2765              	ADC_GetSoftwareStartInjectedConvCmdStatus:
 2766              	.LFB52:
 867:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 868:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** /**
 869:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @brief  Gets the selected ADC Software start injected conversion Status.
 870:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 871:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @retval The new state of ADC software start injected conversion (SET or RESET).
 872:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
 873:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** FlagStatus ADC_GetSoftwareStartInjectedConvCmdStatus(ADC_TypeDef* ADCx)
 874:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** {
 2767              		.loc 1 874 0
 2768              		.cfi_startproc
 2769              		@ args = 0, pretend = 0, frame = 16
 2770              		@ frame_needed = 1, uses_anonymous_args = 0
 2771 0000 80B5     		push	{r7, lr}
 2772              	.LCFI68:
 2773              		.cfi_def_cfa_offset 8
 2774              		.cfi_offset 7, -8
 2775              		.cfi_offset 14, -4
 2776 0002 84B0     		sub	sp, sp, #16
 2777              	.LCFI69:
 2778              		.cfi_def_cfa_offset 24
 2779 0004 00AF     		add	r7, sp, #0
 2780              	.LCFI70:
 2781              		.cfi_def_cfa_register 7
 2782 0006 7860     		str	r0, [r7, #4]
 875:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   FlagStatus bitstatus = RESET;
 2783              		.loc 1 875 0
 2784 0008 4FF00003 		mov	r3, #0
 2785 000c FB73     		strb	r3, [r7, #15]
 876:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Check the parameters */
 877:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 2786              		.loc 1 877 0
 2787 000e 7A68     		ldr	r2, [r7, #4]
 2788 0010 124B     		ldr	r3, .L239
 2789 0012 9A42     		cmp	r2, r3
 2790 0014 07D0     		beq	.L233
 2791              		.loc 1 877 0 is_stmt 0 discriminator 2
 2792 0016 7A68     		ldr	r2, [r7, #4]
 2793 0018 114B     		ldr	r3, .L239+4
 2794 001a 9A42     		cmp	r2, r3
 2795 001c 03D0     		beq	.L233
 2796              		.loc 1 877 0 discriminator 1
 2797 001e 7A68     		ldr	r2, [r7, #4]
 2798 0020 104B     		ldr	r3, .L239+8
 2799 0022 9A42     		cmp	r2, r3
 2800 0024 02D1     		bne	.L234
 2801              	.L233:
 2802 0026 4FF00103 		mov	r3, #1
 2803 002a 01E0     		b	.L235
 2804              	.L234:
 2805              		.loc 1 877 0 discriminator 3
 2806 002c 4FF00003 		mov	r3, #0
 2807              	.L235:
 2808              		.loc 1 877 0 discriminator 4
 2809 0030 1846     		mov	r0, r3
 2810 0032 FFF7FEFF 		bl	assert_param
 878:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Check the status of JSWSTART bit */
 879:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   if ((ADCx->CR2 & CR2_JSWSTART_Set) != (uint32_t)RESET)
 2811              		.loc 1 879 0 is_stmt 1 discriminator 4
 2812 0036 7B68     		ldr	r3, [r7, #4]
 2813 0038 9B68     		ldr	r3, [r3, #8]
 2814 003a 03F40013 		and	r3, r3, #2097152
 2815 003e 002B     		cmp	r3, #0
 2816 0040 03D0     		beq	.L236
 880:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
 881:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* JSWSTART bit is set */
 882:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     bitstatus = SET;
 2817              		.loc 1 882 0
 2818 0042 4FF00103 		mov	r3, #1
 2819 0046 FB73     		strb	r3, [r7, #15]
 2820 0048 02E0     		b	.L237
 2821              	.L236:
 883:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
 884:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   else
 885:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
 886:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* JSWSTART bit is reset */
 887:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     bitstatus = RESET;
 2822              		.loc 1 887 0
 2823 004a 4FF00003 		mov	r3, #0
 2824 004e FB73     		strb	r3, [r7, #15]
 2825              	.L237:
 888:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
 889:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Return the JSWSTART bit status */
 890:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   return  bitstatus;
 2826              		.loc 1 890 0
 2827 0050 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 891:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** }
 2828              		.loc 1 891 0
 2829 0052 1846     		mov	r0, r3
 2830 0054 07F11007 		add	r7, r7, #16
 2831 0058 BD46     		mov	sp, r7
 2832 005a 80BD     		pop	{r7, pc}
 2833              	.L240:
 2834              		.align	2
 2835              	.L239:
 2836 005c 00240140 		.word	1073816576
 2837 0060 00280140 		.word	1073817600
 2838 0064 003C0140 		.word	1073822720
 2839              		.cfi_endproc
 2840              	.LFE52:
 2842              		.section	.text.ADC_InjectedChannelConfig,"ax",%progbits
 2843              		.align	2
 2844              		.global	ADC_InjectedChannelConfig
 2845              		.thumb
 2846              		.thumb_func
 2848              	ADC_InjectedChannelConfig:
 2849              	.LFB53:
 892:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 893:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** /**
 894:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @brief  Configures for the selected ADC injected channel its corresponding
 895:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *         rank in the sequencer and its sample time.
 896:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 897:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADC_Channel: the ADC channel to configure. 
 898:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
 899:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_0: ADC Channel0 selected
 900:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_1: ADC Channel1 selected
 901:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_2: ADC Channel2 selected
 902:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_3: ADC Channel3 selected
 903:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_4: ADC Channel4 selected
 904:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_5: ADC Channel5 selected
 905:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_6: ADC Channel6 selected
 906:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_7: ADC Channel7 selected
 907:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_8: ADC Channel8 selected
 908:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_9: ADC Channel9 selected
 909:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_10: ADC Channel10 selected
 910:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_11: ADC Channel11 selected
 911:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_12: ADC Channel12 selected
 912:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_13: ADC Channel13 selected
 913:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_14: ADC Channel14 selected
 914:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_15: ADC Channel15 selected
 915:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_16: ADC Channel16 selected
 916:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_17: ADC Channel17 selected
 917:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  Rank: The rank in the injected group sequencer. This parameter must be between 1 and 4.
 918:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADC_SampleTime: The sample time value to be set for the selected channel. 
 919:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
 920:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_1Cycles5: Sample time equal to 1.5 cycles
 921:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_7Cycles5: Sample time equal to 7.5 cycles
 922:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_13Cycles5: Sample time equal to 13.5 cycles
 923:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_28Cycles5: Sample time equal to 28.5 cycles	
 924:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_41Cycles5: Sample time equal to 41.5 cycles	
 925:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_55Cycles5: Sample time equal to 55.5 cycles	
 926:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_71Cycles5: Sample time equal to 71.5 cycles	
 927:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_239Cycles5: Sample time equal to 239.5 cycles	
 928:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @retval None
 929:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
 930:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** void ADC_InjectedChannelConfig(ADC_TypeDef* ADCx, uint8_t ADC_Channel, uint8_t Rank, uint8_t ADC_Sa
 931:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** {
 2850              		.loc 1 931 0
 2851              		.cfi_startproc
 2852              		@ args = 0, pretend = 0, frame = 24
 2853              		@ frame_needed = 1, uses_anonymous_args = 0
 2854 0000 80B5     		push	{r7, lr}
 2855              	.LCFI71:
 2856              		.cfi_def_cfa_offset 8
 2857              		.cfi_offset 7, -8
 2858              		.cfi_offset 14, -4
 2859 0002 86B0     		sub	sp, sp, #24
 2860              	.LCFI72:
 2861              		.cfi_def_cfa_offset 32
 2862 0004 00AF     		add	r7, sp, #0
 2863              	.LCFI73:
 2864              		.cfi_def_cfa_register 7
 2865 0006 7860     		str	r0, [r7, #4]
 2866 0008 F970     		strb	r1, [r7, #3]
 2867 000a BA70     		strb	r2, [r7, #2]
 2868 000c 7B70     		strb	r3, [r7, #1]
 932:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   uint32_t tmpreg1 = 0, tmpreg2 = 0, tmpreg3 = 0;
 2869              		.loc 1 932 0
 2870 000e 4FF00003 		mov	r3, #0
 2871 0012 7B61     		str	r3, [r7, #20]
 2872 0014 4FF00003 		mov	r3, #0
 2873 0018 3B61     		str	r3, [r7, #16]
 2874 001a 4FF00003 		mov	r3, #0
 2875 001e FB60     		str	r3, [r7, #12]
 933:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Check the parameters */
 934:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 2876              		.loc 1 934 0
 2877 0020 7A68     		ldr	r2, [r7, #4]
 2878 0022 884B     		ldr	r3, .L255
 2879 0024 9A42     		cmp	r2, r3
 2880 0026 07D0     		beq	.L242
 2881              		.loc 1 934 0 is_stmt 0 discriminator 2
 2882 0028 7A68     		ldr	r2, [r7, #4]
 2883 002a 874B     		ldr	r3, .L255+4
 2884 002c 9A42     		cmp	r2, r3
 2885 002e 03D0     		beq	.L242
 2886              		.loc 1 934 0 discriminator 1
 2887 0030 7A68     		ldr	r2, [r7, #4]
 2888 0032 864B     		ldr	r3, .L255+8
 2889 0034 9A42     		cmp	r2, r3
 2890 0036 02D1     		bne	.L243
 2891              	.L242:
 2892 0038 4FF00103 		mov	r3, #1
 2893 003c 01E0     		b	.L244
 2894              	.L243:
 2895              		.loc 1 934 0 discriminator 3
 2896 003e 4FF00003 		mov	r3, #0
 2897              	.L244:
 2898              		.loc 1 934 0 discriminator 4
 2899 0042 1846     		mov	r0, r3
 2900 0044 FFF7FEFF 		bl	assert_param
 935:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_CHANNEL(ADC_Channel));
 2901              		.loc 1 935 0 is_stmt 1 discriminator 4
 2902 0048 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2903 004a 002B     		cmp	r3, #0
 2904 004c 32D0     		beq	.L245
 2905              		.loc 1 935 0 is_stmt 0 discriminator 2
 2906 004e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2907 0050 012B     		cmp	r3, #1
 2908 0052 2FD0     		beq	.L245
 2909              		.loc 1 935 0 discriminator 1
 2910 0054 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2911 0056 022B     		cmp	r3, #2
 2912 0058 2CD0     		beq	.L245
 2913              		.loc 1 935 0 discriminator 2
 2914 005a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2915 005c 032B     		cmp	r3, #3
 2916 005e 29D0     		beq	.L245
 2917              		.loc 1 935 0 discriminator 3
 2918 0060 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2919 0062 042B     		cmp	r3, #4
 2920 0064 26D0     		beq	.L245
 2921              		.loc 1 935 0 discriminator 4
 2922 0066 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2923 0068 052B     		cmp	r3, #5
 2924 006a 23D0     		beq	.L245
 2925              		.loc 1 935 0 discriminator 5
 2926 006c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2927 006e 062B     		cmp	r3, #6
 2928 0070 20D0     		beq	.L245
 2929              		.loc 1 935 0 discriminator 6
 2930 0072 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2931 0074 072B     		cmp	r3, #7
 2932 0076 1DD0     		beq	.L245
 2933              		.loc 1 935 0 discriminator 7
 2934 0078 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2935 007a 082B     		cmp	r3, #8
 2936 007c 1AD0     		beq	.L245
 2937              		.loc 1 935 0 discriminator 8
 2938 007e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2939 0080 092B     		cmp	r3, #9
 2940 0082 17D0     		beq	.L245
 2941              		.loc 1 935 0 discriminator 9
 2942 0084 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2943 0086 0A2B     		cmp	r3, #10
 2944 0088 14D0     		beq	.L245
 2945              		.loc 1 935 0 discriminator 10
 2946 008a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2947 008c 0B2B     		cmp	r3, #11
 2948 008e 11D0     		beq	.L245
 2949              		.loc 1 935 0 discriminator 11
 2950 0090 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2951 0092 0C2B     		cmp	r3, #12
 2952 0094 0ED0     		beq	.L245
 2953              		.loc 1 935 0 discriminator 12
 2954 0096 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2955 0098 0D2B     		cmp	r3, #13
 2956 009a 0BD0     		beq	.L245
 2957              		.loc 1 935 0 discriminator 13
 2958 009c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2959 009e 0E2B     		cmp	r3, #14
 2960 00a0 08D0     		beq	.L245
 2961              		.loc 1 935 0 discriminator 14
 2962 00a2 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2963 00a4 0F2B     		cmp	r3, #15
 2964 00a6 05D0     		beq	.L245
 2965              		.loc 1 935 0 discriminator 15
 2966 00a8 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2967 00aa 102B     		cmp	r3, #16
 2968 00ac 02D0     		beq	.L245
 2969              		.loc 1 935 0 discriminator 16
 2970 00ae FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2971 00b0 112B     		cmp	r3, #17
 2972 00b2 02D1     		bne	.L246
 2973              	.L245:
 2974              		.loc 1 935 0 discriminator 1
 2975 00b4 4FF00103 		mov	r3, #1
 2976 00b8 01E0     		b	.L247
 2977              	.L246:
 2978              		.loc 1 935 0 discriminator 3
 2979 00ba 4FF00003 		mov	r3, #0
 2980              	.L247:
 2981              		.loc 1 935 0 discriminator 4
 2982 00be 1846     		mov	r0, r3
 2983 00c0 FFF7FEFF 		bl	assert_param
 936:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_INJECTED_RANK(Rank));
 2984              		.loc 1 936 0 is_stmt 1 discriminator 4
 2985 00c4 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 2986 00c6 002B     		cmp	r3, #0
 2987 00c8 05D0     		beq	.L248
 2988              		.loc 1 936 0 is_stmt 0 discriminator 1
 2989 00ca BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 2990 00cc 042B     		cmp	r3, #4
 2991 00ce 02D8     		bhi	.L248
 2992              		.loc 1 936 0 discriminator 3
 2993 00d0 4FF00103 		mov	r3, #1
 2994 00d4 01E0     		b	.L249
 2995              	.L248:
 2996              		.loc 1 936 0 discriminator 2
 2997 00d6 4FF00003 		mov	r3, #0
 2998              	.L249:
 2999              		.loc 1 936 0 discriminator 4
 3000 00da 1846     		mov	r0, r3
 3001 00dc FFF7FEFF 		bl	assert_param
 937:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(ADC_SampleTime));
 3002              		.loc 1 937 0 is_stmt 1 discriminator 4
 3003 00e0 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 3004 00e2 002B     		cmp	r3, #0
 3005 00e4 14D0     		beq	.L250
 3006              		.loc 1 937 0 is_stmt 0 discriminator 2
 3007 00e6 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 3008 00e8 012B     		cmp	r3, #1
 3009 00ea 11D0     		beq	.L250
 3010              		.loc 1 937 0 discriminator 1
 3011 00ec 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 3012 00ee 022B     		cmp	r3, #2
 3013 00f0 0ED0     		beq	.L250
 3014              		.loc 1 937 0 discriminator 2
 3015 00f2 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 3016 00f4 032B     		cmp	r3, #3
 3017 00f6 0BD0     		beq	.L250
 3018              		.loc 1 937 0 discriminator 3
 3019 00f8 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 3020 00fa 042B     		cmp	r3, #4
 3021 00fc 08D0     		beq	.L250
 3022              		.loc 1 937 0 discriminator 4
 3023 00fe 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 3024 0100 052B     		cmp	r3, #5
 3025 0102 05D0     		beq	.L250
 3026              		.loc 1 937 0 discriminator 5
 3027 0104 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 3028 0106 062B     		cmp	r3, #6
 3029 0108 02D0     		beq	.L250
 3030              		.loc 1 937 0 discriminator 6
 3031 010a 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 3032 010c 072B     		cmp	r3, #7
 3033 010e 02D1     		bne	.L251
 3034              	.L250:
 3035              		.loc 1 937 0 discriminator 1
 3036 0110 4FF00103 		mov	r3, #1
 3037 0114 01E0     		b	.L252
 3038              	.L251:
 3039              		.loc 1 937 0 discriminator 3
 3040 0116 4FF00003 		mov	r3, #0
 3041              	.L252:
 3042              		.loc 1 937 0 discriminator 4
 3043 011a 1846     		mov	r0, r3
 3044 011c FFF7FEFF 		bl	assert_param
 938:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* if ADC_Channel_10 ... ADC_Channel_17 is selected */
 939:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   if (ADC_Channel > ADC_Channel_9)
 3045              		.loc 1 939 0 is_stmt 1 discriminator 4
 3046 0120 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3047 0122 092B     		cmp	r3, #9
 3048 0124 27D9     		bls	.L253
 940:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
 941:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Get the old register value */
 942:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     tmpreg1 = ADCx->SMPR1;
 3049              		.loc 1 942 0
 3050 0126 7B68     		ldr	r3, [r7, #4]
 3051 0128 DB68     		ldr	r3, [r3, #12]
 3052 012a 7B61     		str	r3, [r7, #20]
 943:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Calculate the mask to clear */
 944:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     tmpreg2 = SMPR1_SMP_Set << (3*(ADC_Channel - 10));
 3053              		.loc 1 944 0
 3054 012c FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 3055 012e 1346     		mov	r3, r2
 3056 0130 4FEA4303 		lsl	r3, r3, #1
 3057 0134 9B18     		adds	r3, r3, r2
 3058 0136 A3F11E03 		sub	r3, r3, #30
 3059 013a 4FF00702 		mov	r2, #7
 3060 013e 02FA03F3 		lsl	r3, r2, r3
 3061 0142 3B61     		str	r3, [r7, #16]
 945:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Clear the old channel sample time */
 946:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     tmpreg1 &= ~tmpreg2;
 3062              		.loc 1 946 0
 3063 0144 3B69     		ldr	r3, [r7, #16]
 3064 0146 6FEA0303 		mvn	r3, r3
 3065 014a 7A69     		ldr	r2, [r7, #20]
 3066 014c 1340     		ands	r3, r3, r2
 3067 014e 7B61     		str	r3, [r7, #20]
 947:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Calculate the mask to set */
 948:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     tmpreg2 = (uint32_t)ADC_SampleTime << (3*(ADC_Channel - 10));
 3068              		.loc 1 948 0
 3069 0150 7978     		ldrb	r1, [r7, #1]	@ zero_extendqisi2
 3070 0152 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 3071 0154 1346     		mov	r3, r2
 3072 0156 4FEA4303 		lsl	r3, r3, #1
 3073 015a 9B18     		adds	r3, r3, r2
 3074 015c A3F11E03 		sub	r3, r3, #30
 3075 0160 01FA03F3 		lsl	r3, r1, r3
 3076 0164 3B61     		str	r3, [r7, #16]
 949:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Set the new channel sample time */
 950:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     tmpreg1 |= tmpreg2;
 3077              		.loc 1 950 0
 3078 0166 7A69     		ldr	r2, [r7, #20]
 3079 0168 3B69     		ldr	r3, [r7, #16]
 3080 016a 1343     		orrs	r3, r3, r2
 3081 016c 7B61     		str	r3, [r7, #20]
 951:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Store the new register value */
 952:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     ADCx->SMPR1 = tmpreg1;
 3082              		.loc 1 952 0
 3083 016e 7B68     		ldr	r3, [r7, #4]
 3084 0170 7A69     		ldr	r2, [r7, #20]
 3085 0172 DA60     		str	r2, [r3, #12]
 3086 0174 22E0     		b	.L254
 3087              	.L253:
 953:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
 954:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   else /* ADC_Channel include in ADC_Channel_[0..9] */
 955:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
 956:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Get the old register value */
 957:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     tmpreg1 = ADCx->SMPR2;
 3088              		.loc 1 957 0
 3089 0176 7B68     		ldr	r3, [r7, #4]
 3090 0178 1B69     		ldr	r3, [r3, #16]
 3091 017a 7B61     		str	r3, [r7, #20]
 958:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Calculate the mask to clear */
 959:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     tmpreg2 = SMPR2_SMP_Set << (3 * ADC_Channel);
 3092              		.loc 1 959 0
 3093 017c FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 3094 017e 1346     		mov	r3, r2
 3095 0180 4FEA4303 		lsl	r3, r3, #1
 3096 0184 9B18     		adds	r3, r3, r2
 3097 0186 4FF00702 		mov	r2, #7
 3098 018a 02FA03F3 		lsl	r3, r2, r3
 3099 018e 3B61     		str	r3, [r7, #16]
 960:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Clear the old channel sample time */
 961:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     tmpreg1 &= ~tmpreg2;
 3100              		.loc 1 961 0
 3101 0190 3B69     		ldr	r3, [r7, #16]
 3102 0192 6FEA0303 		mvn	r3, r3
 3103 0196 7A69     		ldr	r2, [r7, #20]
 3104 0198 1340     		ands	r3, r3, r2
 3105 019a 7B61     		str	r3, [r7, #20]
 962:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Calculate the mask to set */
 963:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     tmpreg2 = (uint32_t)ADC_SampleTime << (3 * ADC_Channel);
 3106              		.loc 1 963 0
 3107 019c 7978     		ldrb	r1, [r7, #1]	@ zero_extendqisi2
 3108 019e FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 3109 01a0 1346     		mov	r3, r2
 3110 01a2 4FEA4303 		lsl	r3, r3, #1
 3111 01a6 9B18     		adds	r3, r3, r2
 3112 01a8 01FA03F3 		lsl	r3, r1, r3
 3113 01ac 3B61     		str	r3, [r7, #16]
 964:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Set the new channel sample time */
 965:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     tmpreg1 |= tmpreg2;
 3114              		.loc 1 965 0
 3115 01ae 7A69     		ldr	r2, [r7, #20]
 3116 01b0 3B69     		ldr	r3, [r7, #16]
 3117 01b2 1343     		orrs	r3, r3, r2
 3118 01b4 7B61     		str	r3, [r7, #20]
 966:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Store the new register value */
 967:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     ADCx->SMPR2 = tmpreg1;
 3119              		.loc 1 967 0
 3120 01b6 7B68     		ldr	r3, [r7, #4]
 3121 01b8 7A69     		ldr	r2, [r7, #20]
 3122 01ba 1A61     		str	r2, [r3, #16]
 3123              	.L254:
 968:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
 969:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Rank configuration */
 970:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Get the old register value */
 971:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   tmpreg1 = ADCx->JSQR;
 3124              		.loc 1 971 0
 3125 01bc 7B68     		ldr	r3, [r7, #4]
 3126 01be 9B6B     		ldr	r3, [r3, #56]
 3127 01c0 7B61     		str	r3, [r7, #20]
 972:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Get JL value: Number = JL+1 */
 973:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   tmpreg3 =  (tmpreg1 & JSQR_JL_Set)>> 20;
 3128              		.loc 1 973 0
 3129 01c2 7B69     		ldr	r3, [r7, #20]
 3130 01c4 03F44013 		and	r3, r3, #3145728
 3131 01c8 4FEA1353 		lsr	r3, r3, #20
 3132 01cc FB60     		str	r3, [r7, #12]
 974:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Calculate the mask to clear: ((Rank-1)+(4-JL-1)) */
 975:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   tmpreg2 = JSQR_JSQ_Set << (5 * (uint8_t)((Rank + 3) - (tmpreg3 + 1)));
 3133              		.loc 1 975 0
 3134 01ce FB68     		ldr	r3, [r7, #12]
 3135 01d0 DBB2     		uxtb	r3, r3
 3136 01d2 6FEA0303 		mvn	r3, r3
 3137 01d6 DAB2     		uxtb	r2, r3
 3138 01d8 BB78     		ldrb	r3, [r7, #2]
 3139 01da D318     		adds	r3, r2, r3
 3140 01dc DBB2     		uxtb	r3, r3
 3141 01de 03F10303 		add	r3, r3, #3
 3142 01e2 DBB2     		uxtb	r3, r3
 3143 01e4 1A46     		mov	r2, r3
 3144 01e6 1346     		mov	r3, r2
 3145 01e8 4FEA8303 		lsl	r3, r3, #2
 3146 01ec 9B18     		adds	r3, r3, r2
 3147 01ee 4FF01F02 		mov	r2, #31
 3148 01f2 02FA03F3 		lsl	r3, r2, r3
 3149 01f6 3B61     		str	r3, [r7, #16]
 976:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Clear the old JSQx bits for the selected rank */
 977:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   tmpreg1 &= ~tmpreg2;
 3150              		.loc 1 977 0
 3151 01f8 3B69     		ldr	r3, [r7, #16]
 3152 01fa 6FEA0303 		mvn	r3, r3
 3153 01fe 7A69     		ldr	r2, [r7, #20]
 3154 0200 1340     		ands	r3, r3, r2
 3155 0202 7B61     		str	r3, [r7, #20]
 978:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Calculate the mask to set: ((Rank-1)+(4-JL-1)) */
 979:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   tmpreg2 = (uint32_t)ADC_Channel << (5 * (uint8_t)((Rank + 3) - (tmpreg3 + 1)));
 3156              		.loc 1 979 0
 3157 0204 F978     		ldrb	r1, [r7, #3]	@ zero_extendqisi2
 3158 0206 FB68     		ldr	r3, [r7, #12]
 3159 0208 DBB2     		uxtb	r3, r3
 3160 020a 6FEA0303 		mvn	r3, r3
 3161 020e DAB2     		uxtb	r2, r3
 3162 0210 BB78     		ldrb	r3, [r7, #2]
 3163 0212 D318     		adds	r3, r2, r3
 3164 0214 DBB2     		uxtb	r3, r3
 3165 0216 03F10303 		add	r3, r3, #3
 3166 021a DBB2     		uxtb	r3, r3
 3167 021c 1A46     		mov	r2, r3
 3168 021e 1346     		mov	r3, r2
 3169 0220 4FEA8303 		lsl	r3, r3, #2
 3170 0224 9B18     		adds	r3, r3, r2
 3171 0226 01FA03F3 		lsl	r3, r1, r3
 3172 022a 3B61     		str	r3, [r7, #16]
 980:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Set the JSQx bits for the selected rank */
 981:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   tmpreg1 |= tmpreg2;
 3173              		.loc 1 981 0
 3174 022c 7A69     		ldr	r2, [r7, #20]
 3175 022e 3B69     		ldr	r3, [r7, #16]
 3176 0230 1343     		orrs	r3, r3, r2
 3177 0232 7B61     		str	r3, [r7, #20]
 982:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Store the new register value */
 983:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   ADCx->JSQR = tmpreg1;
 3178              		.loc 1 983 0
 3179 0234 7B68     		ldr	r3, [r7, #4]
 3180 0236 7A69     		ldr	r2, [r7, #20]
 3181 0238 9A63     		str	r2, [r3, #56]
 984:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** }
 3182              		.loc 1 984 0
 3183 023a 07F11807 		add	r7, r7, #24
 3184 023e BD46     		mov	sp, r7
 3185 0240 80BD     		pop	{r7, pc}
 3186              	.L256:
 3187 0242 00BF     		.align	2
 3188              	.L255:
 3189 0244 00240140 		.word	1073816576
 3190 0248 00280140 		.word	1073817600
 3191 024c 003C0140 		.word	1073822720
 3192              		.cfi_endproc
 3193              	.LFE53:
 3195              		.section	.text.ADC_InjectedSequencerLengthConfig,"ax",%progbits
 3196              		.align	2
 3197              		.global	ADC_InjectedSequencerLengthConfig
 3198              		.thumb
 3199              		.thumb_func
 3201              	ADC_InjectedSequencerLengthConfig:
 3202              	.LFB54:
 985:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** 
 986:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** /**
 987:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @brief  Configures the sequencer length for injected channels
 988:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 989:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  Length: The sequencer length. 
 990:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *   This parameter must be a number between 1 to 4.
 991:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @retval None
 992:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
 993:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** void ADC_InjectedSequencerLengthConfig(ADC_TypeDef* ADCx, uint8_t Length)
 994:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** {
 3203              		.loc 1 994 0
 3204              		.cfi_startproc
 3205              		@ args = 0, pretend = 0, frame = 16
 3206              		@ frame_needed = 1, uses_anonymous_args = 0
 3207 0000 80B5     		push	{r7, lr}
 3208              	.LCFI74:
 3209              		.cfi_def_cfa_offset 8
 3210              		.cfi_offset 7, -8
 3211              		.cfi_offset 14, -4
 3212 0002 84B0     		sub	sp, sp, #16
 3213              	.LCFI75:
 3214              		.cfi_def_cfa_offset 24
 3215 0004 00AF     		add	r7, sp, #0
 3216              	.LCFI76:
 3217              		.cfi_def_cfa_register 7
 3218 0006 7860     		str	r0, [r7, #4]
 3219 0008 0B46     		mov	r3, r1
 3220 000a FB70     		strb	r3, [r7, #3]
 995:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   uint32_t tmpreg1 = 0;
 3221              		.loc 1 995 0
 3222 000c 4FF00003 		mov	r3, #0
 3223 0010 FB60     		str	r3, [r7, #12]
 996:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   uint32_t tmpreg2 = 0;
 3224              		.loc 1 996 0
 3225 0012 4FF00003 		mov	r3, #0
 3226 0016 BB60     		str	r3, [r7, #8]
 997:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Check the parameters */
 998:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 3227              		.loc 1 998 0
 3228 0018 7A68     		ldr	r2, [r7, #4]
 3229 001a 1C4B     		ldr	r3, .L263
 3230 001c 9A42     		cmp	r2, r3
 3231 001e 07D0     		beq	.L258
 3232              		.loc 1 998 0 is_stmt 0 discriminator 2
 3233 0020 7A68     		ldr	r2, [r7, #4]
 3234 0022 1B4B     		ldr	r3, .L263+4
 3235 0024 9A42     		cmp	r2, r3
 3236 0026 03D0     		beq	.L258
 3237              		.loc 1 998 0 discriminator 1
 3238 0028 7A68     		ldr	r2, [r7, #4]
 3239 002a 1A4B     		ldr	r3, .L263+8
 3240 002c 9A42     		cmp	r2, r3
 3241 002e 02D1     		bne	.L259
 3242              	.L258:
 3243 0030 4FF00103 		mov	r3, #1
 3244 0034 01E0     		b	.L260
 3245              	.L259:
 3246              		.loc 1 998 0 discriminator 3
 3247 0036 4FF00003 		mov	r3, #0
 3248              	.L260:
 3249              		.loc 1 998 0 discriminator 4
 3250 003a 1846     		mov	r0, r3
 3251 003c FFF7FEFF 		bl	assert_param
 999:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_INJECTED_LENGTH(Length));
 3252              		.loc 1 999 0 is_stmt 1 discriminator 4
 3253 0040 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3254 0042 002B     		cmp	r3, #0
 3255 0044 05D0     		beq	.L261
 3256              		.loc 1 999 0 is_stmt 0 discriminator 1
 3257 0046 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3258 0048 042B     		cmp	r3, #4
 3259 004a 02D8     		bhi	.L261
 3260              		.loc 1 999 0 discriminator 3
 3261 004c 4FF00103 		mov	r3, #1
 3262 0050 01E0     		b	.L262
 3263              	.L261:
 3264              		.loc 1 999 0 discriminator 2
 3265 0052 4FF00003 		mov	r3, #0
 3266              	.L262:
 3267              		.loc 1 999 0 discriminator 4
 3268 0056 1846     		mov	r0, r3
 3269 0058 FFF7FEFF 		bl	assert_param
1000:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   
1001:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Get the old register value */
1002:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   tmpreg1 = ADCx->JSQR;
 3270              		.loc 1 1002 0 is_stmt 1 discriminator 4
 3271 005c 7B68     		ldr	r3, [r7, #4]
 3272 005e 9B6B     		ldr	r3, [r3, #56]
 3273 0060 FB60     		str	r3, [r7, #12]
1003:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Clear the old injected sequnence lenght JL bits */
1004:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   tmpreg1 &= JSQR_JL_Reset;
 3274              		.loc 1 1004 0 discriminator 4
 3275 0062 FB68     		ldr	r3, [r7, #12]
 3276 0064 23F44013 		bic	r3, r3, #3145728
 3277 0068 FB60     		str	r3, [r7, #12]
1005:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Set the injected sequnence lenght JL bits */
1006:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   tmpreg2 = Length - 1; 
 3278              		.loc 1 1006 0 discriminator 4
 3279 006a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3280 006c 03F1FF33 		add	r3, r3, #-1
 3281 0070 BB60     		str	r3, [r7, #8]
1007:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   tmpreg1 |= tmpreg2 << 20;
 3282              		.loc 1 1007 0 discriminator 4
 3283 0072 BB68     		ldr	r3, [r7, #8]
 3284 0074 4FEA0353 		lsl	r3, r3, #20
 3285 0078 FA68     		ldr	r2, [r7, #12]
 3286 007a 1343     		orrs	r3, r3, r2
 3287 007c FB60     		str	r3, [r7, #12]
1008:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Store the new register value */
1009:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   ADCx->JSQR = tmpreg1;
 3288              		.loc 1 1009 0 discriminator 4
 3289 007e 7B68     		ldr	r3, [r7, #4]
 3290 0080 FA68     		ldr	r2, [r7, #12]
 3291 0082 9A63     		str	r2, [r3, #56]
1010:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** }
 3292              		.loc 1 1010 0 discriminator 4
 3293 0084 07F11007 		add	r7, r7, #16
 3294 0088 BD46     		mov	sp, r7
 3295 008a 80BD     		pop	{r7, pc}
 3296              	.L264:
 3297              		.align	2
 3298              	.L263:
 3299 008c 00240140 		.word	1073816576
 3300 0090 00280140 		.word	1073817600
 3301 0094 003C0140 		.word	1073822720
 3302              		.cfi_endproc
 3303              	.LFE54:
 3305              		.section	.text.ADC_SetInjectedOffset,"ax",%progbits
 3306              		.align	2
 3307              		.global	ADC_SetInjectedOffset
 3308              		.thumb
 3309              		.thumb_func
 3311              	ADC_SetInjectedOffset:
 3312              	.LFB55:
1011:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** 
1012:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** /**
1013:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @brief  Set the injected channels conversion value offset
1014:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1015:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADC_InjectedChannel: the ADC injected channel to set its offset. 
1016:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
1017:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_InjectedChannel_1: Injected Channel1 selected
1018:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_InjectedChannel_2: Injected Channel2 selected
1019:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_InjectedChannel_3: Injected Channel3 selected
1020:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_InjectedChannel_4: Injected Channel4 selected
1021:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  Offset: the offset value for the selected ADC injected channel
1022:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *   This parameter must be a 12bit value.
1023:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @retval None
1024:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
1025:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** void ADC_SetInjectedOffset(ADC_TypeDef* ADCx, uint8_t ADC_InjectedChannel, uint16_t Offset)
1026:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** {
 3313              		.loc 1 1026 0
 3314              		.cfi_startproc
 3315              		@ args = 0, pretend = 0, frame = 16
 3316              		@ frame_needed = 1, uses_anonymous_args = 0
 3317 0000 80B5     		push	{r7, lr}
 3318              	.LCFI77:
 3319              		.cfi_def_cfa_offset 8
 3320              		.cfi_offset 7, -8
 3321              		.cfi_offset 14, -4
 3322 0002 84B0     		sub	sp, sp, #16
 3323              	.LCFI78:
 3324              		.cfi_def_cfa_offset 24
 3325 0004 00AF     		add	r7, sp, #0
 3326              	.LCFI79:
 3327              		.cfi_def_cfa_register 7
 3328 0006 7860     		str	r0, [r7, #4]
 3329 0008 1346     		mov	r3, r2
 3330 000a 0A46     		mov	r2, r1
 3331 000c FA70     		strb	r2, [r7, #3]
 3332 000e 3B80     		strh	r3, [r7, #0]	@ movhi
1027:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   __IO uint32_t tmp = 0;
 3333              		.loc 1 1027 0
 3334 0010 4FF00003 		mov	r3, #0
 3335 0014 FB60     		str	r3, [r7, #12]
1028:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   
1029:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Check the parameters */
1030:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 3336              		.loc 1 1030 0
 3337 0016 7A68     		ldr	r2, [r7, #4]
 3338 0018 1F4B     		ldr	r3, .L272
 3339 001a 9A42     		cmp	r2, r3
 3340 001c 07D0     		beq	.L266
 3341              		.loc 1 1030 0 is_stmt 0 discriminator 2
 3342 001e 7A68     		ldr	r2, [r7, #4]
 3343 0020 1E4B     		ldr	r3, .L272+4
 3344 0022 9A42     		cmp	r2, r3
 3345 0024 03D0     		beq	.L266
 3346              		.loc 1 1030 0 discriminator 1
 3347 0026 7A68     		ldr	r2, [r7, #4]
 3348 0028 1D4B     		ldr	r3, .L272+8
 3349 002a 9A42     		cmp	r2, r3
 3350 002c 02D1     		bne	.L267
 3351              	.L266:
 3352 002e 4FF00103 		mov	r3, #1
 3353 0032 01E0     		b	.L268
 3354              	.L267:
 3355              		.loc 1 1030 0 discriminator 3
 3356 0034 4FF00003 		mov	r3, #0
 3357              	.L268:
 3358              		.loc 1 1030 0 discriminator 4
 3359 0038 1846     		mov	r0, r3
 3360 003a FFF7FEFF 		bl	assert_param
1031:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_INJECTED_CHANNEL(ADC_InjectedChannel));
 3361              		.loc 1 1031 0 is_stmt 1 discriminator 4
 3362 003e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3363 0040 142B     		cmp	r3, #20
 3364 0042 08D0     		beq	.L269
 3365              		.loc 1 1031 0 is_stmt 0 discriminator 2
 3366 0044 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3367 0046 182B     		cmp	r3, #24
 3368 0048 05D0     		beq	.L269
 3369              		.loc 1 1031 0 discriminator 1
 3370 004a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3371 004c 1C2B     		cmp	r3, #28
 3372 004e 02D0     		beq	.L269
 3373              		.loc 1 1031 0 discriminator 2
 3374 0050 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3375 0052 202B     		cmp	r3, #32
 3376 0054 02D1     		bne	.L270
 3377              	.L269:
 3378              		.loc 1 1031 0 discriminator 1
 3379 0056 4FF00103 		mov	r3, #1
 3380 005a 01E0     		b	.L271
 3381              	.L270:
 3382              		.loc 1 1031 0 discriminator 3
 3383 005c 4FF00003 		mov	r3, #0
 3384              	.L271:
 3385              		.loc 1 1031 0 discriminator 4
 3386 0060 1846     		mov	r0, r3
 3387 0062 FFF7FEFF 		bl	assert_param
1032:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_OFFSET(Offset));  
 3388              		.loc 1 1032 0 is_stmt 1 discriminator 4
 3389 0066 3A88     		ldrh	r2, [r7, #0]
 3390 0068 40F6FF73 		movw	r3, #4095
 3391 006c 9A42     		cmp	r2, r3
 3392 006e 8CBF     		ite	hi
 3393 0070 0023     		movhi	r3, #0
 3394 0072 0123     		movls	r3, #1
 3395 0074 DBB2     		uxtb	r3, r3
 3396 0076 1846     		mov	r0, r3
 3397 0078 FFF7FEFF 		bl	assert_param
1033:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   
1034:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   tmp = (uint32_t)ADCx;
 3398              		.loc 1 1034 0 discriminator 4
 3399 007c 7B68     		ldr	r3, [r7, #4]
 3400 007e FB60     		str	r3, [r7, #12]
1035:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   tmp += ADC_InjectedChannel;
 3401              		.loc 1 1035 0 discriminator 4
 3402 0080 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 3403 0082 FB68     		ldr	r3, [r7, #12]
 3404 0084 D318     		adds	r3, r2, r3
 3405 0086 FB60     		str	r3, [r7, #12]
1036:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   
1037:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Set the selected injected channel data offset */
1038:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *(__IO uint32_t *) tmp = (uint32_t)Offset;
 3406              		.loc 1 1038 0 discriminator 4
 3407 0088 FB68     		ldr	r3, [r7, #12]
 3408 008a 3A88     		ldrh	r2, [r7, #0]
 3409 008c 1A60     		str	r2, [r3, #0]
1039:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** }
 3410              		.loc 1 1039 0 discriminator 4
 3411 008e 07F11007 		add	r7, r7, #16
 3412 0092 BD46     		mov	sp, r7
 3413 0094 80BD     		pop	{r7, pc}
 3414              	.L273:
 3415 0096 00BF     		.align	2
 3416              	.L272:
 3417 0098 00240140 		.word	1073816576
 3418 009c 00280140 		.word	1073817600
 3419 00a0 003C0140 		.word	1073822720
 3420              		.cfi_endproc
 3421              	.LFE55:
 3423              		.section	.text.ADC_GetInjectedConversionValue,"ax",%progbits
 3424              		.align	2
 3425              		.global	ADC_GetInjectedConversionValue
 3426              		.thumb
 3427              		.thumb_func
 3429              	ADC_GetInjectedConversionValue:
 3430              	.LFB56:
1040:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** 
1041:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** /**
1042:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @brief  Returns the ADC injected channel conversion result
1043:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1044:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADC_InjectedChannel: the converted ADC injected channel.
1045:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
1046:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_InjectedChannel_1: Injected Channel1 selected
1047:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_InjectedChannel_2: Injected Channel2 selected
1048:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_InjectedChannel_3: Injected Channel3 selected
1049:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_InjectedChannel_4: Injected Channel4 selected
1050:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @retval The Data conversion value.
1051:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
1052:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** uint16_t ADC_GetInjectedConversionValue(ADC_TypeDef* ADCx, uint8_t ADC_InjectedChannel)
1053:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** {
 3431              		.loc 1 1053 0
 3432              		.cfi_startproc
 3433              		@ args = 0, pretend = 0, frame = 16
 3434              		@ frame_needed = 1, uses_anonymous_args = 0
 3435 0000 80B5     		push	{r7, lr}
 3436              	.LCFI80:
 3437              		.cfi_def_cfa_offset 8
 3438              		.cfi_offset 7, -8
 3439              		.cfi_offset 14, -4
 3440 0002 84B0     		sub	sp, sp, #16
 3441              	.LCFI81:
 3442              		.cfi_def_cfa_offset 24
 3443 0004 00AF     		add	r7, sp, #0
 3444              	.LCFI82:
 3445              		.cfi_def_cfa_register 7
 3446 0006 7860     		str	r0, [r7, #4]
 3447 0008 0B46     		mov	r3, r1
 3448 000a FB70     		strb	r3, [r7, #3]
1054:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   __IO uint32_t tmp = 0;
 3449              		.loc 1 1054 0
 3450 000c 4FF00003 		mov	r3, #0
 3451 0010 FB60     		str	r3, [r7, #12]
1055:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   
1056:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Check the parameters */
1057:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 3452              		.loc 1 1057 0
 3453 0012 7A68     		ldr	r2, [r7, #4]
 3454 0014 1B4B     		ldr	r3, .L282
 3455 0016 9A42     		cmp	r2, r3
 3456 0018 07D0     		beq	.L275
 3457              		.loc 1 1057 0 is_stmt 0 discriminator 2
 3458 001a 7A68     		ldr	r2, [r7, #4]
 3459 001c 1A4B     		ldr	r3, .L282+4
 3460 001e 9A42     		cmp	r2, r3
 3461 0020 03D0     		beq	.L275
 3462              		.loc 1 1057 0 discriminator 1
 3463 0022 7A68     		ldr	r2, [r7, #4]
 3464 0024 194B     		ldr	r3, .L282+8
 3465 0026 9A42     		cmp	r2, r3
 3466 0028 02D1     		bne	.L276
 3467              	.L275:
 3468 002a 4FF00103 		mov	r3, #1
 3469 002e 01E0     		b	.L277
 3470              	.L276:
 3471              		.loc 1 1057 0 discriminator 3
 3472 0030 4FF00003 		mov	r3, #0
 3473              	.L277:
 3474              		.loc 1 1057 0 discriminator 4
 3475 0034 1846     		mov	r0, r3
 3476 0036 FFF7FEFF 		bl	assert_param
1058:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_INJECTED_CHANNEL(ADC_InjectedChannel));
 3477              		.loc 1 1058 0 is_stmt 1 discriminator 4
 3478 003a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3479 003c 142B     		cmp	r3, #20
 3480 003e 08D0     		beq	.L278
 3481              		.loc 1 1058 0 is_stmt 0 discriminator 2
 3482 0040 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3483 0042 182B     		cmp	r3, #24
 3484 0044 05D0     		beq	.L278
 3485              		.loc 1 1058 0 discriminator 1
 3486 0046 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3487 0048 1C2B     		cmp	r3, #28
 3488 004a 02D0     		beq	.L278
 3489              		.loc 1 1058 0 discriminator 2
 3490 004c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3491 004e 202B     		cmp	r3, #32
 3492 0050 02D1     		bne	.L279
 3493              	.L278:
 3494              		.loc 1 1058 0 discriminator 1
 3495 0052 4FF00103 		mov	r3, #1
 3496 0056 01E0     		b	.L280
 3497              	.L279:
 3498              		.loc 1 1058 0 discriminator 3
 3499 0058 4FF00003 		mov	r3, #0
 3500              	.L280:
 3501              		.loc 1 1058 0 discriminator 4
 3502 005c 1846     		mov	r0, r3
 3503 005e FFF7FEFF 		bl	assert_param
1059:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** 
1060:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   tmp = (uint32_t)ADCx;
 3504              		.loc 1 1060 0 is_stmt 1 discriminator 4
 3505 0062 7B68     		ldr	r3, [r7, #4]
 3506 0064 FB60     		str	r3, [r7, #12]
1061:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   tmp += ADC_InjectedChannel + JDR_Offset;
 3507              		.loc 1 1061 0 discriminator 4
 3508 0066 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 3509 0068 FB68     		ldr	r3, [r7, #12]
 3510 006a D318     		adds	r3, r2, r3
 3511 006c 03F12803 		add	r3, r3, #40
 3512 0070 FB60     		str	r3, [r7, #12]
1062:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   
1063:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Returns the selected injected channel conversion data value */
1064:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   return (uint16_t) (*(__IO uint32_t*)  tmp);   
 3513              		.loc 1 1064 0 discriminator 4
 3514 0072 FB68     		ldr	r3, [r7, #12]
 3515 0074 1B68     		ldr	r3, [r3, #0]
 3516 0076 9BB2     		uxth	r3, r3
1065:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** }
 3517              		.loc 1 1065 0 discriminator 4
 3518 0078 1846     		mov	r0, r3
 3519 007a 07F11007 		add	r7, r7, #16
 3520 007e BD46     		mov	sp, r7
 3521 0080 80BD     		pop	{r7, pc}
 3522              	.L283:
 3523 0082 00BF     		.align	2
 3524              	.L282:
 3525 0084 00240140 		.word	1073816576
 3526 0088 00280140 		.word	1073817600
 3527 008c 003C0140 		.word	1073822720
 3528              		.cfi_endproc
 3529              	.LFE56:
 3531              		.section	.text.ADC_AnalogWatchdogCmd,"ax",%progbits
 3532              		.align	2
 3533              		.global	ADC_AnalogWatchdogCmd
 3534              		.thumb
 3535              		.thumb_func
 3537              	ADC_AnalogWatchdogCmd:
 3538              	.LFB57:
1066:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** 
1067:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** /**
1068:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the analog watchdog on single/all regular
1069:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *         or injected channels
1070:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1071:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADC_AnalogWatchdog: the ADC analog watchdog configuration.
1072:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
1073:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_AnalogWatchdog_SingleRegEnable: Analog watchdog on a single regular channel
1074:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_AnalogWatchdog_SingleInjecEnable: Analog watchdog on a single injected channel
1075:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_AnalogWatchdog_SingleRegOrInjecEnable: Analog watchdog on a single regular or inje
1076:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_AnalogWatchdog_AllRegEnable: Analog watchdog on  all regular channel
1077:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_AnalogWatchdog_AllInjecEnable: Analog watchdog on  all injected channel
1078:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_AnalogWatchdog_AllRegAllInjecEnable: Analog watchdog on all regular and injected c
1079:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_AnalogWatchdog_None: No channel guarded by the analog watchdog
1080:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @retval None	  
1081:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
1082:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** void ADC_AnalogWatchdogCmd(ADC_TypeDef* ADCx, uint32_t ADC_AnalogWatchdog)
1083:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** {
 3539              		.loc 1 1083 0
 3540              		.cfi_startproc
 3541              		@ args = 0, pretend = 0, frame = 16
 3542              		@ frame_needed = 1, uses_anonymous_args = 0
 3543 0000 80B5     		push	{r7, lr}
 3544              	.LCFI83:
 3545              		.cfi_def_cfa_offset 8
 3546              		.cfi_offset 7, -8
 3547              		.cfi_offset 14, -4
 3548 0002 84B0     		sub	sp, sp, #16
 3549              	.LCFI84:
 3550              		.cfi_def_cfa_offset 24
 3551 0004 00AF     		add	r7, sp, #0
 3552              	.LCFI85:
 3553              		.cfi_def_cfa_register 7
 3554 0006 7860     		str	r0, [r7, #4]
 3555 0008 3960     		str	r1, [r7, #0]
1084:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   uint32_t tmpreg = 0;
 3556              		.loc 1 1084 0
 3557 000a 4FF00003 		mov	r3, #0
 3558 000e FB60     		str	r3, [r7, #12]
1085:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Check the parameters */
1086:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 3559              		.loc 1 1086 0
 3560 0010 7A68     		ldr	r2, [r7, #4]
 3561 0012 254B     		ldr	r3, .L291
 3562 0014 9A42     		cmp	r2, r3
 3563 0016 07D0     		beq	.L285
 3564              		.loc 1 1086 0 is_stmt 0 discriminator 2
 3565 0018 7A68     		ldr	r2, [r7, #4]
 3566 001a 244B     		ldr	r3, .L291+4
 3567 001c 9A42     		cmp	r2, r3
 3568 001e 03D0     		beq	.L285
 3569              		.loc 1 1086 0 discriminator 1
 3570 0020 7A68     		ldr	r2, [r7, #4]
 3571 0022 234B     		ldr	r3, .L291+8
 3572 0024 9A42     		cmp	r2, r3
 3573 0026 02D1     		bne	.L286
 3574              	.L285:
 3575 0028 4FF00103 		mov	r3, #1
 3576 002c 01E0     		b	.L287
 3577              	.L286:
 3578              		.loc 1 1086 0 discriminator 3
 3579 002e 4FF00003 		mov	r3, #0
 3580              	.L287:
 3581              		.loc 1 1086 0 discriminator 4
 3582 0032 1846     		mov	r0, r3
 3583 0034 FFF7FEFF 		bl	assert_param
1087:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG(ADC_AnalogWatchdog));
 3584              		.loc 1 1087 0 is_stmt 1 discriminator 4
 3585 0038 3A68     		ldr	r2, [r7, #0]
 3586 003a 1E4B     		ldr	r3, .L291+12
 3587 003c 9A42     		cmp	r2, r3
 3588 003e 16D0     		beq	.L288
 3589              		.loc 1 1087 0 is_stmt 0 discriminator 2
 3590 0040 3A68     		ldr	r2, [r7, #0]
 3591 0042 1D4B     		ldr	r3, .L291+16
 3592 0044 9A42     		cmp	r2, r3
 3593 0046 12D0     		beq	.L288
 3594              		.loc 1 1087 0 discriminator 1
 3595 0048 3A68     		ldr	r2, [r7, #0]
 3596 004a 1C4B     		ldr	r3, .L291+20
 3597 004c 9A42     		cmp	r2, r3
 3598 004e 0ED0     		beq	.L288
 3599              		.loc 1 1087 0 discriminator 2
 3600 0050 3B68     		ldr	r3, [r7, #0]
 3601 0052 B3F5000F 		cmp	r3, #8388608
 3602 0056 0AD0     		beq	.L288
 3603              		.loc 1 1087 0 discriminator 3
 3604 0058 3B68     		ldr	r3, [r7, #0]
 3605 005a B3F5800F 		cmp	r3, #4194304
 3606 005e 06D0     		beq	.L288
 3607              		.loc 1 1087 0 discriminator 4
 3608 0060 3B68     		ldr	r3, [r7, #0]
 3609 0062 B3F5400F 		cmp	r3, #12582912
 3610 0066 02D0     		beq	.L288
 3611              		.loc 1 1087 0 discriminator 5
 3612 0068 3B68     		ldr	r3, [r7, #0]
 3613 006a 002B     		cmp	r3, #0
 3614 006c 02D1     		bne	.L289
 3615              	.L288:
 3616              		.loc 1 1087 0 discriminator 1
 3617 006e 4FF00103 		mov	r3, #1
 3618 0072 01E0     		b	.L290
 3619              	.L289:
 3620              		.loc 1 1087 0 discriminator 3
 3621 0074 4FF00003 		mov	r3, #0
 3622              	.L290:
 3623              		.loc 1 1087 0 discriminator 4
 3624 0078 1846     		mov	r0, r3
 3625 007a FFF7FEFF 		bl	assert_param
1088:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Get the old register value */
1089:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   tmpreg = ADCx->CR1;
 3626              		.loc 1 1089 0 is_stmt 1 discriminator 4
 3627 007e 7B68     		ldr	r3, [r7, #4]
 3628 0080 5B68     		ldr	r3, [r3, #4]
 3629 0082 FB60     		str	r3, [r7, #12]
1090:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Clear AWDEN, AWDENJ and AWDSGL bits */
1091:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   tmpreg &= CR1_AWDMode_Reset;
 3630              		.loc 1 1091 0 discriminator 4
 3631 0084 FB68     		ldr	r3, [r7, #12]
 3632 0086 23F44003 		bic	r3, r3, #12582912
 3633 008a 23F40073 		bic	r3, r3, #512
 3634 008e FB60     		str	r3, [r7, #12]
1092:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Set the analog watchdog enable mode */
1093:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   tmpreg |= ADC_AnalogWatchdog;
 3635              		.loc 1 1093 0 discriminator 4
 3636 0090 FA68     		ldr	r2, [r7, #12]
 3637 0092 3B68     		ldr	r3, [r7, #0]
 3638 0094 1343     		orrs	r3, r3, r2
 3639 0096 FB60     		str	r3, [r7, #12]
1094:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Store the new register value */
1095:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   ADCx->CR1 = tmpreg;
 3640              		.loc 1 1095 0 discriminator 4
 3641 0098 7B68     		ldr	r3, [r7, #4]
 3642 009a FA68     		ldr	r2, [r7, #12]
 3643 009c 5A60     		str	r2, [r3, #4]
1096:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** }
 3644              		.loc 1 1096 0 discriminator 4
 3645 009e 07F11007 		add	r7, r7, #16
 3646 00a2 BD46     		mov	sp, r7
 3647 00a4 80BD     		pop	{r7, pc}
 3648              	.L292:
 3649 00a6 00BF     		.align	2
 3650              	.L291:
 3651 00a8 00240140 		.word	1073816576
 3652 00ac 00280140 		.word	1073817600
 3653 00b0 003C0140 		.word	1073822720
 3654 00b4 00028000 		.word	8389120
 3655 00b8 00024000 		.word	4194816
 3656 00bc 0002C000 		.word	12583424
 3657              		.cfi_endproc
 3658              	.LFE57:
 3660              		.section	.text.ADC_AnalogWatchdogThresholdsConfig,"ax",%progbits
 3661              		.align	2
 3662              		.global	ADC_AnalogWatchdogThresholdsConfig
 3663              		.thumb
 3664              		.thumb_func
 3666              	ADC_AnalogWatchdogThresholdsConfig:
 3667              	.LFB58:
1097:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** 
1098:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** /**
1099:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @brief  Configures the high and low thresholds of the analog watchdog.
1100:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1101:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  HighThreshold: the ADC analog watchdog High threshold value.
1102:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *   This parameter must be a 12bit value.
1103:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  LowThreshold: the ADC analog watchdog Low threshold value.
1104:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *   This parameter must be a 12bit value.
1105:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @retval None
1106:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
1107:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** void ADC_AnalogWatchdogThresholdsConfig(ADC_TypeDef* ADCx, uint16_t HighThreshold,
1108:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****                                         uint16_t LowThreshold)
1109:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** {
 3668              		.loc 1 1109 0
 3669              		.cfi_startproc
 3670              		@ args = 0, pretend = 0, frame = 8
 3671              		@ frame_needed = 1, uses_anonymous_args = 0
 3672 0000 80B5     		push	{r7, lr}
 3673              	.LCFI86:
 3674              		.cfi_def_cfa_offset 8
 3675              		.cfi_offset 7, -8
 3676              		.cfi_offset 14, -4
 3677 0002 82B0     		sub	sp, sp, #8
 3678              	.LCFI87:
 3679              		.cfi_def_cfa_offset 16
 3680 0004 00AF     		add	r7, sp, #0
 3681              	.LCFI88:
 3682              		.cfi_def_cfa_register 7
 3683 0006 7860     		str	r0, [r7, #4]
 3684 0008 1346     		mov	r3, r2
 3685 000a 0A46     		mov	r2, r1	@ movhi
 3686 000c 7A80     		strh	r2, [r7, #2]	@ movhi
 3687 000e 3B80     		strh	r3, [r7, #0]	@ movhi
1110:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Check the parameters */
1111:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 3688              		.loc 1 1111 0
 3689 0010 7A68     		ldr	r2, [r7, #4]
 3690 0012 194B     		ldr	r3, .L297
 3691 0014 9A42     		cmp	r2, r3
 3692 0016 07D0     		beq	.L294
 3693              		.loc 1 1111 0 is_stmt 0 discriminator 2
 3694 0018 7A68     		ldr	r2, [r7, #4]
 3695 001a 184B     		ldr	r3, .L297+4
 3696 001c 9A42     		cmp	r2, r3
 3697 001e 03D0     		beq	.L294
 3698              		.loc 1 1111 0 discriminator 1
 3699 0020 7A68     		ldr	r2, [r7, #4]
 3700 0022 174B     		ldr	r3, .L297+8
 3701 0024 9A42     		cmp	r2, r3
 3702 0026 02D1     		bne	.L295
 3703              	.L294:
 3704 0028 4FF00103 		mov	r3, #1
 3705 002c 01E0     		b	.L296
 3706              	.L295:
 3707              		.loc 1 1111 0 discriminator 3
 3708 002e 4FF00003 		mov	r3, #0
 3709              	.L296:
 3710              		.loc 1 1111 0 discriminator 4
 3711 0032 1846     		mov	r0, r3
 3712 0034 FFF7FEFF 		bl	assert_param
1112:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_THRESHOLD(HighThreshold));
 3713              		.loc 1 1112 0 is_stmt 1 discriminator 4
 3714 0038 7A88     		ldrh	r2, [r7, #2]
 3715 003a 40F6FF73 		movw	r3, #4095
 3716 003e 9A42     		cmp	r2, r3
 3717 0040 8CBF     		ite	hi
 3718 0042 0023     		movhi	r3, #0
 3719 0044 0123     		movls	r3, #1
 3720 0046 DBB2     		uxtb	r3, r3
 3721 0048 1846     		mov	r0, r3
 3722 004a FFF7FEFF 		bl	assert_param
1113:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_THRESHOLD(LowThreshold));
 3723              		.loc 1 1113 0 discriminator 4
 3724 004e 3A88     		ldrh	r2, [r7, #0]
 3725 0050 40F6FF73 		movw	r3, #4095
 3726 0054 9A42     		cmp	r2, r3
 3727 0056 8CBF     		ite	hi
 3728 0058 0023     		movhi	r3, #0
 3729 005a 0123     		movls	r3, #1
 3730 005c DBB2     		uxtb	r3, r3
 3731 005e 1846     		mov	r0, r3
 3732 0060 FFF7FEFF 		bl	assert_param
1114:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Set the ADCx high threshold */
1115:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   ADCx->HTR = HighThreshold;
 3733              		.loc 1 1115 0 discriminator 4
 3734 0064 7A88     		ldrh	r2, [r7, #2]
 3735 0066 7B68     		ldr	r3, [r7, #4]
 3736 0068 5A62     		str	r2, [r3, #36]
1116:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Set the ADCx low threshold */
1117:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   ADCx->LTR = LowThreshold;
 3737              		.loc 1 1117 0 discriminator 4
 3738 006a 3A88     		ldrh	r2, [r7, #0]
 3739 006c 7B68     		ldr	r3, [r7, #4]
 3740 006e 9A62     		str	r2, [r3, #40]
1118:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** }
 3741              		.loc 1 1118 0 discriminator 4
 3742 0070 07F10807 		add	r7, r7, #8
 3743 0074 BD46     		mov	sp, r7
 3744 0076 80BD     		pop	{r7, pc}
 3745              	.L298:
 3746              		.align	2
 3747              	.L297:
 3748 0078 00240140 		.word	1073816576
 3749 007c 00280140 		.word	1073817600
 3750 0080 003C0140 		.word	1073822720
 3751              		.cfi_endproc
 3752              	.LFE58:
 3754              		.section	.text.ADC_AnalogWatchdogSingleChannelConfig,"ax",%progbits
 3755              		.align	2
 3756              		.global	ADC_AnalogWatchdogSingleChannelConfig
 3757              		.thumb
 3758              		.thumb_func
 3760              	ADC_AnalogWatchdogSingleChannelConfig:
 3761              	.LFB59:
1119:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** 
1120:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** /**
1121:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @brief  Configures the analog watchdog guarded single channel
1122:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1123:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADC_Channel: the ADC channel to configure for the analog watchdog. 
1124:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
1125:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_0: ADC Channel0 selected
1126:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_1: ADC Channel1 selected
1127:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_2: ADC Channel2 selected
1128:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_3: ADC Channel3 selected
1129:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_4: ADC Channel4 selected
1130:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_5: ADC Channel5 selected
1131:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_6: ADC Channel6 selected
1132:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_7: ADC Channel7 selected
1133:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_8: ADC Channel8 selected
1134:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_9: ADC Channel9 selected
1135:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_10: ADC Channel10 selected
1136:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_11: ADC Channel11 selected
1137:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_12: ADC Channel12 selected
1138:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_13: ADC Channel13 selected
1139:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_14: ADC Channel14 selected
1140:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_15: ADC Channel15 selected
1141:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_16: ADC Channel16 selected
1142:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_17: ADC Channel17 selected
1143:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @retval None
1144:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
1145:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** void ADC_AnalogWatchdogSingleChannelConfig(ADC_TypeDef* ADCx, uint8_t ADC_Channel)
1146:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** {
 3762              		.loc 1 1146 0
 3763              		.cfi_startproc
 3764              		@ args = 0, pretend = 0, frame = 16
 3765              		@ frame_needed = 1, uses_anonymous_args = 0
 3766 0000 80B5     		push	{r7, lr}
 3767              	.LCFI89:
 3768              		.cfi_def_cfa_offset 8
 3769              		.cfi_offset 7, -8
 3770              		.cfi_offset 14, -4
 3771 0002 84B0     		sub	sp, sp, #16
 3772              	.LCFI90:
 3773              		.cfi_def_cfa_offset 24
 3774 0004 00AF     		add	r7, sp, #0
 3775              	.LCFI91:
 3776              		.cfi_def_cfa_register 7
 3777 0006 7860     		str	r0, [r7, #4]
 3778 0008 0B46     		mov	r3, r1
 3779 000a FB70     		strb	r3, [r7, #3]
1147:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   uint32_t tmpreg = 0;
 3780              		.loc 1 1147 0
 3781 000c 4FF00003 		mov	r3, #0
 3782 0010 FB60     		str	r3, [r7, #12]
1148:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Check the parameters */
1149:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 3783              		.loc 1 1149 0
 3784 0012 7A68     		ldr	r2, [r7, #4]
 3785 0014 314B     		ldr	r3, .L306
 3786 0016 9A42     		cmp	r2, r3
 3787 0018 07D0     		beq	.L300
 3788              		.loc 1 1149 0 is_stmt 0 discriminator 2
 3789 001a 7A68     		ldr	r2, [r7, #4]
 3790 001c 304B     		ldr	r3, .L306+4
 3791 001e 9A42     		cmp	r2, r3
 3792 0020 03D0     		beq	.L300
 3793              		.loc 1 1149 0 discriminator 1
 3794 0022 7A68     		ldr	r2, [r7, #4]
 3795 0024 2F4B     		ldr	r3, .L306+8
 3796 0026 9A42     		cmp	r2, r3
 3797 0028 02D1     		bne	.L301
 3798              	.L300:
 3799 002a 4FF00103 		mov	r3, #1
 3800 002e 01E0     		b	.L302
 3801              	.L301:
 3802              		.loc 1 1149 0 discriminator 3
 3803 0030 4FF00003 		mov	r3, #0
 3804              	.L302:
 3805              		.loc 1 1149 0 discriminator 4
 3806 0034 1846     		mov	r0, r3
 3807 0036 FFF7FEFF 		bl	assert_param
1150:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_CHANNEL(ADC_Channel));
 3808              		.loc 1 1150 0 is_stmt 1 discriminator 4
 3809 003a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3810 003c 002B     		cmp	r3, #0
 3811 003e 32D0     		beq	.L303
 3812              		.loc 1 1150 0 is_stmt 0 discriminator 2
 3813 0040 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3814 0042 012B     		cmp	r3, #1
 3815 0044 2FD0     		beq	.L303
 3816              		.loc 1 1150 0 discriminator 1
 3817 0046 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3818 0048 022B     		cmp	r3, #2
 3819 004a 2CD0     		beq	.L303
 3820              		.loc 1 1150 0 discriminator 2
 3821 004c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3822 004e 032B     		cmp	r3, #3
 3823 0050 29D0     		beq	.L303
 3824              		.loc 1 1150 0 discriminator 3
 3825 0052 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3826 0054 042B     		cmp	r3, #4
 3827 0056 26D0     		beq	.L303
 3828              		.loc 1 1150 0 discriminator 4
 3829 0058 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3830 005a 052B     		cmp	r3, #5
 3831 005c 23D0     		beq	.L303
 3832              		.loc 1 1150 0 discriminator 5
 3833 005e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3834 0060 062B     		cmp	r3, #6
 3835 0062 20D0     		beq	.L303
 3836              		.loc 1 1150 0 discriminator 6
 3837 0064 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3838 0066 072B     		cmp	r3, #7
 3839 0068 1DD0     		beq	.L303
 3840              		.loc 1 1150 0 discriminator 7
 3841 006a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3842 006c 082B     		cmp	r3, #8
 3843 006e 1AD0     		beq	.L303
 3844              		.loc 1 1150 0 discriminator 8
 3845 0070 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3846 0072 092B     		cmp	r3, #9
 3847 0074 17D0     		beq	.L303
 3848              		.loc 1 1150 0 discriminator 9
 3849 0076 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3850 0078 0A2B     		cmp	r3, #10
 3851 007a 14D0     		beq	.L303
 3852              		.loc 1 1150 0 discriminator 10
 3853 007c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3854 007e 0B2B     		cmp	r3, #11
 3855 0080 11D0     		beq	.L303
 3856              		.loc 1 1150 0 discriminator 11
 3857 0082 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3858 0084 0C2B     		cmp	r3, #12
 3859 0086 0ED0     		beq	.L303
 3860              		.loc 1 1150 0 discriminator 12
 3861 0088 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3862 008a 0D2B     		cmp	r3, #13
 3863 008c 0BD0     		beq	.L303
 3864              		.loc 1 1150 0 discriminator 13
 3865 008e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3866 0090 0E2B     		cmp	r3, #14
 3867 0092 08D0     		beq	.L303
 3868              		.loc 1 1150 0 discriminator 14
 3869 0094 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3870 0096 0F2B     		cmp	r3, #15
 3871 0098 05D0     		beq	.L303
 3872              		.loc 1 1150 0 discriminator 15
 3873 009a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3874 009c 102B     		cmp	r3, #16
 3875 009e 02D0     		beq	.L303
 3876              		.loc 1 1150 0 discriminator 16
 3877 00a0 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3878 00a2 112B     		cmp	r3, #17
 3879 00a4 02D1     		bne	.L304
 3880              	.L303:
 3881              		.loc 1 1150 0 discriminator 1
 3882 00a6 4FF00103 		mov	r3, #1
 3883 00aa 01E0     		b	.L305
 3884              	.L304:
 3885              		.loc 1 1150 0 discriminator 3
 3886 00ac 4FF00003 		mov	r3, #0
 3887              	.L305:
 3888              		.loc 1 1150 0 discriminator 4
 3889 00b0 1846     		mov	r0, r3
 3890 00b2 FFF7FEFF 		bl	assert_param
1151:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Get the old register value */
1152:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   tmpreg = ADCx->CR1;
 3891              		.loc 1 1152 0 is_stmt 1 discriminator 4
 3892 00b6 7B68     		ldr	r3, [r7, #4]
 3893 00b8 5B68     		ldr	r3, [r3, #4]
 3894 00ba FB60     		str	r3, [r7, #12]
1153:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Clear the Analog watchdog channel select bits */
1154:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   tmpreg &= CR1_AWDCH_Reset;
 3895              		.loc 1 1154 0 discriminator 4
 3896 00bc FB68     		ldr	r3, [r7, #12]
 3897 00be 23F01F03 		bic	r3, r3, #31
 3898 00c2 FB60     		str	r3, [r7, #12]
1155:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Set the Analog watchdog channel */
1156:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   tmpreg |= ADC_Channel;
 3899              		.loc 1 1156 0 discriminator 4
 3900 00c4 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3901 00c6 FA68     		ldr	r2, [r7, #12]
 3902 00c8 1343     		orrs	r3, r3, r2
 3903 00ca FB60     		str	r3, [r7, #12]
1157:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Store the new register value */
1158:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   ADCx->CR1 = tmpreg;
 3904              		.loc 1 1158 0 discriminator 4
 3905 00cc 7B68     		ldr	r3, [r7, #4]
 3906 00ce FA68     		ldr	r2, [r7, #12]
 3907 00d0 5A60     		str	r2, [r3, #4]
1159:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** }
 3908              		.loc 1 1159 0 discriminator 4
 3909 00d2 07F11007 		add	r7, r7, #16
 3910 00d6 BD46     		mov	sp, r7
 3911 00d8 80BD     		pop	{r7, pc}
 3912              	.L307:
 3913 00da 00BF     		.align	2
 3914              	.L306:
 3915 00dc 00240140 		.word	1073816576
 3916 00e0 00280140 		.word	1073817600
 3917 00e4 003C0140 		.word	1073822720
 3918              		.cfi_endproc
 3919              	.LFE59:
 3921              		.section	.text.ADC_TempSensorVrefintCmd,"ax",%progbits
 3922              		.align	2
 3923              		.global	ADC_TempSensorVrefintCmd
 3924              		.thumb
 3925              		.thumb_func
 3927              	ADC_TempSensorVrefintCmd:
 3928              	.LFB60:
1160:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** 
1161:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** /**
1162:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the temperature sensor and Vrefint channel.
1163:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the temperature sensor.
1164:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
1165:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @retval None
1166:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
1167:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** void ADC_TempSensorVrefintCmd(FunctionalState NewState)
1168:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** {
 3929              		.loc 1 1168 0
 3930              		.cfi_startproc
 3931              		@ args = 0, pretend = 0, frame = 8
 3932              		@ frame_needed = 1, uses_anonymous_args = 0
 3933 0000 80B5     		push	{r7, lr}
 3934              	.LCFI92:
 3935              		.cfi_def_cfa_offset 8
 3936              		.cfi_offset 7, -8
 3937              		.cfi_offset 14, -4
 3938 0002 82B0     		sub	sp, sp, #8
 3939              	.LCFI93:
 3940              		.cfi_def_cfa_offset 16
 3941 0004 00AF     		add	r7, sp, #0
 3942              	.LCFI94:
 3943              		.cfi_def_cfa_register 7
 3944 0006 0346     		mov	r3, r0
 3945 0008 FB71     		strb	r3, [r7, #7]
1169:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Check the parameters */
1170:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 3946              		.loc 1 1170 0
 3947 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3948 000c 002B     		cmp	r3, #0
 3949 000e 02D0     		beq	.L309
 3950              		.loc 1 1170 0 is_stmt 0 discriminator 2
 3951 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3952 0012 012B     		cmp	r3, #1
 3953 0014 02D1     		bne	.L310
 3954              	.L309:
 3955              		.loc 1 1170 0 discriminator 1
 3956 0016 4FF00103 		mov	r3, #1
 3957 001a 01E0     		b	.L311
 3958              	.L310:
 3959              		.loc 1 1170 0 discriminator 3
 3960 001c 4FF00003 		mov	r3, #0
 3961              	.L311:
 3962              		.loc 1 1170 0 discriminator 4
 3963 0020 1846     		mov	r0, r3
 3964 0022 FFF7FEFF 		bl	assert_param
1171:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 3965              		.loc 1 1171 0 is_stmt 1 discriminator 4
 3966 0026 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3967 0028 002B     		cmp	r3, #0
 3968 002a 06D0     		beq	.L312
1172:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
1173:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Enable the temperature sensor and Vrefint channel*/
1174:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     ADC1->CR2 |= CR2_TSVREFE_Set;
 3969              		.loc 1 1174 0
 3970 002c 084B     		ldr	r3, .L314
 3971 002e 084A     		ldr	r2, .L314
 3972 0030 9268     		ldr	r2, [r2, #8]
 3973 0032 42F40002 		orr	r2, r2, #8388608
 3974 0036 9A60     		str	r2, [r3, #8]
 3975 0038 05E0     		b	.L308
 3976              	.L312:
1175:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
1176:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   else
1177:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
1178:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* Disable the temperature sensor and Vrefint channel*/
1179:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     ADC1->CR2 &= CR2_TSVREFE_Reset;
 3977              		.loc 1 1179 0
 3978 003a 054B     		ldr	r3, .L314
 3979 003c 044A     		ldr	r2, .L314
 3980 003e 9268     		ldr	r2, [r2, #8]
 3981 0040 22F40002 		bic	r2, r2, #8388608
 3982 0044 9A60     		str	r2, [r3, #8]
 3983              	.L308:
1180:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
1181:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** }
 3984              		.loc 1 1181 0
 3985 0046 07F10807 		add	r7, r7, #8
 3986 004a BD46     		mov	sp, r7
 3987 004c 80BD     		pop	{r7, pc}
 3988              	.L315:
 3989 004e 00BF     		.align	2
 3990              	.L314:
 3991 0050 00240140 		.word	1073816576
 3992              		.cfi_endproc
 3993              	.LFE60:
 3995              		.section	.text.ADC_GetFlagStatus,"ax",%progbits
 3996              		.align	2
 3997              		.global	ADC_GetFlagStatus
 3998              		.thumb
 3999              		.thumb_func
 4001              	ADC_GetFlagStatus:
 4002              	.LFB61:
1182:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** 
1183:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** /**
1184:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @brief  Checks whether the specified ADC flag is set or not.
1185:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1186:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADC_FLAG: specifies the flag to check. 
1187:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
1188:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_AWD: Analog watchdog flag
1189:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_EOC: End of conversion flag
1190:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_JEOC: End of injected group conversion flag
1191:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_JSTRT: Start of injected group conversion flag
1192:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_STRT: Start of regular group conversion flag
1193:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @retval The new state of ADC_FLAG (SET or RESET).
1194:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
1195:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** FlagStatus ADC_GetFlagStatus(ADC_TypeDef* ADCx, uint8_t ADC_FLAG)
1196:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** {
 4003              		.loc 1 1196 0
 4004              		.cfi_startproc
 4005              		@ args = 0, pretend = 0, frame = 16
 4006              		@ frame_needed = 1, uses_anonymous_args = 0
 4007 0000 80B5     		push	{r7, lr}
 4008              	.LCFI95:
 4009              		.cfi_def_cfa_offset 8
 4010              		.cfi_offset 7, -8
 4011              		.cfi_offset 14, -4
 4012 0002 84B0     		sub	sp, sp, #16
 4013              	.LCFI96:
 4014              		.cfi_def_cfa_offset 24
 4015 0004 00AF     		add	r7, sp, #0
 4016              	.LCFI97:
 4017              		.cfi_def_cfa_register 7
 4018 0006 7860     		str	r0, [r7, #4]
 4019 0008 0B46     		mov	r3, r1
 4020 000a FB70     		strb	r3, [r7, #3]
1197:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   FlagStatus bitstatus = RESET;
 4021              		.loc 1 1197 0
 4022 000c 4FF00003 		mov	r3, #0
 4023 0010 FB73     		strb	r3, [r7, #15]
1198:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Check the parameters */
1199:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 4024              		.loc 1 1199 0
 4025 0012 7A68     		ldr	r2, [r7, #4]
 4026 0014 1E4B     		ldr	r3, .L326
 4027 0016 9A42     		cmp	r2, r3
 4028 0018 07D0     		beq	.L317
 4029              		.loc 1 1199 0 is_stmt 0 discriminator 2
 4030 001a 7A68     		ldr	r2, [r7, #4]
 4031 001c 1D4B     		ldr	r3, .L326+4
 4032 001e 9A42     		cmp	r2, r3
 4033 0020 03D0     		beq	.L317
 4034              		.loc 1 1199 0 discriminator 1
 4035 0022 7A68     		ldr	r2, [r7, #4]
 4036 0024 1C4B     		ldr	r3, .L326+8
 4037 0026 9A42     		cmp	r2, r3
 4038 0028 02D1     		bne	.L318
 4039              	.L317:
 4040 002a 4FF00103 		mov	r3, #1
 4041 002e 01E0     		b	.L319
 4042              	.L318:
 4043              		.loc 1 1199 0 discriminator 3
 4044 0030 4FF00003 		mov	r3, #0
 4045              	.L319:
 4046              		.loc 1 1199 0 discriminator 4
 4047 0034 1846     		mov	r0, r3
 4048 0036 FFF7FEFF 		bl	assert_param
1200:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_GET_FLAG(ADC_FLAG));
 4049              		.loc 1 1200 0 is_stmt 1 discriminator 4
 4050 003a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4051 003c 012B     		cmp	r3, #1
 4052 003e 0BD0     		beq	.L320
 4053              		.loc 1 1200 0 is_stmt 0 discriminator 2
 4054 0040 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4055 0042 022B     		cmp	r3, #2
 4056 0044 08D0     		beq	.L320
 4057              		.loc 1 1200 0 discriminator 1
 4058 0046 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4059 0048 042B     		cmp	r3, #4
 4060 004a 05D0     		beq	.L320
 4061              		.loc 1 1200 0 discriminator 2
 4062 004c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4063 004e 082B     		cmp	r3, #8
 4064 0050 02D0     		beq	.L320
 4065              		.loc 1 1200 0 discriminator 3
 4066 0052 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4067 0054 102B     		cmp	r3, #16
 4068 0056 02D1     		bne	.L321
 4069              	.L320:
 4070              		.loc 1 1200 0 discriminator 1
 4071 0058 4FF00103 		mov	r3, #1
 4072 005c 01E0     		b	.L322
 4073              	.L321:
 4074              		.loc 1 1200 0 discriminator 3
 4075 005e 4FF00003 		mov	r3, #0
 4076              	.L322:
 4077              		.loc 1 1200 0 discriminator 4
 4078 0062 1846     		mov	r0, r3
 4079 0064 FFF7FEFF 		bl	assert_param
1201:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Check the status of the specified ADC flag */
1202:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   if ((ADCx->SR & ADC_FLAG) != (uint8_t)RESET)
 4080              		.loc 1 1202 0 is_stmt 1 discriminator 4
 4081 0068 7B68     		ldr	r3, [r7, #4]
 4082 006a 1A68     		ldr	r2, [r3, #0]
 4083 006c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4084 006e 1340     		ands	r3, r3, r2
 4085 0070 002B     		cmp	r3, #0
 4086 0072 03D0     		beq	.L323
1203:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
1204:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* ADC_FLAG is set */
1205:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     bitstatus = SET;
 4087              		.loc 1 1205 0
 4088 0074 4FF00103 		mov	r3, #1
 4089 0078 FB73     		strb	r3, [r7, #15]
 4090 007a 02E0     		b	.L324
 4091              	.L323:
1206:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
1207:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   else
1208:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
1209:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* ADC_FLAG is reset */
1210:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     bitstatus = RESET;
 4092              		.loc 1 1210 0
 4093 007c 4FF00003 		mov	r3, #0
 4094 0080 FB73     		strb	r3, [r7, #15]
 4095              	.L324:
1211:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
1212:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Return the ADC_FLAG status */
1213:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   return  bitstatus;
 4096              		.loc 1 1213 0
 4097 0082 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1214:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** }
 4098              		.loc 1 1214 0
 4099 0084 1846     		mov	r0, r3
 4100 0086 07F11007 		add	r7, r7, #16
 4101 008a BD46     		mov	sp, r7
 4102 008c 80BD     		pop	{r7, pc}
 4103              	.L327:
 4104 008e 00BF     		.align	2
 4105              	.L326:
 4106 0090 00240140 		.word	1073816576
 4107 0094 00280140 		.word	1073817600
 4108 0098 003C0140 		.word	1073822720
 4109              		.cfi_endproc
 4110              	.LFE61:
 4112              		.section	.text.ADC_ClearFlag,"ax",%progbits
 4113              		.align	2
 4114              		.global	ADC_ClearFlag
 4115              		.thumb
 4116              		.thumb_func
 4118              	ADC_ClearFlag:
 4119              	.LFB62:
1215:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** 
1216:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** /**
1217:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @brief  Clears the ADCx's pending flags.
1218:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1219:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADC_FLAG: specifies the flag to clear. 
1220:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *   This parameter can be any combination of the following values:
1221:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_AWD: Analog watchdog flag
1222:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_EOC: End of conversion flag
1223:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_JEOC: End of injected group conversion flag
1224:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_JSTRT: Start of injected group conversion flag
1225:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_STRT: Start of regular group conversion flag
1226:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @retval None
1227:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
1228:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** void ADC_ClearFlag(ADC_TypeDef* ADCx, uint8_t ADC_FLAG)
1229:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** {
 4120              		.loc 1 1229 0
 4121              		.cfi_startproc
 4122              		@ args = 0, pretend = 0, frame = 8
 4123              		@ frame_needed = 1, uses_anonymous_args = 0
 4124 0000 80B5     		push	{r7, lr}
 4125              	.LCFI98:
 4126              		.cfi_def_cfa_offset 8
 4127              		.cfi_offset 7, -8
 4128              		.cfi_offset 14, -4
 4129 0002 82B0     		sub	sp, sp, #8
 4130              	.LCFI99:
 4131              		.cfi_def_cfa_offset 16
 4132 0004 00AF     		add	r7, sp, #0
 4133              	.LCFI100:
 4134              		.cfi_def_cfa_register 7
 4135 0006 7860     		str	r0, [r7, #4]
 4136 0008 0B46     		mov	r3, r1
 4137 000a FB70     		strb	r3, [r7, #3]
1230:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Check the parameters */
1231:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 4138              		.loc 1 1231 0
 4139 000c 7A68     		ldr	r2, [r7, #4]
 4140 000e 164B     		ldr	r3, .L334
 4141 0010 9A42     		cmp	r2, r3
 4142 0012 07D0     		beq	.L329
 4143              		.loc 1 1231 0 is_stmt 0 discriminator 2
 4144 0014 7A68     		ldr	r2, [r7, #4]
 4145 0016 154B     		ldr	r3, .L334+4
 4146 0018 9A42     		cmp	r2, r3
 4147 001a 03D0     		beq	.L329
 4148              		.loc 1 1231 0 discriminator 1
 4149 001c 7A68     		ldr	r2, [r7, #4]
 4150 001e 144B     		ldr	r3, .L334+8
 4151 0020 9A42     		cmp	r2, r3
 4152 0022 02D1     		bne	.L330
 4153              	.L329:
 4154 0024 4FF00103 		mov	r3, #1
 4155 0028 01E0     		b	.L331
 4156              	.L330:
 4157              		.loc 1 1231 0 discriminator 3
 4158 002a 4FF00003 		mov	r3, #0
 4159              	.L331:
 4160              		.loc 1 1231 0 discriminator 4
 4161 002e 1846     		mov	r0, r3
 4162 0030 FFF7FEFF 		bl	assert_param
1232:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_CLEAR_FLAG(ADC_FLAG));
 4163              		.loc 1 1232 0 is_stmt 1 discriminator 4
 4164 0034 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4165 0036 03F0E003 		and	r3, r3, #224
 4166 003a 002B     		cmp	r3, #0
 4167 003c 05D1     		bne	.L332
 4168              		.loc 1 1232 0 is_stmt 0 discriminator 1
 4169 003e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4170 0040 002B     		cmp	r3, #0
 4171 0042 02D0     		beq	.L332
 4172              		.loc 1 1232 0 discriminator 3
 4173 0044 4FF00103 		mov	r3, #1
 4174 0048 01E0     		b	.L333
 4175              	.L332:
 4176              		.loc 1 1232 0 discriminator 2
 4177 004a 4FF00003 		mov	r3, #0
 4178              	.L333:
 4179              		.loc 1 1232 0 discriminator 4
 4180 004e 1846     		mov	r0, r3
 4181 0050 FFF7FEFF 		bl	assert_param
1233:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Clear the selected ADC flags */
1234:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   ADCx->SR = ~(uint32_t)ADC_FLAG;
 4182              		.loc 1 1234 0 is_stmt 1 discriminator 4
 4183 0054 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4184 0056 6FEA0302 		mvn	r2, r3
 4185 005a 7B68     		ldr	r3, [r7, #4]
 4186 005c 1A60     		str	r2, [r3, #0]
1235:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** }
 4187              		.loc 1 1235 0 discriminator 4
 4188 005e 07F10807 		add	r7, r7, #8
 4189 0062 BD46     		mov	sp, r7
 4190 0064 80BD     		pop	{r7, pc}
 4191              	.L335:
 4192 0066 00BF     		.align	2
 4193              	.L334:
 4194 0068 00240140 		.word	1073816576
 4195 006c 00280140 		.word	1073817600
 4196 0070 003C0140 		.word	1073822720
 4197              		.cfi_endproc
 4198              	.LFE62:
 4200              		.section	.text.ADC_GetITStatus,"ax",%progbits
 4201              		.align	2
 4202              		.global	ADC_GetITStatus
 4203              		.thumb
 4204              		.thumb_func
 4206              	ADC_GetITStatus:
 4207              	.LFB63:
1236:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** 
1237:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** /**
1238:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @brief  Checks whether the specified ADC interrupt has occurred or not.
1239:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1240:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADC_IT: specifies the ADC interrupt source to check. 
1241:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
1242:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_IT_EOC: End of conversion interrupt mask
1243:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_IT_AWD: Analog watchdog interrupt mask
1244:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_IT_JEOC: End of injected conversion interrupt mask
1245:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @retval The new state of ADC_IT (SET or RESET).
1246:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
1247:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** ITStatus ADC_GetITStatus(ADC_TypeDef* ADCx, uint16_t ADC_IT)
1248:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** {
 4208              		.loc 1 1248 0
 4209              		.cfi_startproc
 4210              		@ args = 0, pretend = 0, frame = 24
 4211              		@ frame_needed = 1, uses_anonymous_args = 0
 4212 0000 80B5     		push	{r7, lr}
 4213              	.LCFI101:
 4214              		.cfi_def_cfa_offset 8
 4215              		.cfi_offset 7, -8
 4216              		.cfi_offset 14, -4
 4217 0002 86B0     		sub	sp, sp, #24
 4218              	.LCFI102:
 4219              		.cfi_def_cfa_offset 32
 4220 0004 00AF     		add	r7, sp, #0
 4221              	.LCFI103:
 4222              		.cfi_def_cfa_register 7
 4223 0006 7860     		str	r0, [r7, #4]
 4224 0008 0B46     		mov	r3, r1
 4225 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1249:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   ITStatus bitstatus = RESET;
 4226              		.loc 1 1249 0
 4227 000c 4FF00003 		mov	r3, #0
 4228 0010 FB75     		strb	r3, [r7, #23]
1250:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   uint32_t itmask = 0, enablestatus = 0;
 4229              		.loc 1 1250 0
 4230 0012 4FF00003 		mov	r3, #0
 4231 0016 3B61     		str	r3, [r7, #16]
 4232 0018 4FF00003 		mov	r3, #0
 4233 001c FB60     		str	r3, [r7, #12]
1251:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Check the parameters */
1252:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 4234              		.loc 1 1252 0
 4235 001e 7A68     		ldr	r2, [r7, #4]
 4236 0020 234B     		ldr	r3, .L346
 4237 0022 9A42     		cmp	r2, r3
 4238 0024 07D0     		beq	.L337
 4239              		.loc 1 1252 0 is_stmt 0 discriminator 2
 4240 0026 7A68     		ldr	r2, [r7, #4]
 4241 0028 224B     		ldr	r3, .L346+4
 4242 002a 9A42     		cmp	r2, r3
 4243 002c 03D0     		beq	.L337
 4244              		.loc 1 1252 0 discriminator 1
 4245 002e 7A68     		ldr	r2, [r7, #4]
 4246 0030 214B     		ldr	r3, .L346+8
 4247 0032 9A42     		cmp	r2, r3
 4248 0034 02D1     		bne	.L338
 4249              	.L337:
 4250 0036 4FF00103 		mov	r3, #1
 4251 003a 01E0     		b	.L339
 4252              	.L338:
 4253              		.loc 1 1252 0 discriminator 3
 4254 003c 4FF00003 		mov	r3, #0
 4255              	.L339:
 4256              		.loc 1 1252 0 discriminator 4
 4257 0040 1846     		mov	r0, r3
 4258 0042 FFF7FEFF 		bl	assert_param
1253:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_GET_IT(ADC_IT));
 4259              		.loc 1 1253 0 is_stmt 1 discriminator 4
 4260 0046 7B88     		ldrh	r3, [r7, #2]
 4261 0048 B3F5087F 		cmp	r3, #544
 4262 004c 07D0     		beq	.L340
 4263              		.loc 1 1253 0 is_stmt 0 discriminator 2
 4264 004e 7B88     		ldrh	r3, [r7, #2]
 4265 0050 B3F5A07F 		cmp	r3, #320
 4266 0054 03D0     		beq	.L340
 4267              		.loc 1 1253 0 discriminator 1
 4268 0056 7B88     		ldrh	r3, [r7, #2]
 4269 0058 B3F5906F 		cmp	r3, #1152
 4270 005c 02D1     		bne	.L341
 4271              	.L340:
 4272 005e 4FF00103 		mov	r3, #1
 4273 0062 01E0     		b	.L342
 4274              	.L341:
 4275              		.loc 1 1253 0 discriminator 3
 4276 0064 4FF00003 		mov	r3, #0
 4277              	.L342:
 4278              		.loc 1 1253 0 discriminator 4
 4279 0068 1846     		mov	r0, r3
 4280 006a FFF7FEFF 		bl	assert_param
1254:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Get the ADC IT index */
1255:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   itmask = ADC_IT >> 8;
 4281              		.loc 1 1255 0 is_stmt 1 discriminator 4
 4282 006e 7B88     		ldrh	r3, [r7, #2]
 4283 0070 4FEA1323 		lsr	r3, r3, #8
 4284 0074 9BB2     		uxth	r3, r3
 4285 0076 3B61     		str	r3, [r7, #16]
1256:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Get the ADC_IT enable bit status */
1257:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   enablestatus = (ADCx->CR1 & (uint8_t)ADC_IT) ;
 4286              		.loc 1 1257 0 discriminator 4
 4287 0078 7B68     		ldr	r3, [r7, #4]
 4288 007a 5A68     		ldr	r2, [r3, #4]
 4289 007c 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4290 007e DBB2     		uxtb	r3, r3
 4291 0080 1340     		ands	r3, r3, r2
 4292 0082 FB60     		str	r3, [r7, #12]
1258:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Check the status of the specified ADC interrupt */
1259:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   if (((ADCx->SR & itmask) != (uint32_t)RESET) && enablestatus)
 4293              		.loc 1 1259 0 discriminator 4
 4294 0084 7B68     		ldr	r3, [r7, #4]
 4295 0086 1A68     		ldr	r2, [r3, #0]
 4296 0088 3B69     		ldr	r3, [r7, #16]
 4297 008a 1340     		ands	r3, r3, r2
 4298 008c 002B     		cmp	r3, #0
 4299 008e 06D0     		beq	.L343
 4300              		.loc 1 1259 0 is_stmt 0 discriminator 1
 4301 0090 FB68     		ldr	r3, [r7, #12]
 4302 0092 002B     		cmp	r3, #0
 4303 0094 03D0     		beq	.L343
1260:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
1261:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* ADC_IT is set */
1262:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     bitstatus = SET;
 4304              		.loc 1 1262 0 is_stmt 1
 4305 0096 4FF00103 		mov	r3, #1
 4306 009a FB75     		strb	r3, [r7, #23]
 4307 009c 02E0     		b	.L344
 4308              	.L343:
1263:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
1264:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   else
1265:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   {
1266:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     /* ADC_IT is reset */
1267:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****     bitstatus = RESET;
 4309              		.loc 1 1267 0
 4310 009e 4FF00003 		mov	r3, #0
 4311 00a2 FB75     		strb	r3, [r7, #23]
 4312              	.L344:
1268:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   }
1269:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Return the ADC_IT status */
1270:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   return  bitstatus;
 4313              		.loc 1 1270 0
 4314 00a4 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
1271:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** }
 4315              		.loc 1 1271 0
 4316 00a6 1846     		mov	r0, r3
 4317 00a8 07F11807 		add	r7, r7, #24
 4318 00ac BD46     		mov	sp, r7
 4319 00ae 80BD     		pop	{r7, pc}
 4320              	.L347:
 4321              		.align	2
 4322              	.L346:
 4323 00b0 00240140 		.word	1073816576
 4324 00b4 00280140 		.word	1073817600
 4325 00b8 003C0140 		.word	1073822720
 4326              		.cfi_endproc
 4327              	.LFE63:
 4329              		.section	.text.ADC_ClearITPendingBit,"ax",%progbits
 4330              		.align	2
 4331              		.global	ADC_ClearITPendingBit
 4332              		.thumb
 4333              		.thumb_func
 4335              	ADC_ClearITPendingBit:
 4336              	.LFB64:
1272:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** 
1273:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** /**
1274:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @brief  Clears the ADCx's interrupt pending bits.
1275:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1276:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @param  ADC_IT: specifies the ADC interrupt pending bit to clear.
1277:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *   This parameter can be any combination of the following values:
1278:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_IT_EOC: End of conversion interrupt mask
1279:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_IT_AWD: Analog watchdog interrupt mask
1280:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   *     @arg ADC_IT_JEOC: End of injected conversion interrupt mask
1281:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   * @retval None
1282:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   */
1283:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** void ADC_ClearITPendingBit(ADC_TypeDef* ADCx, uint16_t ADC_IT)
1284:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** {
 4337              		.loc 1 1284 0
 4338              		.cfi_startproc
 4339              		@ args = 0, pretend = 0, frame = 16
 4340              		@ frame_needed = 1, uses_anonymous_args = 0
 4341 0000 80B5     		push	{r7, lr}
 4342              	.LCFI104:
 4343              		.cfi_def_cfa_offset 8
 4344              		.cfi_offset 7, -8
 4345              		.cfi_offset 14, -4
 4346 0002 84B0     		sub	sp, sp, #16
 4347              	.LCFI105:
 4348              		.cfi_def_cfa_offset 24
 4349 0004 00AF     		add	r7, sp, #0
 4350              	.LCFI106:
 4351              		.cfi_def_cfa_register 7
 4352 0006 7860     		str	r0, [r7, #4]
 4353 0008 0B46     		mov	r3, r1
 4354 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1285:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   uint8_t itmask = 0;
 4355              		.loc 1 1285 0
 4356 000c 4FF00003 		mov	r3, #0
 4357 0010 FB73     		strb	r3, [r7, #15]
1286:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Check the parameters */
1287:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 4358              		.loc 1 1287 0
 4359 0012 7A68     		ldr	r2, [r7, #4]
 4360 0014 184B     		ldr	r3, .L354
 4361 0016 9A42     		cmp	r2, r3
 4362 0018 07D0     		beq	.L349
 4363              		.loc 1 1287 0 is_stmt 0 discriminator 2
 4364 001a 7A68     		ldr	r2, [r7, #4]
 4365 001c 174B     		ldr	r3, .L354+4
 4366 001e 9A42     		cmp	r2, r3
 4367 0020 03D0     		beq	.L349
 4368              		.loc 1 1287 0 discriminator 1
 4369 0022 7A68     		ldr	r2, [r7, #4]
 4370 0024 164B     		ldr	r3, .L354+8
 4371 0026 9A42     		cmp	r2, r3
 4372 0028 02D1     		bne	.L350
 4373              	.L349:
 4374 002a 4FF00103 		mov	r3, #1
 4375 002e 01E0     		b	.L351
 4376              	.L350:
 4377              		.loc 1 1287 0 discriminator 3
 4378 0030 4FF00003 		mov	r3, #0
 4379              	.L351:
 4380              		.loc 1 1287 0 discriminator 4
 4381 0034 1846     		mov	r0, r3
 4382 0036 FFF7FEFF 		bl	assert_param
1288:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_IT(ADC_IT));
 4383              		.loc 1 1288 0 is_stmt 1 discriminator 4
 4384 003a 7A88     		ldrh	r2, [r7, #2]
 4385 003c 4FF61F03 		movw	r3, #63519
 4386 0040 1340     		ands	r3, r3, r2
 4387 0042 002B     		cmp	r3, #0
 4388 0044 05D1     		bne	.L352
 4389              		.loc 1 1288 0 is_stmt 0 discriminator 1
 4390 0046 7B88     		ldrh	r3, [r7, #2]
 4391 0048 002B     		cmp	r3, #0
 4392 004a 02D0     		beq	.L352
 4393              		.loc 1 1288 0 discriminator 3
 4394 004c 4FF00103 		mov	r3, #1
 4395 0050 01E0     		b	.L353
 4396              	.L352:
 4397              		.loc 1 1288 0 discriminator 2
 4398 0052 4FF00003 		mov	r3, #0
 4399              	.L353:
 4400              		.loc 1 1288 0 discriminator 4
 4401 0056 1846     		mov	r0, r3
 4402 0058 FFF7FEFF 		bl	assert_param
1289:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Get the ADC IT index */
1290:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   itmask = (uint8_t)(ADC_IT >> 8);
 4403              		.loc 1 1290 0 is_stmt 1 discriminator 4
 4404 005c 7B88     		ldrh	r3, [r7, #2]
 4405 005e 4FEA1323 		lsr	r3, r3, #8
 4406 0062 9BB2     		uxth	r3, r3
 4407 0064 FB73     		strb	r3, [r7, #15]
1291:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   /* Clear the selected ADC interrupt pending bits */
1292:../libs/StdPeripheralDriver/src/stm32f10x_adc.c ****   ADCx->SR = ~(uint32_t)itmask;
 4408              		.loc 1 1292 0 discriminator 4
 4409 0066 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4410 0068 6FEA0302 		mvn	r2, r3
 4411 006c 7B68     		ldr	r3, [r7, #4]
 4412 006e 1A60     		str	r2, [r3, #0]
1293:../libs/StdPeripheralDriver/src/stm32f10x_adc.c **** }
 4413              		.loc 1 1293 0 discriminator 4
 4414 0070 07F11007 		add	r7, r7, #16
 4415 0074 BD46     		mov	sp, r7
 4416 0076 80BD     		pop	{r7, pc}
 4417              	.L355:
 4418              		.align	2
 4419              	.L354:
 4420 0078 00240140 		.word	1073816576
 4421 007c 00280140 		.word	1073817600
 4422 0080 003C0140 		.word	1073822720
 4423              		.cfi_endproc
 4424              	.LFE64:
 4426              		.text
 4427              	.Letext0:
 4428              		.file 2 "d:\\programs\\stm programs\\codebench\\bin\\../lib/gcc/arm-none-eabi/4.7.3/../../../../ar
 4429              		.file 3 "D:\\PROGRAMMING\\stm\\stm-discovery_test_project\\libs\\CMSIS/stm32f10x.h"
 4430              		.file 4 "D:\\PROGRAMMING\\stm\\stm-discovery_test_project\\libs\\StdPeripheralDriver\\inc/stm32f10
 4431              		.file 5 "D:\\PROGRAMMING\\stm\\stm-discovery_test_project\\libs\\CMSIS/core_cm3.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f10x_adc.c
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:19     .text.ADC_DeInit:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:24     .text.ADC_DeInit:00000000 ADC_DeInit
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:119    .text.ADC_DeInit:0000009c $d
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:126    .text.ADC_Init:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:131    .text.ADC_Init:00000000 ADC_Init
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:490    .text.ADC_Init:0000025c $d
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:498    .text.ADC_StructInit:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:503    .text.ADC_StructInit:00000000 ADC_StructInit
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:554    .text.ADC_Cmd:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:559    .text.ADC_Cmd:00000000 ADC_Cmd
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:649    .text.ADC_Cmd:00000078 $d
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:656    .text.ADC_DMACmd:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:661    .text.ADC_DMACmd:00000000 ADC_DMACmd
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:747    .text.ADC_DMACmd:00000070 $d
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:753    .text.ADC_ITConfig:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:758    .text.ADC_ITConfig:00000000 ADC_ITConfig
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:879    .text.ADC_ITConfig:000000ac $d
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:886    .text.ADC_ResetCalibration:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:891    .text.ADC_ResetCalibration:00000000 ADC_ResetCalibration
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:947    .text.ADC_ResetCalibration:00000044 $d
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:954    .text.ADC_GetResetCalibrationStatus:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:959    .text.ADC_GetResetCalibrationStatus:00000000 ADC_GetResetCalibrationStatus
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:1030   .text.ADC_GetResetCalibrationStatus:0000005c $d
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:1037   .text.ADC_StartCalibration:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:1042   .text.ADC_StartCalibration:00000000 ADC_StartCalibration
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:1098   .text.ADC_StartCalibration:00000044 $d
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:1105   .text.ADC_GetCalibrationStatus:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:1110   .text.ADC_GetCalibrationStatus:00000000 ADC_GetCalibrationStatus
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:1181   .text.ADC_GetCalibrationStatus:0000005c $d
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:1188   .text.ADC_SoftwareStartConvCmd:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:1193   .text.ADC_SoftwareStartConvCmd:00000000 ADC_SoftwareStartConvCmd
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:1283   .text.ADC_SoftwareStartConvCmd:00000078 $d
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:1290   .text.ADC_GetSoftwareStartConvStatus:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:1295   .text.ADC_GetSoftwareStartConvStatus:00000000 ADC_GetSoftwareStartConvStatus
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:1366   .text.ADC_GetSoftwareStartConvStatus:0000005c $d
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:1373   .text.ADC_DiscModeChannelCountConfig:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:1378   .text.ADC_DiscModeChannelCountConfig:00000000 ADC_DiscModeChannelCountConfig
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:1476   .text.ADC_DiscModeChannelCountConfig:0000008c $d
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:1483   .text.ADC_DiscModeCmd:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:1488   .text.ADC_DiscModeCmd:00000000 ADC_DiscModeCmd
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:1578   .text.ADC_DiscModeCmd:00000078 $d
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:1585   .text.ADC_RegularChannelConfig:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:1590   .text.ADC_RegularChannelConfig:00000000 ADC_RegularChannelConfig
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:1952   .text.ADC_RegularChannelConfig:00000264 $d
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:1957   .text.ADC_RegularChannelConfig:00000270 $t
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:2002   .text.ADC_ExternalTrigConvCmd:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:2007   .text.ADC_ExternalTrigConvCmd:00000000 ADC_ExternalTrigConvCmd
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:2097   .text.ADC_ExternalTrigConvCmd:00000078 $d
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:2104   .text.ADC_GetConversionValue:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:2109   .text.ADC_GetConversionValue:00000000 ADC_GetConversionValue
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:2164   .text.ADC_GetConversionValue:00000040 $d
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:2171   .text.ADC_GetDualModeConversionValue:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:2176   .text.ADC_GetDualModeConversionValue:00000000 ADC_GetDualModeConversionValue
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:2201   .text.ADC_GetDualModeConversionValue:00000010 $d
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:2206   .text.ADC_AutoInjectedConvCmd:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:2211   .text.ADC_AutoInjectedConvCmd:00000000 ADC_AutoInjectedConvCmd
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:2301   .text.ADC_AutoInjectedConvCmd:00000078 $d
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:2308   .text.ADC_InjectedDiscModeCmd:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:2313   .text.ADC_InjectedDiscModeCmd:00000000 ADC_InjectedDiscModeCmd
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:2403   .text.ADC_InjectedDiscModeCmd:00000078 $d
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:2410   .text.ADC_ExternalTrigInjectedConvConfig:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:2415   .text.ADC_ExternalTrigInjectedConvConfig:00000000 ADC_ExternalTrigInjectedConvConfig
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:2549   .text.ADC_ExternalTrigInjectedConvConfig:000000d4 $d
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:2556   .text.ADC_ExternalTrigInjectedConvCmd:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:2561   .text.ADC_ExternalTrigInjectedConvCmd:00000000 ADC_ExternalTrigInjectedConvCmd
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:2651   .text.ADC_ExternalTrigInjectedConvCmd:00000078 $d
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:2658   .text.ADC_SoftwareStartInjectedConvCmd:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:2663   .text.ADC_SoftwareStartInjectedConvCmd:00000000 ADC_SoftwareStartInjectedConvCmd
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:2753   .text.ADC_SoftwareStartInjectedConvCmd:00000078 $d
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:2760   .text.ADC_GetSoftwareStartInjectedConvCmdStatus:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:2765   .text.ADC_GetSoftwareStartInjectedConvCmdStatus:00000000 ADC_GetSoftwareStartInjectedConvCmdStatus
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:2836   .text.ADC_GetSoftwareStartInjectedConvCmdStatus:0000005c $d
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:2843   .text.ADC_InjectedChannelConfig:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:2848   .text.ADC_InjectedChannelConfig:00000000 ADC_InjectedChannelConfig
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:3189   .text.ADC_InjectedChannelConfig:00000244 $d
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:3196   .text.ADC_InjectedSequencerLengthConfig:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:3201   .text.ADC_InjectedSequencerLengthConfig:00000000 ADC_InjectedSequencerLengthConfig
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:3299   .text.ADC_InjectedSequencerLengthConfig:0000008c $d
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:3306   .text.ADC_SetInjectedOffset:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:3311   .text.ADC_SetInjectedOffset:00000000 ADC_SetInjectedOffset
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:3417   .text.ADC_SetInjectedOffset:00000098 $d
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:3424   .text.ADC_GetInjectedConversionValue:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:3429   .text.ADC_GetInjectedConversionValue:00000000 ADC_GetInjectedConversionValue
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:3525   .text.ADC_GetInjectedConversionValue:00000084 $d
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:3532   .text.ADC_AnalogWatchdogCmd:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:3537   .text.ADC_AnalogWatchdogCmd:00000000 ADC_AnalogWatchdogCmd
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:3651   .text.ADC_AnalogWatchdogCmd:000000a8 $d
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:3661   .text.ADC_AnalogWatchdogThresholdsConfig:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:3666   .text.ADC_AnalogWatchdogThresholdsConfig:00000000 ADC_AnalogWatchdogThresholdsConfig
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:3748   .text.ADC_AnalogWatchdogThresholdsConfig:00000078 $d
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:3755   .text.ADC_AnalogWatchdogSingleChannelConfig:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:3760   .text.ADC_AnalogWatchdogSingleChannelConfig:00000000 ADC_AnalogWatchdogSingleChannelConfig
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:3915   .text.ADC_AnalogWatchdogSingleChannelConfig:000000dc $d
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:3922   .text.ADC_TempSensorVrefintCmd:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:3927   .text.ADC_TempSensorVrefintCmd:00000000 ADC_TempSensorVrefintCmd
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:3991   .text.ADC_TempSensorVrefintCmd:00000050 $d
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:3996   .text.ADC_GetFlagStatus:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:4001   .text.ADC_GetFlagStatus:00000000 ADC_GetFlagStatus
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:4106   .text.ADC_GetFlagStatus:00000090 $d
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:4113   .text.ADC_ClearFlag:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:4118   .text.ADC_ClearFlag:00000000 ADC_ClearFlag
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:4194   .text.ADC_ClearFlag:00000068 $d
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:4201   .text.ADC_GetITStatus:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:4206   .text.ADC_GetITStatus:00000000 ADC_GetITStatus
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:4323   .text.ADC_GetITStatus:000000b0 $d
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:4330   .text.ADC_ClearITPendingBit:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:4335   .text.ADC_ClearITPendingBit:00000000 ADC_ClearITPendingBit
C:\Users\6262~1\AppData\Local\Temp\ccB1my15.s:4420   .text.ADC_ClearITPendingBit:00000078 $d
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.a89c7a2b9e0955e95368adfe2cbc52f6
                           .group:00000000 wm4.stm32f10x.h.51.b859cb68ed44ee02c916b41cb8c68f1c
                           .group:00000000 wm4.core_cm3.h.25.d35e9a9b04ec4aaebae9bf79fff061f9
                           .group:00000000 wm4.stdint.h.10.90b695f550ca6cc3fb08fa83baf01e05
                           .group:00000000 wm4.core_cm3.h.113.b286929a54d33b4c8909a7132437b244
                           .group:00000000 wm4.stm32f10x.h.522.a925aafc848b1f088438cf0e9b167b78
                           .group:00000000 wm4.stm32f10x.h.8304.f7d8ad90959e99679b3257267c3aadfe
                           .group:00000000 wm4.stm32f10x_adc.h.83.4d35a50d598070ecea6f33bcef02c922
                           .group:00000000 wm4.stm32f10x_rcc.h.25.fe8897e7491f2eb0cff54551d08eb765

UNDEFINED SYMBOLS
assert_param
RCC_APB2PeriphResetCmd
