   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f10x_rcc.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.data.APBAHBPrescTable,"aw",%progbits
  19              		.align	2
  22              	APBAHBPrescTable:
  23 0000 00       		.byte	0
  24 0001 00       		.byte	0
  25 0002 00       		.byte	0
  26 0003 00       		.byte	0
  27 0004 01       		.byte	1
  28 0005 02       		.byte	2
  29 0006 03       		.byte	3
  30 0007 04       		.byte	4
  31 0008 01       		.byte	1
  32 0009 02       		.byte	2
  33 000a 03       		.byte	3
  34 000b 04       		.byte	4
  35 000c 06       		.byte	6
  36 000d 07       		.byte	7
  37 000e 08       		.byte	8
  38 000f 09       		.byte	9
  39              		.section	.data.ADCPrescTable,"aw",%progbits
  40              		.align	2
  43              	ADCPrescTable:
  44 0000 02       		.byte	2
  45 0001 04       		.byte	4
  46 0002 06       		.byte	6
  47 0003 08       		.byte	8
  48              		.section	.text.RCC_DeInit,"ax",%progbits
  49              		.align	2
  50              		.global	RCC_DeInit
  51              		.thumb
  52              		.thumb_func
  54              	RCC_DeInit:
  55              	.LFB29:
  56              		.file 1 "../libs/StdPeripheralDriver/src/stm32f10x_rcc.c"
   1:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
   2:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   ******************************************************************************
   3:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @file    stm32f10x_rcc.c
   4:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @author  MCD Application Team
   5:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @version V3.5.0
   6:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @date    11-March-2011
   7:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief   This file provides all the RCC firmware functions.
   8:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   ******************************************************************************
   9:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @attention
  10:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *
  11:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  12:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  13:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  14:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  15:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  16:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  17:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *
  18:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  19:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   ******************************************************************************
  20:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
  21:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
  22:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /* Includes ------------------------------------------------------------------*/
  23:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #include "stm32f10x_rcc.h"
  24:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
  25:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /** @addtogroup STM32F10x_StdPeriph_Driver
  26:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @{
  27:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
  28:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
  29:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /** @defgroup RCC 
  30:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief RCC driver modules
  31:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @{
  32:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */ 
  33:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
  34:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /** @defgroup RCC_Private_TypesDefinitions
  35:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @{
  36:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
  37:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
  38:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
  39:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @}
  40:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
  41:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
  42:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /** @defgroup RCC_Private_Defines
  43:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @{
  44:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
  45:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
  46:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /* ------------ RCC registers bit address in the alias region ----------- */
  47:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define RCC_OFFSET                (RCC_BASE - PERIPH_BASE)
  48:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
  49:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /* --- CR Register ---*/
  50:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
  51:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /* Alias word address of HSION bit */
  52:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CR_OFFSET                 (RCC_OFFSET + 0x00)
  53:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define HSION_BitNumber           0x00
  54:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CR_HSION_BB               (PERIPH_BB_BASE + (CR_OFFSET * 32) + (HSION_BitNumber * 4))
  55:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
  56:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /* Alias word address of PLLON bit */
  57:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define PLLON_BitNumber           0x18
  58:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CR_PLLON_BB               (PERIPH_BB_BASE + (CR_OFFSET * 32) + (PLLON_BitNumber * 4))
  59:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
  60:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
  61:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****  /* Alias word address of PLL2ON bit */
  62:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****  #define PLL2ON_BitNumber          0x1A
  63:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****  #define CR_PLL2ON_BB              (PERIPH_BB_BASE + (CR_OFFSET * 32) + (PLL2ON_BitNumber * 4))
  64:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
  65:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****  /* Alias word address of PLL3ON bit */
  66:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****  #define PLL3ON_BitNumber          0x1C
  67:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****  #define CR_PLL3ON_BB              (PERIPH_BB_BASE + (CR_OFFSET * 32) + (PLL3ON_BitNumber * 4))
  68:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
  69:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
  70:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /* Alias word address of CSSON bit */
  71:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CSSON_BitNumber           0x13
  72:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CR_CSSON_BB               (PERIPH_BB_BASE + (CR_OFFSET * 32) + (CSSON_BitNumber * 4))
  73:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
  74:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /* --- CFGR Register ---*/
  75:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
  76:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /* Alias word address of USBPRE bit */
  77:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CFGR_OFFSET               (RCC_OFFSET + 0x04)
  78:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
  79:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #ifndef STM32F10X_CL
  80:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****  #define USBPRE_BitNumber          0x16
  81:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****  #define CFGR_USBPRE_BB            (PERIPH_BB_BASE + (CFGR_OFFSET * 32) + (USBPRE_BitNumber * 4))
  82:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #else
  83:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****  #define OTGFSPRE_BitNumber        0x16
  84:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****  #define CFGR_OTGFSPRE_BB          (PERIPH_BB_BASE + (CFGR_OFFSET * 32) + (OTGFSPRE_BitNumber * 4))
  85:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
  86:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
  87:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /* --- BDCR Register ---*/
  88:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
  89:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /* Alias word address of RTCEN bit */
  90:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define BDCR_OFFSET               (RCC_OFFSET + 0x20)
  91:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define RTCEN_BitNumber           0x0F
  92:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define BDCR_RTCEN_BB             (PERIPH_BB_BASE + (BDCR_OFFSET * 32) + (RTCEN_BitNumber * 4))
  93:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
  94:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /* Alias word address of BDRST bit */
  95:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define BDRST_BitNumber           0x10
  96:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define BDCR_BDRST_BB             (PERIPH_BB_BASE + (BDCR_OFFSET * 32) + (BDRST_BitNumber * 4))
  97:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
  98:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /* --- CSR Register ---*/
  99:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 100:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /* Alias word address of LSION bit */
 101:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CSR_OFFSET                (RCC_OFFSET + 0x24)
 102:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define LSION_BitNumber           0x00
 103:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CSR_LSION_BB              (PERIPH_BB_BASE + (CSR_OFFSET * 32) + (LSION_BitNumber * 4))
 104:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 105:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
 106:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /* --- CFGR2 Register ---*/
 107:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 108:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****  /* Alias word address of I2S2SRC bit */
 109:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****  #define CFGR2_OFFSET              (RCC_OFFSET + 0x2C)
 110:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****  #define I2S2SRC_BitNumber         0x11
 111:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****  #define CFGR2_I2S2SRC_BB          (PERIPH_BB_BASE + (CFGR2_OFFSET * 32) + (I2S2SRC_BitNumber * 4))
 112:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 113:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****  /* Alias word address of I2S3SRC bit */
 114:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****  #define I2S3SRC_BitNumber         0x12
 115:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****  #define CFGR2_I2S3SRC_BB          (PERIPH_BB_BASE + (CFGR2_OFFSET * 32) + (I2S3SRC_BitNumber * 4))
 116:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */
 117:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 118:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /* ---------------------- RCC registers bit mask ------------------------ */
 119:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 120:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /* CR register bit mask */
 121:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CR_HSEBYP_Reset           ((uint32_t)0xFFFBFFFF)
 122:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CR_HSEBYP_Set             ((uint32_t)0x00040000)
 123:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CR_HSEON_Reset            ((uint32_t)0xFFFEFFFF)
 124:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CR_HSEON_Set              ((uint32_t)0x00010000)
 125:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CR_HSITRIM_Mask           ((uint32_t)0xFFFFFF07)
 126:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 127:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /* CFGR register bit mask */
 128:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL) || defined 
 129:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****  #define CFGR_PLL_Mask            ((uint32_t)0xFFC2FFFF)
 130:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #else
 131:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****  #define CFGR_PLL_Mask            ((uint32_t)0xFFC0FFFF)
 132:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
 133:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 134:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CFGR_PLLMull_Mask         ((uint32_t)0x003C0000)
 135:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CFGR_PLLSRC_Mask          ((uint32_t)0x00010000)
 136:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CFGR_PLLXTPRE_Mask        ((uint32_t)0x00020000)
 137:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CFGR_SWS_Mask             ((uint32_t)0x0000000C)
 138:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CFGR_SW_Mask              ((uint32_t)0xFFFFFFFC)
 139:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CFGR_HPRE_Reset_Mask      ((uint32_t)0xFFFFFF0F)
 140:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CFGR_HPRE_Set_Mask        ((uint32_t)0x000000F0)
 141:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CFGR_PPRE1_Reset_Mask     ((uint32_t)0xFFFFF8FF)
 142:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CFGR_PPRE1_Set_Mask       ((uint32_t)0x00000700)
 143:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CFGR_PPRE2_Reset_Mask     ((uint32_t)0xFFFFC7FF)
 144:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CFGR_PPRE2_Set_Mask       ((uint32_t)0x00003800)
 145:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CFGR_ADCPRE_Reset_Mask    ((uint32_t)0xFFFF3FFF)
 146:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CFGR_ADCPRE_Set_Mask      ((uint32_t)0x0000C000)
 147:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 148:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /* CSR register bit mask */
 149:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CSR_RMVF_Set              ((uint32_t)0x01000000)
 150:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 151:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL) || defined 
 152:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /* CFGR2 register bit mask */
 153:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****  #define CFGR2_PREDIV1SRC         ((uint32_t)0x00010000)
 154:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****  #define CFGR2_PREDIV1            ((uint32_t)0x0000000F)
 155:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #endif
 156:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
 157:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****  #define CFGR2_PREDIV2            ((uint32_t)0x000000F0)
 158:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****  #define CFGR2_PLL2MUL            ((uint32_t)0x00000F00)
 159:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****  #define CFGR2_PLL3MUL            ((uint32_t)0x0000F000)
 160:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
 161:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 162:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /* RCC Flag Mask */
 163:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define FLAG_Mask                 ((uint8_t)0x1F)
 164:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 165:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /* CIR register byte 2 (Bits[15:8]) base address */
 166:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CIR_BYTE2_ADDRESS         ((uint32_t)0x40021009)
 167:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 168:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /* CIR register byte 3 (Bits[23:16]) base address */
 169:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CIR_BYTE3_ADDRESS         ((uint32_t)0x4002100A)
 170:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 171:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /* CFGR register byte 4 (Bits[31:24]) base address */
 172:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define CFGR_BYTE4_ADDRESS        ((uint32_t)0x40021007)
 173:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 174:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /* BDCR register base address */
 175:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #define BDCR_ADDRESS              (PERIPH_BASE + BDCR_OFFSET)
 176:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 177:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 178:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @}
 179:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */ 
 180:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 181:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /** @defgroup RCC_Private_Macros
 182:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @{
 183:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */ 
 184:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 185:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 186:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @}
 187:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */ 
 188:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 189:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /** @defgroup RCC_Private_Variables
 190:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @{
 191:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */ 
 192:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 193:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** static __I uint8_t APBAHBPrescTable[16] = {0, 0, 0, 0, 1, 2, 3, 4, 1, 2, 3, 4, 6, 7, 8, 9};
 194:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** static __I uint8_t ADCPrescTable[4] = {2, 4, 6, 8};
 195:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 196:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 197:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @}
 198:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 199:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 200:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /** @defgroup RCC_Private_FunctionPrototypes
 201:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @{
 202:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 203:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 204:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 205:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @}
 206:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 207:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 208:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /** @defgroup RCC_Private_Functions
 209:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @{
 210:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 211:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 212:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 213:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Resets the RCC clock configuration to the default reset state.
 214:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  None
 215:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
 216:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 217:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_DeInit(void)
 218:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
  57              		.loc 1 218 0
  58              		.cfi_startproc
  59              		@ args = 0, pretend = 0, frame = 0
  60              		@ frame_needed = 1, uses_anonymous_args = 0
  61              		@ link register save eliminated.
  62 0000 80B4     		push	{r7}
  63              	.LCFI0:
  64              		.cfi_def_cfa_offset 4
  65              		.cfi_offset 7, -4
  66 0002 00AF     		add	r7, sp, #0
  67              	.LCFI1:
  68              		.cfi_def_cfa_register 7
 219:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Set HSION bit */
 220:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC->CR |= (uint32_t)0x00000001;
  69              		.loc 1 220 0
  70 0004 154B     		ldr	r3, .L2
  71 0006 154A     		ldr	r2, .L2
  72 0008 1268     		ldr	r2, [r2, #0]
  73 000a 42F00102 		orr	r2, r2, #1
  74 000e 1A60     		str	r2, [r3, #0]
 221:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 222:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Reset SW, HPRE, PPRE1, PPRE2, ADCPRE and MCO bits */
 223:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #ifndef STM32F10X_CL
 224:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC->CFGR &= (uint32_t)0xF8FF0000;
  75              		.loc 1 224 0
  76 0010 124A     		ldr	r2, .L2
  77 0012 124B     		ldr	r3, .L2
  78 0014 5968     		ldr	r1, [r3, #4]
  79 0016 124B     		ldr	r3, .L2+4
  80 0018 0B40     		ands	r3, r3, r1
  81 001a 5360     		str	r3, [r2, #4]
 225:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #else
 226:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC->CFGR &= (uint32_t)0xF0FF0000;
 227:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */   
 228:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   
 229:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Reset HSEON, CSSON and PLLON bits */
 230:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC->CR &= (uint32_t)0xFEF6FFFF;
  82              		.loc 1 230 0
  83 001c 0F4A     		ldr	r2, .L2
  84 001e 0F4B     		ldr	r3, .L2
  85 0020 1B68     		ldr	r3, [r3, #0]
  86 0022 23F08473 		bic	r3, r3, #17301504
  87 0026 23F48033 		bic	r3, r3, #65536
  88 002a 1360     		str	r3, [r2, #0]
 231:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 232:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Reset HSEBYP bit */
 233:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC->CR &= (uint32_t)0xFFFBFFFF;
  89              		.loc 1 233 0
  90 002c 0B4B     		ldr	r3, .L2
  91 002e 0B4A     		ldr	r2, .L2
  92 0030 1268     		ldr	r2, [r2, #0]
  93 0032 22F48022 		bic	r2, r2, #262144
  94 0036 1A60     		str	r2, [r3, #0]
 234:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 235:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Reset PLLSRC, PLLXTPRE, PLLMUL and USBPRE/OTGFSPRE bits */
 236:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC->CFGR &= (uint32_t)0xFF80FFFF;
  95              		.loc 1 236 0
  96 0038 084B     		ldr	r3, .L2
  97 003a 084A     		ldr	r2, .L2
  98 003c 5268     		ldr	r2, [r2, #4]
  99 003e 22F4FE02 		bic	r2, r2, #8323072
 100 0042 5A60     		str	r2, [r3, #4]
 237:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 238:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
 239:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Reset PLL2ON and PLL3ON bits */
 240:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC->CR &= (uint32_t)0xEBFFFFFF;
 241:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 242:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Disable all interrupts and clear pending bits  */
 243:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC->CIR = 0x00FF0000;
 244:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 245:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Reset CFGR2 register */
 246:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC->CFGR2 = 0x00000000;
 247:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #elif defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL)
 248:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Disable all interrupts and clear pending bits  */
 249:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC->CIR = 0x009F0000;
 101              		.loc 1 249 0
 102 0044 054B     		ldr	r3, .L2
 103 0046 4FF41F02 		mov	r2, #10420224
 104 004a 9A60     		str	r2, [r3, #8]
 250:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 251:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Reset CFGR2 register */
 252:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC->CFGR2 = 0x00000000;      
 105              		.loc 1 252 0
 106 004c 034B     		ldr	r3, .L2
 107 004e 4FF00002 		mov	r2, #0
 108 0052 DA62     		str	r2, [r3, #44]
 253:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #else
 254:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Disable all interrupts and clear pending bits  */
 255:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC->CIR = 0x009F0000;
 256:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */
 257:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 258:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 109              		.loc 1 258 0
 110 0054 BD46     		mov	sp, r7
 111 0056 80BC     		pop	{r7}
 112 0058 7047     		bx	lr
 113              	.L3:
 114 005a 00BF     		.align	2
 115              	.L2:
 116 005c 00100240 		.word	1073876992
 117 0060 0000FFF8 		.word	-117506048
 118              		.cfi_endproc
 119              	.LFE29:
 121              		.section	.text.RCC_HSEConfig,"ax",%progbits
 122              		.align	2
 123              		.global	RCC_HSEConfig
 124              		.thumb
 125              		.thumb_func
 127              	RCC_HSEConfig:
 128              	.LFB30:
 259:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 260:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 261:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Configures the External High Speed oscillator (HSE).
 262:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @note   HSE can not be stopped if it is used directly or through the PLL as system clock.
 263:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_HSE: specifies the new state of the HSE.
 264:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 265:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_HSE_OFF: HSE oscillator OFF
 266:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_HSE_ON: HSE oscillator ON
 267:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_HSE_Bypass: HSE oscillator bypassed with external clock
 268:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
 269:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 270:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_HSEConfig(uint32_t RCC_HSE)
 271:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 129              		.loc 1 271 0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 8
 132              		@ frame_needed = 1, uses_anonymous_args = 0
 133              		@ link register save eliminated.
 134 0000 80B4     		push	{r7}
 135              	.LCFI2:
 136              		.cfi_def_cfa_offset 4
 137              		.cfi_offset 7, -4
 138 0002 83B0     		sub	sp, sp, #12
 139              	.LCFI3:
 140              		.cfi_def_cfa_offset 16
 141 0004 00AF     		add	r7, sp, #0
 142              	.LCFI4:
 143              		.cfi_def_cfa_register 7
 144 0006 7860     		str	r0, [r7, #4]
 272:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 273:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_HSE(RCC_HSE));
 274:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Reset HSEON and HSEBYP bits before configuring the HSE ------------------*/
 275:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Reset HSEON bit */
 276:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC->CR &= CR_HSEON_Reset;
 145              		.loc 1 276 0
 146 0008 134B     		ldr	r3, .L10
 147 000a 134A     		ldr	r2, .L10
 148 000c 1268     		ldr	r2, [r2, #0]
 149 000e 22F48032 		bic	r2, r2, #65536
 150 0012 1A60     		str	r2, [r3, #0]
 277:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Reset HSEBYP bit */
 278:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC->CR &= CR_HSEBYP_Reset;
 151              		.loc 1 278 0
 152 0014 104B     		ldr	r3, .L10
 153 0016 104A     		ldr	r2, .L10
 154 0018 1268     		ldr	r2, [r2, #0]
 155 001a 22F48022 		bic	r2, r2, #262144
 156 001e 1A60     		str	r2, [r3, #0]
 279:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Configure HSE (RCC_HSE_OFF is already covered by the code section above) */
 280:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   switch(RCC_HSE)
 157              		.loc 1 280 0
 158 0020 7B68     		ldr	r3, [r7, #4]
 159 0022 B3F5803F 		cmp	r3, #65536
 160 0026 03D0     		beq	.L6
 161 0028 B3F5802F 		cmp	r3, #262144
 162 002c 07D0     		beq	.L7
 163 002e 0DE0     		b	.L9
 164              	.L6:
 281:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   {
 282:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****     case RCC_HSE_ON:
 283:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       /* Set HSEON bit */
 284:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       RCC->CR |= CR_HSEON_Set;
 165              		.loc 1 284 0
 166 0030 094B     		ldr	r3, .L10
 167 0032 094A     		ldr	r2, .L10
 168 0034 1268     		ldr	r2, [r2, #0]
 169 0036 42F48032 		orr	r2, r2, #65536
 170 003a 1A60     		str	r2, [r3, #0]
 285:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       break;
 171              		.loc 1 285 0
 172 003c 07E0     		b	.L4
 173              	.L7:
 286:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       
 287:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****     case RCC_HSE_Bypass:
 288:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       /* Set HSEBYP and HSEON bits */
 289:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       RCC->CR |= CR_HSEBYP_Set | CR_HSEON_Set;
 174              		.loc 1 289 0
 175 003e 064B     		ldr	r3, .L10
 176 0040 054A     		ldr	r2, .L10
 177 0042 1268     		ldr	r2, [r2, #0]
 178 0044 42F4A022 		orr	r2, r2, #327680
 179 0048 1A60     		str	r2, [r3, #0]
 290:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       break;
 180              		.loc 1 290 0
 181 004a 00E0     		b	.L4
 182              	.L9:
 291:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       
 292:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****     default:
 293:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       break;
 183              		.loc 1 293 0
 184 004c 00BF     		nop
 185              	.L4:
 294:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   }
 295:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 186              		.loc 1 295 0
 187 004e 07F10C07 		add	r7, r7, #12
 188 0052 BD46     		mov	sp, r7
 189 0054 80BC     		pop	{r7}
 190 0056 7047     		bx	lr
 191              	.L11:
 192              		.align	2
 193              	.L10:
 194 0058 00100240 		.word	1073876992
 195              		.cfi_endproc
 196              	.LFE30:
 198              		.section	.text.RCC_WaitForHSEStartUp,"ax",%progbits
 199              		.align	2
 200              		.global	RCC_WaitForHSEStartUp
 201              		.thumb
 202              		.thumb_func
 204              	RCC_WaitForHSEStartUp:
 205              	.LFB31:
 296:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 297:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 298:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Waits for HSE start-up.
 299:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  None
 300:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval An ErrorStatus enumuration value:
 301:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * - SUCCESS: HSE oscillator is stable and ready to use
 302:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * - ERROR: HSE oscillator not yet ready
 303:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 304:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** ErrorStatus RCC_WaitForHSEStartUp(void)
 305:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 206              		.loc 1 305 0
 207              		.cfi_startproc
 208              		@ args = 0, pretend = 0, frame = 8
 209              		@ frame_needed = 1, uses_anonymous_args = 0
 210 0000 80B5     		push	{r7, lr}
 211              	.LCFI5:
 212              		.cfi_def_cfa_offset 8
 213              		.cfi_offset 7, -8
 214              		.cfi_offset 14, -4
 215 0002 82B0     		sub	sp, sp, #8
 216              	.LCFI6:
 217              		.cfi_def_cfa_offset 16
 218 0004 00AF     		add	r7, sp, #0
 219              	.LCFI7:
 220              		.cfi_def_cfa_register 7
 306:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   __IO uint32_t StartUpCounter = 0;
 221              		.loc 1 306 0
 222 0006 4FF00003 		mov	r3, #0
 223 000a 3B60     		str	r3, [r7, #0]
 307:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   ErrorStatus status = ERROR;
 224              		.loc 1 307 0
 225 000c 4FF00003 		mov	r3, #0
 226 0010 FB71     		strb	r3, [r7, #7]
 308:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   FlagStatus HSEStatus = RESET;
 227              		.loc 1 308 0
 228 0012 4FF00003 		mov	r3, #0
 229 0016 BB71     		strb	r3, [r7, #6]
 230              	.L14:
 309:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   
 310:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 311:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   do
 312:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   {
 313:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****     HSEStatus = RCC_GetFlagStatus(RCC_FLAG_HSERDY);
 231              		.loc 1 313 0 discriminator 1
 232 0018 4FF03100 		mov	r0, #49
 233 001c FFF7FEFF 		bl	RCC_GetFlagStatus
 234 0020 0346     		mov	r3, r0
 235 0022 BB71     		strb	r3, [r7, #6]
 314:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****     StartUpCounter++;  
 236              		.loc 1 314 0 discriminator 1
 237 0024 3B68     		ldr	r3, [r7, #0]
 238 0026 03F10103 		add	r3, r3, #1
 239 002a 3B60     		str	r3, [r7, #0]
 315:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   } while((StartUpCounter != HSE_STARTUP_TIMEOUT) && (HSEStatus == RESET));
 240              		.loc 1 315 0 discriminator 1
 241 002c 3B68     		ldr	r3, [r7, #0]
 242 002e B3F5A06F 		cmp	r3, #1280
 243 0032 02D0     		beq	.L13
 244 0034 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 245 0036 002B     		cmp	r3, #0
 246 0038 EED0     		beq	.L14
 247              	.L13:
 316:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   
 317:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   if (RCC_GetFlagStatus(RCC_FLAG_HSERDY) != RESET)
 248              		.loc 1 317 0
 249 003a 4FF03100 		mov	r0, #49
 250 003e FFF7FEFF 		bl	RCC_GetFlagStatus
 251 0042 0346     		mov	r3, r0
 252 0044 002B     		cmp	r3, #0
 253 0046 03D0     		beq	.L15
 318:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   {
 319:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****     status = SUCCESS;
 254              		.loc 1 319 0
 255 0048 4FF00103 		mov	r3, #1
 256 004c FB71     		strb	r3, [r7, #7]
 257 004e 02E0     		b	.L16
 258              	.L15:
 320:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   }
 321:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   else
 322:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   {
 323:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****     status = ERROR;
 259              		.loc 1 323 0
 260 0050 4FF00003 		mov	r3, #0
 261 0054 FB71     		strb	r3, [r7, #7]
 262              	.L16:
 324:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   }  
 325:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   return (status);
 263              		.loc 1 325 0
 264 0056 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 326:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 265              		.loc 1 326 0
 266 0058 1846     		mov	r0, r3
 267 005a 07F10807 		add	r7, r7, #8
 268 005e BD46     		mov	sp, r7
 269 0060 80BD     		pop	{r7, pc}
 270              		.cfi_endproc
 271              	.LFE31:
 273 0062 00BF     		.section	.text.RCC_AdjustHSICalibrationValue,"ax",%progbits
 274              		.align	2
 275              		.global	RCC_AdjustHSICalibrationValue
 276              		.thumb
 277              		.thumb_func
 279              	RCC_AdjustHSICalibrationValue:
 280              	.LFB32:
 327:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 328:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 329:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Adjusts the Internal High Speed oscillator (HSI) calibration value.
 330:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  HSICalibrationValue: specifies the calibration trimming value.
 331:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter must be a number between 0 and 0x1F.
 332:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
 333:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 334:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_AdjustHSICalibrationValue(uint8_t HSICalibrationValue)
 335:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 281              		.loc 1 335 0
 282              		.cfi_startproc
 283              		@ args = 0, pretend = 0, frame = 16
 284              		@ frame_needed = 1, uses_anonymous_args = 0
 285              		@ link register save eliminated.
 286 0000 80B4     		push	{r7}
 287              	.LCFI8:
 288              		.cfi_def_cfa_offset 4
 289              		.cfi_offset 7, -4
 290 0002 85B0     		sub	sp, sp, #20
 291              	.LCFI9:
 292              		.cfi_def_cfa_offset 24
 293 0004 00AF     		add	r7, sp, #0
 294              	.LCFI10:
 295              		.cfi_def_cfa_register 7
 296 0006 0346     		mov	r3, r0
 297 0008 FB71     		strb	r3, [r7, #7]
 336:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 298              		.loc 1 336 0
 299 000a 4FF00003 		mov	r3, #0
 300 000e FB60     		str	r3, [r7, #12]
 337:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 338:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_CALIBRATION_VALUE(HSICalibrationValue));
 339:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CR;
 301              		.loc 1 339 0
 302 0010 0A4B     		ldr	r3, .L19
 303 0012 1B68     		ldr	r3, [r3, #0]
 304 0014 FB60     		str	r3, [r7, #12]
 340:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Clear HSITRIM[4:0] bits */
 341:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg &= CR_HSITRIM_Mask;
 305              		.loc 1 341 0
 306 0016 FB68     		ldr	r3, [r7, #12]
 307 0018 23F0F803 		bic	r3, r3, #248
 308 001c FB60     		str	r3, [r7, #12]
 342:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Set the HSITRIM[4:0] bits according to HSICalibrationValue value */
 343:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg |= (uint32_t)HSICalibrationValue << 3;
 309              		.loc 1 343 0
 310 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 311 0020 4FEAC303 		lsl	r3, r3, #3
 312 0024 FA68     		ldr	r2, [r7, #12]
 313 0026 1343     		orrs	r3, r3, r2
 314 0028 FB60     		str	r3, [r7, #12]
 344:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Store the new value */
 345:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC->CR = tmpreg;
 315              		.loc 1 345 0
 316 002a 044B     		ldr	r3, .L19
 317 002c FA68     		ldr	r2, [r7, #12]
 318 002e 1A60     		str	r2, [r3, #0]
 346:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 319              		.loc 1 346 0
 320 0030 07F11407 		add	r7, r7, #20
 321 0034 BD46     		mov	sp, r7
 322 0036 80BC     		pop	{r7}
 323 0038 7047     		bx	lr
 324              	.L20:
 325 003a 00BF     		.align	2
 326              	.L19:
 327 003c 00100240 		.word	1073876992
 328              		.cfi_endproc
 329              	.LFE32:
 331              		.section	.text.RCC_HSICmd,"ax",%progbits
 332              		.align	2
 333              		.global	RCC_HSICmd
 334              		.thumb
 335              		.thumb_func
 337              	RCC_HSICmd:
 338              	.LFB33:
 347:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 348:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 349:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the Internal High Speed oscillator (HSI).
 350:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @note   HSI can not be stopped if it is used directly or through the PLL as system clock.
 351:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the HSI. This parameter can be: ENABLE or DISABLE.
 352:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
 353:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 354:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_HSICmd(FunctionalState NewState)
 355:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 339              		.loc 1 355 0
 340              		.cfi_startproc
 341              		@ args = 0, pretend = 0, frame = 8
 342              		@ frame_needed = 1, uses_anonymous_args = 0
 343              		@ link register save eliminated.
 344 0000 80B4     		push	{r7}
 345              	.LCFI11:
 346              		.cfi_def_cfa_offset 4
 347              		.cfi_offset 7, -4
 348 0002 83B0     		sub	sp, sp, #12
 349              	.LCFI12:
 350              		.cfi_def_cfa_offset 16
 351 0004 00AF     		add	r7, sp, #0
 352              	.LCFI13:
 353              		.cfi_def_cfa_register 7
 354 0006 0346     		mov	r3, r0
 355 0008 FB71     		strb	r3, [r7, #7]
 356:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 357:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 358:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CR_HSION_BB = (uint32_t)NewState;
 356              		.loc 1 358 0
 357 000a 044B     		ldr	r3, .L22
 358 000c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 359 000e 1A60     		str	r2, [r3, #0]
 359:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 360              		.loc 1 359 0
 361 0010 07F10C07 		add	r7, r7, #12
 362 0014 BD46     		mov	sp, r7
 363 0016 80BC     		pop	{r7}
 364 0018 7047     		bx	lr
 365              	.L23:
 366 001a 00BF     		.align	2
 367              	.L22:
 368 001c 00004242 		.word	1111621632
 369              		.cfi_endproc
 370              	.LFE33:
 372              		.section	.text.RCC_PLLConfig,"ax",%progbits
 373              		.align	2
 374              		.global	RCC_PLLConfig
 375              		.thumb
 376              		.thumb_func
 378              	RCC_PLLConfig:
 379              	.LFB34:
 360:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 361:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 362:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Configures the PLL clock source and multiplication factor.
 363:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @note   This function must be used only when the PLL is disabled.
 364:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_PLLSource: specifies the PLL entry clock source.
 365:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices or @b STM32_Value_line_devices, 
 366:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   this parameter can be one of the following values:
 367:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_PLLSource_HSI_Div2: HSI oscillator clock divided by 2 selected as PLL clock entry
 368:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_PLLSource_PREDIV1: PREDIV1 clock selected as PLL clock entry
 369:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be one of the following values:
 370:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_PLLSource_HSI_Div2: HSI oscillator clock divided by 2 selected as PLL clock entry
 371:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_PLLSource_HSE_Div1: HSE oscillator clock selected as PLL clock entry
 372:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_PLLSource_HSE_Div2: HSE oscillator clock divided by 2 selected as PLL clock entry 
 373:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_PLLMul: specifies the PLL multiplication factor.
 374:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be RCC_PLLMul_x where x:{[4,9], 6_
 375:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be RCC_PLLMul_x where x:[2,16]  
 376:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
 377:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 378:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_PLLConfig(uint32_t RCC_PLLSource, uint32_t RCC_PLLMul)
 379:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 380              		.loc 1 379 0
 381              		.cfi_startproc
 382              		@ args = 0, pretend = 0, frame = 16
 383              		@ frame_needed = 1, uses_anonymous_args = 0
 384              		@ link register save eliminated.
 385 0000 80B4     		push	{r7}
 386              	.LCFI14:
 387              		.cfi_def_cfa_offset 4
 388              		.cfi_offset 7, -4
 389 0002 85B0     		sub	sp, sp, #20
 390              	.LCFI15:
 391              		.cfi_def_cfa_offset 24
 392 0004 00AF     		add	r7, sp, #0
 393              	.LCFI16:
 394              		.cfi_def_cfa_register 7
 395 0006 7860     		str	r0, [r7, #4]
 396 0008 3960     		str	r1, [r7, #0]
 380:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 397              		.loc 1 380 0
 398 000a 4FF00003 		mov	r3, #0
 399 000e FB60     		str	r3, [r7, #12]
 381:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 382:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 383:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PLL_SOURCE(RCC_PLLSource));
 384:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PLL_MUL(RCC_PLLMul));
 385:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 386:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR;
 400              		.loc 1 386 0
 401 0010 0A4B     		ldr	r3, .L25
 402 0012 5B68     		ldr	r3, [r3, #4]
 403 0014 FB60     		str	r3, [r7, #12]
 387:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Clear PLLSRC, PLLXTPRE and PLLMUL[3:0] bits */
 388:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg &= CFGR_PLL_Mask;
 404              		.loc 1 388 0
 405 0016 FB68     		ldr	r3, [r7, #12]
 406 0018 23F47413 		bic	r3, r3, #3997696
 407 001c FB60     		str	r3, [r7, #12]
 389:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Set the PLL configuration bits */
 390:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_PLLSource | RCC_PLLMul;
 408              		.loc 1 390 0
 409 001e 7A68     		ldr	r2, [r7, #4]
 410 0020 3B68     		ldr	r3, [r7, #0]
 411 0022 1343     		orrs	r3, r3, r2
 412 0024 FA68     		ldr	r2, [r7, #12]
 413 0026 1343     		orrs	r3, r3, r2
 414 0028 FB60     		str	r3, [r7, #12]
 391:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Store the new value */
 392:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC->CFGR = tmpreg;
 415              		.loc 1 392 0
 416 002a 044B     		ldr	r3, .L25
 417 002c FA68     		ldr	r2, [r7, #12]
 418 002e 5A60     		str	r2, [r3, #4]
 393:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 419              		.loc 1 393 0
 420 0030 07F11407 		add	r7, r7, #20
 421 0034 BD46     		mov	sp, r7
 422 0036 80BC     		pop	{r7}
 423 0038 7047     		bx	lr
 424              	.L26:
 425 003a 00BF     		.align	2
 426              	.L25:
 427 003c 00100240 		.word	1073876992
 428              		.cfi_endproc
 429              	.LFE34:
 431              		.section	.text.RCC_PLLCmd,"ax",%progbits
 432              		.align	2
 433              		.global	RCC_PLLCmd
 434              		.thumb
 435              		.thumb_func
 437              	RCC_PLLCmd:
 438              	.LFB35:
 394:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 395:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 396:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the PLL.
 397:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @note   The PLL can not be disabled if it is used as system clock.
 398:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the PLL. This parameter can be: ENABLE or DISABLE.
 399:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
 400:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 401:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_PLLCmd(FunctionalState NewState)
 402:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 439              		.loc 1 402 0
 440              		.cfi_startproc
 441              		@ args = 0, pretend = 0, frame = 8
 442              		@ frame_needed = 1, uses_anonymous_args = 0
 443              		@ link register save eliminated.
 444 0000 80B4     		push	{r7}
 445              	.LCFI17:
 446              		.cfi_def_cfa_offset 4
 447              		.cfi_offset 7, -4
 448 0002 83B0     		sub	sp, sp, #12
 449              	.LCFI18:
 450              		.cfi_def_cfa_offset 16
 451 0004 00AF     		add	r7, sp, #0
 452              	.LCFI19:
 453              		.cfi_def_cfa_register 7
 454 0006 0346     		mov	r3, r0
 455 0008 FB71     		strb	r3, [r7, #7]
 403:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 404:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 405:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 406:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CR_PLLON_BB = (uint32_t)NewState;
 456              		.loc 1 406 0
 457 000a 044B     		ldr	r3, .L28
 458 000c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 459 000e 1A60     		str	r2, [r3, #0]
 407:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 460              		.loc 1 407 0
 461 0010 07F10C07 		add	r7, r7, #12
 462 0014 BD46     		mov	sp, r7
 463 0016 80BC     		pop	{r7}
 464 0018 7047     		bx	lr
 465              	.L29:
 466 001a 00BF     		.align	2
 467              	.L28:
 468 001c 60004242 		.word	1111621728
 469              		.cfi_endproc
 470              	.LFE35:
 472              		.section	.text.RCC_PREDIV1Config,"ax",%progbits
 473              		.align	2
 474              		.global	RCC_PREDIV1Config
 475              		.thumb
 476              		.thumb_func
 478              	RCC_PREDIV1Config:
 479              	.LFB36:
 408:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 409:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL) || defined 
 410:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 411:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Configures the PREDIV1 division factor.
 412:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @note 
 413:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   - This function must be used only when the PLL is disabled.
 414:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line and Value line 
 415:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     devices.
 416:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_PREDIV1_Source: specifies the PREDIV1 clock source.
 417:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 418:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_PREDIV1_Source_HSE: HSE selected as PREDIV1 clock
 419:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_PREDIV1_Source_PLL2: PLL2 selected as PREDIV1 clock
 420:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @note 
 421:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   For @b STM32_Value_line_devices this parameter is always RCC_PREDIV1_Source_HSE  
 422:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_PREDIV1_Div: specifies the PREDIV1 clock division factor.
 423:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be RCC_PREDIV1_Divx where x:[1,16]
 424:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
 425:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 426:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_PREDIV1Config(uint32_t RCC_PREDIV1_Source, uint32_t RCC_PREDIV1_Div)
 427:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 480              		.loc 1 427 0
 481              		.cfi_startproc
 482              		@ args = 0, pretend = 0, frame = 16
 483              		@ frame_needed = 1, uses_anonymous_args = 0
 484              		@ link register save eliminated.
 485 0000 80B4     		push	{r7}
 486              	.LCFI20:
 487              		.cfi_def_cfa_offset 4
 488              		.cfi_offset 7, -4
 489 0002 85B0     		sub	sp, sp, #20
 490              	.LCFI21:
 491              		.cfi_def_cfa_offset 24
 492 0004 00AF     		add	r7, sp, #0
 493              	.LCFI22:
 494              		.cfi_def_cfa_register 7
 495 0006 7860     		str	r0, [r7, #4]
 496 0008 3960     		str	r1, [r7, #0]
 428:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 497              		.loc 1 428 0
 498 000a 4FF00003 		mov	r3, #0
 499 000e FB60     		str	r3, [r7, #12]
 429:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   
 430:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 431:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PREDIV1_SOURCE(RCC_PREDIV1_Source));
 432:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PREDIV1(RCC_PREDIV1_Div));
 433:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 434:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR2;
 500              		.loc 1 434 0
 501 0010 0B4B     		ldr	r3, .L31
 502 0012 DB6A     		ldr	r3, [r3, #44]
 503 0014 FB60     		str	r3, [r7, #12]
 435:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Clear PREDIV1[3:0] and PREDIV1SRC bits */
 436:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg &= ~(CFGR2_PREDIV1 | CFGR2_PREDIV1SRC);
 504              		.loc 1 436 0
 505 0016 FB68     		ldr	r3, [r7, #12]
 506 0018 23F48033 		bic	r3, r3, #65536
 507 001c 23F00F03 		bic	r3, r3, #15
 508 0020 FB60     		str	r3, [r7, #12]
 437:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Set the PREDIV1 clock source and division factor */
 438:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_PREDIV1_Source | RCC_PREDIV1_Div ;
 509              		.loc 1 438 0
 510 0022 7A68     		ldr	r2, [r7, #4]
 511 0024 3B68     		ldr	r3, [r7, #0]
 512 0026 1343     		orrs	r3, r3, r2
 513 0028 FA68     		ldr	r2, [r7, #12]
 514 002a 1343     		orrs	r3, r3, r2
 515 002c FB60     		str	r3, [r7, #12]
 439:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Store the new value */
 440:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC->CFGR2 = tmpreg;
 516              		.loc 1 440 0
 517 002e 044B     		ldr	r3, .L31
 518 0030 FA68     		ldr	r2, [r7, #12]
 519 0032 DA62     		str	r2, [r3, #44]
 441:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 520              		.loc 1 441 0
 521 0034 07F11407 		add	r7, r7, #20
 522 0038 BD46     		mov	sp, r7
 523 003a 80BC     		pop	{r7}
 524 003c 7047     		bx	lr
 525              	.L32:
 526 003e 00BF     		.align	2
 527              	.L31:
 528 0040 00100240 		.word	1073876992
 529              		.cfi_endproc
 530              	.LFE36:
 532              		.section	.text.RCC_SYSCLKConfig,"ax",%progbits
 533              		.align	2
 534              		.global	RCC_SYSCLKConfig
 535              		.thumb
 536              		.thumb_func
 538              	RCC_SYSCLKConfig:
 539              	.LFB37:
 442:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #endif
 443:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 444:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
 445:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 446:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Configures the PREDIV2 division factor.
 447:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @note 
 448:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   - This function must be used only when both PLL2 and PLL3 are disabled.
 449:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line devices.
 450:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_PREDIV2_Div: specifies the PREDIV2 clock division factor.
 451:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be RCC_PREDIV2_Divx where x:[1,16]
 452:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
 453:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 454:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_PREDIV2Config(uint32_t RCC_PREDIV2_Div)
 455:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 456:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 457:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 458:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 459:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PREDIV2(RCC_PREDIV2_Div));
 460:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 461:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR2;
 462:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Clear PREDIV2[3:0] bits */
 463:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg &= ~CFGR2_PREDIV2;
 464:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Set the PREDIV2 division factor */
 465:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_PREDIV2_Div;
 466:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Store the new value */
 467:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC->CFGR2 = tmpreg;
 468:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 469:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 470:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 471:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Configures the PLL2 multiplication factor.
 472:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @note
 473:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   - This function must be used only when the PLL2 is disabled.
 474:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line devices.
 475:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_PLL2Mul: specifies the PLL2 multiplication factor.
 476:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be RCC_PLL2Mul_x where x:{[8,14], 16, 20}
 477:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
 478:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 479:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_PLL2Config(uint32_t RCC_PLL2Mul)
 480:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 481:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 482:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 483:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 484:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PLL2_MUL(RCC_PLL2Mul));
 485:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 486:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR2;
 487:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Clear PLL2Mul[3:0] bits */
 488:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg &= ~CFGR2_PLL2MUL;
 489:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Set the PLL2 configuration bits */
 490:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_PLL2Mul;
 491:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Store the new value */
 492:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC->CFGR2 = tmpreg;
 493:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 494:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 495:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 496:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 497:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the PLL2.
 498:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @note 
 499:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   - The PLL2 can not be disabled if it is used indirectly as system clock
 500:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     (i.e. it is used as PLL clock entry that is used as System clock).
 501:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line devices.
 502:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the PLL2. This parameter can be: ENABLE or DISABLE.
 503:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
 504:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 505:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_PLL2Cmd(FunctionalState NewState)
 506:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 507:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 508:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 509:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 510:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CR_PLL2ON_BB = (uint32_t)NewState;
 511:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 512:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 513:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 514:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 515:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Configures the PLL3 multiplication factor.
 516:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @note 
 517:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   - This function must be used only when the PLL3 is disabled.
 518:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line devices.
 519:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_PLL3Mul: specifies the PLL3 multiplication factor.
 520:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be RCC_PLL3Mul_x where x:{[8,14], 16, 20}
 521:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
 522:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 523:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_PLL3Config(uint32_t RCC_PLL3Mul)
 524:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 525:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 526:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 527:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 528:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PLL3_MUL(RCC_PLL3Mul));
 529:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 530:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR2;
 531:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Clear PLL3Mul[3:0] bits */
 532:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg &= ~CFGR2_PLL3MUL;
 533:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Set the PLL3 configuration bits */
 534:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_PLL3Mul;
 535:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Store the new value */
 536:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC->CFGR2 = tmpreg;
 537:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 538:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 539:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 540:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 541:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the PLL3.
 542:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @note   This function applies only to STM32 Connectivity line devices.
 543:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the PLL3. This parameter can be: ENABLE or DISABLE.
 544:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
 545:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 546:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_PLL3Cmd(FunctionalState NewState)
 547:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 548:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 549:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 550:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 551:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CR_PLL3ON_BB = (uint32_t)NewState;
 552:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 553:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */
 554:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 555:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 556:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Configures the system clock (SYSCLK).
 557:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_SYSCLKSource: specifies the clock source used as system clock.
 558:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 559:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLKSource_HSI: HSI selected as system clock
 560:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLKSource_HSE: HSE selected as system clock
 561:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLKSource_PLLCLK: PLL selected as system clock
 562:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
 563:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 564:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_SYSCLKConfig(uint32_t RCC_SYSCLKSource)
 565:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 540              		.loc 1 565 0
 541              		.cfi_startproc
 542              		@ args = 0, pretend = 0, frame = 16
 543              		@ frame_needed = 1, uses_anonymous_args = 0
 544              		@ link register save eliminated.
 545 0000 80B4     		push	{r7}
 546              	.LCFI23:
 547              		.cfi_def_cfa_offset 4
 548              		.cfi_offset 7, -4
 549 0002 85B0     		sub	sp, sp, #20
 550              	.LCFI24:
 551              		.cfi_def_cfa_offset 24
 552 0004 00AF     		add	r7, sp, #0
 553              	.LCFI25:
 554              		.cfi_def_cfa_register 7
 555 0006 7860     		str	r0, [r7, #4]
 566:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 556              		.loc 1 566 0
 557 0008 4FF00003 		mov	r3, #0
 558 000c FB60     		str	r3, [r7, #12]
 567:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 568:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_SYSCLK_SOURCE(RCC_SYSCLKSource));
 569:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR;
 559              		.loc 1 569 0
 560 000e 094B     		ldr	r3, .L34
 561 0010 5B68     		ldr	r3, [r3, #4]
 562 0012 FB60     		str	r3, [r7, #12]
 570:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Clear SW[1:0] bits */
 571:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg &= CFGR_SW_Mask;
 563              		.loc 1 571 0
 564 0014 FB68     		ldr	r3, [r7, #12]
 565 0016 23F00303 		bic	r3, r3, #3
 566 001a FB60     		str	r3, [r7, #12]
 572:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Set SW[1:0] bits according to RCC_SYSCLKSource value */
 573:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_SYSCLKSource;
 567              		.loc 1 573 0
 568 001c FA68     		ldr	r2, [r7, #12]
 569 001e 7B68     		ldr	r3, [r7, #4]
 570 0020 1343     		orrs	r3, r3, r2
 571 0022 FB60     		str	r3, [r7, #12]
 574:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Store the new value */
 575:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC->CFGR = tmpreg;
 572              		.loc 1 575 0
 573 0024 034B     		ldr	r3, .L34
 574 0026 FA68     		ldr	r2, [r7, #12]
 575 0028 5A60     		str	r2, [r3, #4]
 576:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 576              		.loc 1 576 0
 577 002a 07F11407 		add	r7, r7, #20
 578 002e BD46     		mov	sp, r7
 579 0030 80BC     		pop	{r7}
 580 0032 7047     		bx	lr
 581              	.L35:
 582              		.align	2
 583              	.L34:
 584 0034 00100240 		.word	1073876992
 585              		.cfi_endproc
 586              	.LFE37:
 588              		.section	.text.RCC_GetSYSCLKSource,"ax",%progbits
 589              		.align	2
 590              		.global	RCC_GetSYSCLKSource
 591              		.thumb
 592              		.thumb_func
 594              	RCC_GetSYSCLKSource:
 595              	.LFB38:
 577:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 578:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 579:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Returns the clock source used as system clock.
 580:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  None
 581:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval The clock source used as system clock. The returned value can
 582:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   be one of the following:
 583:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     - 0x00: HSI used as system clock
 584:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     - 0x04: HSE used as system clock
 585:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     - 0x08: PLL used as system clock
 586:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 587:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** uint8_t RCC_GetSYSCLKSource(void)
 588:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 596              		.loc 1 588 0
 597              		.cfi_startproc
 598              		@ args = 0, pretend = 0, frame = 0
 599              		@ frame_needed = 1, uses_anonymous_args = 0
 600              		@ link register save eliminated.
 601 0000 80B4     		push	{r7}
 602              	.LCFI26:
 603              		.cfi_def_cfa_offset 4
 604              		.cfi_offset 7, -4
 605 0002 00AF     		add	r7, sp, #0
 606              	.LCFI27:
 607              		.cfi_def_cfa_register 7
 589:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   return ((uint8_t)(RCC->CFGR & CFGR_SWS_Mask));
 608              		.loc 1 589 0
 609 0004 044B     		ldr	r3, .L38
 610 0006 5B68     		ldr	r3, [r3, #4]
 611 0008 DBB2     		uxtb	r3, r3
 612 000a 03F00C03 		and	r3, r3, #12
 613 000e DBB2     		uxtb	r3, r3
 590:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 614              		.loc 1 590 0
 615 0010 1846     		mov	r0, r3
 616 0012 BD46     		mov	sp, r7
 617 0014 80BC     		pop	{r7}
 618 0016 7047     		bx	lr
 619              	.L39:
 620              		.align	2
 621              	.L38:
 622 0018 00100240 		.word	1073876992
 623              		.cfi_endproc
 624              	.LFE38:
 626              		.section	.text.RCC_HCLKConfig,"ax",%progbits
 627              		.align	2
 628              		.global	RCC_HCLKConfig
 629              		.thumb
 630              		.thumb_func
 632              	RCC_HCLKConfig:
 633              	.LFB39:
 591:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 592:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 593:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Configures the AHB clock (HCLK).
 594:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_SYSCLK: defines the AHB clock divider. This clock is derived from 
 595:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   the system clock (SYSCLK).
 596:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 597:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div1: AHB clock = SYSCLK
 598:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div2: AHB clock = SYSCLK/2
 599:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div4: AHB clock = SYSCLK/4
 600:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div8: AHB clock = SYSCLK/8
 601:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div16: AHB clock = SYSCLK/16
 602:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div64: AHB clock = SYSCLK/64
 603:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div128: AHB clock = SYSCLK/128
 604:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div256: AHB clock = SYSCLK/256
 605:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div512: AHB clock = SYSCLK/512
 606:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
 607:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 608:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_HCLKConfig(uint32_t RCC_SYSCLK)
 609:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 634              		.loc 1 609 0
 635              		.cfi_startproc
 636              		@ args = 0, pretend = 0, frame = 16
 637              		@ frame_needed = 1, uses_anonymous_args = 0
 638              		@ link register save eliminated.
 639 0000 80B4     		push	{r7}
 640              	.LCFI28:
 641              		.cfi_def_cfa_offset 4
 642              		.cfi_offset 7, -4
 643 0002 85B0     		sub	sp, sp, #20
 644              	.LCFI29:
 645              		.cfi_def_cfa_offset 24
 646 0004 00AF     		add	r7, sp, #0
 647              	.LCFI30:
 648              		.cfi_def_cfa_register 7
 649 0006 7860     		str	r0, [r7, #4]
 610:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 650              		.loc 1 610 0
 651 0008 4FF00003 		mov	r3, #0
 652 000c FB60     		str	r3, [r7, #12]
 611:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 612:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_HCLK(RCC_SYSCLK));
 613:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR;
 653              		.loc 1 613 0
 654 000e 094B     		ldr	r3, .L41
 655 0010 5B68     		ldr	r3, [r3, #4]
 656 0012 FB60     		str	r3, [r7, #12]
 614:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Clear HPRE[3:0] bits */
 615:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg &= CFGR_HPRE_Reset_Mask;
 657              		.loc 1 615 0
 658 0014 FB68     		ldr	r3, [r7, #12]
 659 0016 23F0F003 		bic	r3, r3, #240
 660 001a FB60     		str	r3, [r7, #12]
 616:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Set HPRE[3:0] bits according to RCC_SYSCLK value */
 617:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_SYSCLK;
 661              		.loc 1 617 0
 662 001c FA68     		ldr	r2, [r7, #12]
 663 001e 7B68     		ldr	r3, [r7, #4]
 664 0020 1343     		orrs	r3, r3, r2
 665 0022 FB60     		str	r3, [r7, #12]
 618:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Store the new value */
 619:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC->CFGR = tmpreg;
 666              		.loc 1 619 0
 667 0024 034B     		ldr	r3, .L41
 668 0026 FA68     		ldr	r2, [r7, #12]
 669 0028 5A60     		str	r2, [r3, #4]
 620:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 670              		.loc 1 620 0
 671 002a 07F11407 		add	r7, r7, #20
 672 002e BD46     		mov	sp, r7
 673 0030 80BC     		pop	{r7}
 674 0032 7047     		bx	lr
 675              	.L42:
 676              		.align	2
 677              	.L41:
 678 0034 00100240 		.word	1073876992
 679              		.cfi_endproc
 680              	.LFE39:
 682              		.section	.text.RCC_PCLK1Config,"ax",%progbits
 683              		.align	2
 684              		.global	RCC_PCLK1Config
 685              		.thumb
 686              		.thumb_func
 688              	RCC_PCLK1Config:
 689              	.LFB40:
 621:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 622:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 623:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Configures the Low Speed APB clock (PCLK1).
 624:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_HCLK: defines the APB1 clock divider. This clock is derived from 
 625:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   the AHB clock (HCLK).
 626:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 627:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div1: APB1 clock = HCLK
 628:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div2: APB1 clock = HCLK/2
 629:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div4: APB1 clock = HCLK/4
 630:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div8: APB1 clock = HCLK/8
 631:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div16: APB1 clock = HCLK/16
 632:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
 633:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 634:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_PCLK1Config(uint32_t RCC_HCLK)
 635:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 690              		.loc 1 635 0
 691              		.cfi_startproc
 692              		@ args = 0, pretend = 0, frame = 16
 693              		@ frame_needed = 1, uses_anonymous_args = 0
 694              		@ link register save eliminated.
 695 0000 80B4     		push	{r7}
 696              	.LCFI31:
 697              		.cfi_def_cfa_offset 4
 698              		.cfi_offset 7, -4
 699 0002 85B0     		sub	sp, sp, #20
 700              	.LCFI32:
 701              		.cfi_def_cfa_offset 24
 702 0004 00AF     		add	r7, sp, #0
 703              	.LCFI33:
 704              		.cfi_def_cfa_register 7
 705 0006 7860     		str	r0, [r7, #4]
 636:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 706              		.loc 1 636 0
 707 0008 4FF00003 		mov	r3, #0
 708 000c FB60     		str	r3, [r7, #12]
 637:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 638:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PCLK(RCC_HCLK));
 639:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR;
 709              		.loc 1 639 0
 710 000e 094B     		ldr	r3, .L44
 711 0010 5B68     		ldr	r3, [r3, #4]
 712 0012 FB60     		str	r3, [r7, #12]
 640:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Clear PPRE1[2:0] bits */
 641:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg &= CFGR_PPRE1_Reset_Mask;
 713              		.loc 1 641 0
 714 0014 FB68     		ldr	r3, [r7, #12]
 715 0016 23F4E063 		bic	r3, r3, #1792
 716 001a FB60     		str	r3, [r7, #12]
 642:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Set PPRE1[2:0] bits according to RCC_HCLK value */
 643:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_HCLK;
 717              		.loc 1 643 0
 718 001c FA68     		ldr	r2, [r7, #12]
 719 001e 7B68     		ldr	r3, [r7, #4]
 720 0020 1343     		orrs	r3, r3, r2
 721 0022 FB60     		str	r3, [r7, #12]
 644:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Store the new value */
 645:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC->CFGR = tmpreg;
 722              		.loc 1 645 0
 723 0024 034B     		ldr	r3, .L44
 724 0026 FA68     		ldr	r2, [r7, #12]
 725 0028 5A60     		str	r2, [r3, #4]
 646:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 726              		.loc 1 646 0
 727 002a 07F11407 		add	r7, r7, #20
 728 002e BD46     		mov	sp, r7
 729 0030 80BC     		pop	{r7}
 730 0032 7047     		bx	lr
 731              	.L45:
 732              		.align	2
 733              	.L44:
 734 0034 00100240 		.word	1073876992
 735              		.cfi_endproc
 736              	.LFE40:
 738              		.section	.text.RCC_PCLK2Config,"ax",%progbits
 739              		.align	2
 740              		.global	RCC_PCLK2Config
 741              		.thumb
 742              		.thumb_func
 744              	RCC_PCLK2Config:
 745              	.LFB41:
 647:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 648:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 649:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Configures the High Speed APB clock (PCLK2).
 650:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_HCLK: defines the APB2 clock divider. This clock is derived from 
 651:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   the AHB clock (HCLK).
 652:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 653:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div1: APB2 clock = HCLK
 654:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div2: APB2 clock = HCLK/2
 655:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div4: APB2 clock = HCLK/4
 656:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div8: APB2 clock = HCLK/8
 657:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div16: APB2 clock = HCLK/16
 658:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
 659:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 660:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_PCLK2Config(uint32_t RCC_HCLK)
 661:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 746              		.loc 1 661 0
 747              		.cfi_startproc
 748              		@ args = 0, pretend = 0, frame = 16
 749              		@ frame_needed = 1, uses_anonymous_args = 0
 750              		@ link register save eliminated.
 751 0000 80B4     		push	{r7}
 752              	.LCFI34:
 753              		.cfi_def_cfa_offset 4
 754              		.cfi_offset 7, -4
 755 0002 85B0     		sub	sp, sp, #20
 756              	.LCFI35:
 757              		.cfi_def_cfa_offset 24
 758 0004 00AF     		add	r7, sp, #0
 759              	.LCFI36:
 760              		.cfi_def_cfa_register 7
 761 0006 7860     		str	r0, [r7, #4]
 662:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 762              		.loc 1 662 0
 763 0008 4FF00003 		mov	r3, #0
 764 000c FB60     		str	r3, [r7, #12]
 663:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 664:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PCLK(RCC_HCLK));
 665:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR;
 765              		.loc 1 665 0
 766 000e 0A4B     		ldr	r3, .L47
 767 0010 5B68     		ldr	r3, [r3, #4]
 768 0012 FB60     		str	r3, [r7, #12]
 666:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Clear PPRE2[2:0] bits */
 667:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg &= CFGR_PPRE2_Reset_Mask;
 769              		.loc 1 667 0
 770 0014 FB68     		ldr	r3, [r7, #12]
 771 0016 23F46053 		bic	r3, r3, #14336
 772 001a FB60     		str	r3, [r7, #12]
 668:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Set PPRE2[2:0] bits according to RCC_HCLK value */
 669:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_HCLK << 3;
 773              		.loc 1 669 0
 774 001c 7B68     		ldr	r3, [r7, #4]
 775 001e 4FEAC303 		lsl	r3, r3, #3
 776 0022 FA68     		ldr	r2, [r7, #12]
 777 0024 1343     		orrs	r3, r3, r2
 778 0026 FB60     		str	r3, [r7, #12]
 670:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Store the new value */
 671:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC->CFGR = tmpreg;
 779              		.loc 1 671 0
 780 0028 034B     		ldr	r3, .L47
 781 002a FA68     		ldr	r2, [r7, #12]
 782 002c 5A60     		str	r2, [r3, #4]
 672:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 783              		.loc 1 672 0
 784 002e 07F11407 		add	r7, r7, #20
 785 0032 BD46     		mov	sp, r7
 786 0034 80BC     		pop	{r7}
 787 0036 7047     		bx	lr
 788              	.L48:
 789              		.align	2
 790              	.L47:
 791 0038 00100240 		.word	1073876992
 792              		.cfi_endproc
 793              	.LFE41:
 795              		.section	.text.RCC_ITConfig,"ax",%progbits
 796              		.align	2
 797              		.global	RCC_ITConfig
 798              		.thumb
 799              		.thumb_func
 801              	RCC_ITConfig:
 802              	.LFB42:
 673:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 674:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 675:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the specified RCC interrupts.
 676:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_IT: specifies the RCC interrupt sources to be enabled or disabled.
 677:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * 
 678:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be any combination
 679:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   of the following values        
 680:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
 681:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
 682:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
 683:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
 684:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
 685:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLL2RDY: PLL2 ready interrupt
 686:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLL3RDY: PLL3 ready interrupt
 687:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * 
 688:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be any combination of the 
 689:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   following values        
 690:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
 691:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
 692:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
 693:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
 694:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
 695:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *       
 696:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified RCC interrupts.
 697:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
 698:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
 699:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 700:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_ITConfig(uint8_t RCC_IT, FunctionalState NewState)
 701:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 803              		.loc 1 701 0
 804              		.cfi_startproc
 805              		@ args = 0, pretend = 0, frame = 8
 806              		@ frame_needed = 1, uses_anonymous_args = 0
 807              		@ link register save eliminated.
 808 0000 80B4     		push	{r7}
 809              	.LCFI37:
 810              		.cfi_def_cfa_offset 4
 811              		.cfi_offset 7, -4
 812 0002 83B0     		sub	sp, sp, #12
 813              	.LCFI38:
 814              		.cfi_def_cfa_offset 16
 815 0004 00AF     		add	r7, sp, #0
 816              	.LCFI39:
 817              		.cfi_def_cfa_register 7
 818 0006 0246     		mov	r2, r0
 819 0008 0B46     		mov	r3, r1
 820 000a FA71     		strb	r2, [r7, #7]
 821 000c BB71     		strb	r3, [r7, #6]
 702:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 703:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_IT(RCC_IT));
 704:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 705:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
 822              		.loc 1 705 0
 823 000e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 824 0010 002B     		cmp	r3, #0
 825 0012 08D0     		beq	.L50
 706:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   {
 707:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****     /* Perform Byte access to RCC_CIR bits to enable the selected interrupts */
 708:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****     *(__IO uint8_t *) CIR_BYTE2_ADDRESS |= RCC_IT;
 826              		.loc 1 708 0
 827 0014 0C4B     		ldr	r3, .L52
 828 0016 0C4A     		ldr	r2, .L52
 829 0018 1278     		ldrb	r2, [r2, #0]
 830 001a D1B2     		uxtb	r1, r2
 831 001c FA79     		ldrb	r2, [r7, #7]
 832 001e 0A43     		orrs	r2, r2, r1
 833 0020 D2B2     		uxtb	r2, r2
 834 0022 1A70     		strb	r2, [r3, #0]
 835 0024 0AE0     		b	.L49
 836              	.L50:
 709:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   }
 710:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   else
 711:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   {
 712:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****     /* Perform Byte access to RCC_CIR bits to disable the selected interrupts */
 713:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****     *(__IO uint8_t *) CIR_BYTE2_ADDRESS &= (uint8_t)~RCC_IT;
 837              		.loc 1 713 0
 838 0026 084B     		ldr	r3, .L52
 839 0028 074A     		ldr	r2, .L52
 840 002a 1278     		ldrb	r2, [r2, #0]
 841 002c D1B2     		uxtb	r1, r2
 842 002e FA79     		ldrb	r2, [r7, #7]
 843 0030 6FEA0202 		mvn	r2, r2
 844 0034 D2B2     		uxtb	r2, r2
 845 0036 0A40     		ands	r2, r2, r1
 846 0038 D2B2     		uxtb	r2, r2
 847 003a 1A70     		strb	r2, [r3, #0]
 848              	.L49:
 714:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   }
 715:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 849              		.loc 1 715 0
 850 003c 07F10C07 		add	r7, r7, #12
 851 0040 BD46     		mov	sp, r7
 852 0042 80BC     		pop	{r7}
 853 0044 7047     		bx	lr
 854              	.L53:
 855 0046 00BF     		.align	2
 856              	.L52:
 857 0048 09100240 		.word	1073877001
 858              		.cfi_endproc
 859              	.LFE42:
 861              		.section	.text.RCC_USBCLKConfig,"ax",%progbits
 862              		.align	2
 863              		.global	RCC_USBCLKConfig
 864              		.thumb
 865              		.thumb_func
 867              	RCC_USBCLKConfig:
 868              	.LFB43:
 716:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 717:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #ifndef STM32F10X_CL
 718:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 719:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Configures the USB clock (USBCLK).
 720:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_USBCLKSource: specifies the USB clock source. This clock is 
 721:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   derived from the PLL output.
 722:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 723:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_USBCLKSource_PLLCLK_1Div5: PLL clock divided by 1,5 selected as USB 
 724:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *                                     clock source
 725:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_USBCLKSource_PLLCLK_Div1: PLL clock selected as USB clock source
 726:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
 727:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 728:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_USBCLKConfig(uint32_t RCC_USBCLKSource)
 729:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 869              		.loc 1 729 0
 870              		.cfi_startproc
 871              		@ args = 0, pretend = 0, frame = 8
 872              		@ frame_needed = 1, uses_anonymous_args = 0
 873              		@ link register save eliminated.
 874 0000 80B4     		push	{r7}
 875              	.LCFI40:
 876              		.cfi_def_cfa_offset 4
 877              		.cfi_offset 7, -4
 878 0002 83B0     		sub	sp, sp, #12
 879              	.LCFI41:
 880              		.cfi_def_cfa_offset 16
 881 0004 00AF     		add	r7, sp, #0
 882              	.LCFI42:
 883              		.cfi_def_cfa_register 7
 884 0006 7860     		str	r0, [r7, #4]
 730:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 731:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_USBCLK_SOURCE(RCC_USBCLKSource));
 732:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 733:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CFGR_USBPRE_BB = RCC_USBCLKSource;
 885              		.loc 1 733 0
 886 0008 034B     		ldr	r3, .L55
 887 000a 7A68     		ldr	r2, [r7, #4]
 888 000c 1A60     		str	r2, [r3, #0]
 734:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 889              		.loc 1 734 0
 890 000e 07F10C07 		add	r7, r7, #12
 891 0012 BD46     		mov	sp, r7
 892 0014 80BC     		pop	{r7}
 893 0016 7047     		bx	lr
 894              	.L56:
 895              		.align	2
 896              	.L55:
 897 0018 D8004242 		.word	1111621848
 898              		.cfi_endproc
 899              	.LFE43:
 901              		.section	.text.RCC_ADCCLKConfig,"ax",%progbits
 902              		.align	2
 903              		.global	RCC_ADCCLKConfig
 904              		.thumb
 905              		.thumb_func
 907              	RCC_ADCCLKConfig:
 908              	.LFB44:
 735:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #else
 736:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 737:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Configures the USB OTG FS clock (OTGFSCLK).
 738:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This function applies only to STM32 Connectivity line devices.
 739:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_OTGFSCLKSource: specifies the USB OTG FS clock source.
 740:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This clock is derived from the PLL output.
 741:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 742:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg  RCC_OTGFSCLKSource_PLLVCO_Div3: PLL VCO clock divided by 2 selected as USB OTG FS clo
 743:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg  RCC_OTGFSCLKSource_PLLVCO_Div2: PLL VCO clock divided by 2 selected as USB OTG FS clo
 744:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
 745:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 746:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_OTGFSCLKConfig(uint32_t RCC_OTGFSCLKSource)
 747:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 748:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 749:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_OTGFSCLK_SOURCE(RCC_OTGFSCLKSource));
 750:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 751:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CFGR_OTGFSPRE_BB = RCC_OTGFSCLKSource;
 752:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 753:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
 754:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 755:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 756:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Configures the ADC clock (ADCCLK).
 757:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_PCLK2: defines the ADC clock divider. This clock is derived from 
 758:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   the APB2 clock (PCLK2).
 759:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 760:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_PCLK2_Div2: ADC clock = PCLK2/2
 761:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_PCLK2_Div4: ADC clock = PCLK2/4
 762:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_PCLK2_Div6: ADC clock = PCLK2/6
 763:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_PCLK2_Div8: ADC clock = PCLK2/8
 764:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
 765:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 766:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_ADCCLKConfig(uint32_t RCC_PCLK2)
 767:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 909              		.loc 1 767 0
 910              		.cfi_startproc
 911              		@ args = 0, pretend = 0, frame = 16
 912              		@ frame_needed = 1, uses_anonymous_args = 0
 913              		@ link register save eliminated.
 914 0000 80B4     		push	{r7}
 915              	.LCFI43:
 916              		.cfi_def_cfa_offset 4
 917              		.cfi_offset 7, -4
 918 0002 85B0     		sub	sp, sp, #20
 919              	.LCFI44:
 920              		.cfi_def_cfa_offset 24
 921 0004 00AF     		add	r7, sp, #0
 922              	.LCFI45:
 923              		.cfi_def_cfa_register 7
 924 0006 7860     		str	r0, [r7, #4]
 768:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 925              		.loc 1 768 0
 926 0008 4FF00003 		mov	r3, #0
 927 000c FB60     		str	r3, [r7, #12]
 769:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 770:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_ADCCLK(RCC_PCLK2));
 771:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR;
 928              		.loc 1 771 0
 929 000e 094B     		ldr	r3, .L58
 930 0010 5B68     		ldr	r3, [r3, #4]
 931 0012 FB60     		str	r3, [r7, #12]
 772:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Clear ADCPRE[1:0] bits */
 773:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg &= CFGR_ADCPRE_Reset_Mask;
 932              		.loc 1 773 0
 933 0014 FB68     		ldr	r3, [r7, #12]
 934 0016 23F44043 		bic	r3, r3, #49152
 935 001a FB60     		str	r3, [r7, #12]
 774:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Set ADCPRE[1:0] bits according to RCC_PCLK2 value */
 775:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_PCLK2;
 936              		.loc 1 775 0
 937 001c FA68     		ldr	r2, [r7, #12]
 938 001e 7B68     		ldr	r3, [r7, #4]
 939 0020 1343     		orrs	r3, r3, r2
 940 0022 FB60     		str	r3, [r7, #12]
 776:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Store the new value */
 777:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC->CFGR = tmpreg;
 941              		.loc 1 777 0
 942 0024 034B     		ldr	r3, .L58
 943 0026 FA68     		ldr	r2, [r7, #12]
 944 0028 5A60     		str	r2, [r3, #4]
 778:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 945              		.loc 1 778 0
 946 002a 07F11407 		add	r7, r7, #20
 947 002e BD46     		mov	sp, r7
 948 0030 80BC     		pop	{r7}
 949 0032 7047     		bx	lr
 950              	.L59:
 951              		.align	2
 952              	.L58:
 953 0034 00100240 		.word	1073876992
 954              		.cfi_endproc
 955              	.LFE44:
 957              		.section	.text.RCC_LSEConfig,"ax",%progbits
 958              		.align	2
 959              		.global	RCC_LSEConfig
 960              		.thumb
 961              		.thumb_func
 963              	RCC_LSEConfig:
 964              	.LFB45:
 779:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 780:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
 781:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 782:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Configures the I2S2 clock source(I2S2CLK).
 783:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @note
 784:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   - This function must be called before enabling I2S2 APB clock.
 785:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line devices.
 786:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_I2S2CLKSource: specifies the I2S2 clock source.
 787:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 788:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_I2S2CLKSource_SYSCLK: system clock selected as I2S2 clock entry
 789:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_I2S2CLKSource_PLL3_VCO: PLL3 VCO clock selected as I2S2 clock entry
 790:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
 791:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 792:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_I2S2CLKConfig(uint32_t RCC_I2S2CLKSource)
 793:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 794:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 795:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_I2S2CLK_SOURCE(RCC_I2S2CLKSource));
 796:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 797:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CFGR2_I2S2SRC_BB = RCC_I2S2CLKSource;
 798:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 799:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 800:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 801:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Configures the I2S3 clock source(I2S2CLK).
 802:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @note
 803:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   - This function must be called before enabling I2S3 APB clock.
 804:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line devices.
 805:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_I2S3CLKSource: specifies the I2S3 clock source.
 806:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 807:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_I2S3CLKSource_SYSCLK: system clock selected as I2S3 clock entry
 808:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_I2S3CLKSource_PLL3_VCO: PLL3 VCO clock selected as I2S3 clock entry
 809:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
 810:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 811:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_I2S3CLKConfig(uint32_t RCC_I2S3CLKSource)
 812:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 813:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 814:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_I2S3CLK_SOURCE(RCC_I2S3CLKSource));
 815:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 816:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CFGR2_I2S3SRC_BB = RCC_I2S3CLKSource;
 817:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 818:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */
 819:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 820:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 821:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Configures the External Low Speed oscillator (LSE).
 822:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_LSE: specifies the new state of the LSE.
 823:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 824:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_LSE_OFF: LSE oscillator OFF
 825:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_LSE_ON: LSE oscillator ON
 826:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_LSE_Bypass: LSE oscillator bypassed with external clock
 827:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
 828:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 829:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_LSEConfig(uint8_t RCC_LSE)
 830:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 965              		.loc 1 830 0
 966              		.cfi_startproc
 967              		@ args = 0, pretend = 0, frame = 8
 968              		@ frame_needed = 1, uses_anonymous_args = 0
 969              		@ link register save eliminated.
 970 0000 80B4     		push	{r7}
 971              	.LCFI46:
 972              		.cfi_def_cfa_offset 4
 973              		.cfi_offset 7, -4
 974 0002 83B0     		sub	sp, sp, #12
 975              	.LCFI47:
 976              		.cfi_def_cfa_offset 16
 977 0004 00AF     		add	r7, sp, #0
 978              	.LCFI48:
 979              		.cfi_def_cfa_register 7
 980 0006 0346     		mov	r3, r0
 981 0008 FB71     		strb	r3, [r7, #7]
 831:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 832:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_LSE(RCC_LSE));
 833:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Reset LSEON and LSEBYP bits before configuring the LSE ------------------*/
 834:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Reset LSEON bit */
 835:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_OFF;
 982              		.loc 1 835 0
 983 000a 0F4B     		ldr	r3, .L66
 984 000c 4FF00002 		mov	r2, #0
 985 0010 1A70     		strb	r2, [r3, #0]
 836:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Reset LSEBYP bit */
 837:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_OFF;
 986              		.loc 1 837 0
 987 0012 0D4B     		ldr	r3, .L66
 988 0014 4FF00002 		mov	r2, #0
 989 0018 1A70     		strb	r2, [r3, #0]
 838:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Configure LSE (RCC_LSE_OFF is already covered by the code section above) */
 839:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   switch(RCC_LSE)
 990              		.loc 1 839 0
 991 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 992 001c 012B     		cmp	r3, #1
 993 001e 02D0     		beq	.L62
 994 0020 042B     		cmp	r3, #4
 995 0022 05D0     		beq	.L63
 996 0024 09E0     		b	.L65
 997              	.L62:
 840:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   {
 841:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****     case RCC_LSE_ON:
 842:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       /* Set LSEON bit */
 843:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_ON;
 998              		.loc 1 843 0
 999 0026 084B     		ldr	r3, .L66
 1000 0028 4FF00102 		mov	r2, #1
 1001 002c 1A70     		strb	r2, [r3, #0]
 844:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       break;
 1002              		.loc 1 844 0
 1003 002e 05E0     		b	.L60
 1004              	.L63:
 845:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       
 846:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****     case RCC_LSE_Bypass:
 847:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       /* Set LSEBYP and LSEON bits */
 848:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_Bypass | RCC_LSE_ON;
 1005              		.loc 1 848 0
 1006 0030 054B     		ldr	r3, .L66
 1007 0032 4FF00502 		mov	r2, #5
 1008 0036 1A70     		strb	r2, [r3, #0]
 849:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       break;            
 1009              		.loc 1 849 0
 1010 0038 00E0     		b	.L60
 1011              	.L65:
 850:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       
 851:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****     default:
 852:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       break;      
 1012              		.loc 1 852 0
 1013 003a 00BF     		nop
 1014              	.L60:
 853:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   }
 854:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 1015              		.loc 1 854 0
 1016 003c 07F10C07 		add	r7, r7, #12
 1017 0040 BD46     		mov	sp, r7
 1018 0042 80BC     		pop	{r7}
 1019 0044 7047     		bx	lr
 1020              	.L67:
 1021 0046 00BF     		.align	2
 1022              	.L66:
 1023 0048 20100240 		.word	1073877024
 1024              		.cfi_endproc
 1025              	.LFE45:
 1027              		.section	.text.RCC_LSICmd,"ax",%progbits
 1028              		.align	2
 1029              		.global	RCC_LSICmd
 1030              		.thumb
 1031              		.thumb_func
 1033              	RCC_LSICmd:
 1034              	.LFB46:
 855:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 856:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 857:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the Internal Low Speed oscillator (LSI).
 858:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @note   LSI can not be disabled if the IWDG is running.
 859:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the LSI. This parameter can be: ENABLE or DISABLE.
 860:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
 861:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 862:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_LSICmd(FunctionalState NewState)
 863:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 1035              		.loc 1 863 0
 1036              		.cfi_startproc
 1037              		@ args = 0, pretend = 0, frame = 8
 1038              		@ frame_needed = 1, uses_anonymous_args = 0
 1039              		@ link register save eliminated.
 1040 0000 80B4     		push	{r7}
 1041              	.LCFI49:
 1042              		.cfi_def_cfa_offset 4
 1043              		.cfi_offset 7, -4
 1044 0002 83B0     		sub	sp, sp, #12
 1045              	.LCFI50:
 1046              		.cfi_def_cfa_offset 16
 1047 0004 00AF     		add	r7, sp, #0
 1048              	.LCFI51:
 1049              		.cfi_def_cfa_register 7
 1050 0006 0346     		mov	r3, r0
 1051 0008 FB71     		strb	r3, [r7, #7]
 864:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 865:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 866:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CSR_LSION_BB = (uint32_t)NewState;
 1052              		.loc 1 866 0
 1053 000a 044B     		ldr	r3, .L69
 1054 000c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1055 000e 1A60     		str	r2, [r3, #0]
 867:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 1056              		.loc 1 867 0
 1057 0010 07F10C07 		add	r7, r7, #12
 1058 0014 BD46     		mov	sp, r7
 1059 0016 80BC     		pop	{r7}
 1060 0018 7047     		bx	lr
 1061              	.L70:
 1062 001a 00BF     		.align	2
 1063              	.L69:
 1064 001c 80044242 		.word	1111622784
 1065              		.cfi_endproc
 1066              	.LFE46:
 1068              		.section	.text.RCC_RTCCLKConfig,"ax",%progbits
 1069              		.align	2
 1070              		.global	RCC_RTCCLKConfig
 1071              		.thumb
 1072              		.thumb_func
 1074              	RCC_RTCCLKConfig:
 1075              	.LFB47:
 868:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 869:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 870:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Configures the RTC clock (RTCCLK).
 871:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @note   Once the RTC clock is selected it can't be changed unless the Backup domain is reset.
 872:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_RTCCLKSource: specifies the RTC clock source.
 873:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 874:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_RTCCLKSource_LSE: LSE selected as RTC clock
 875:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_RTCCLKSource_LSI: LSI selected as RTC clock
 876:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_RTCCLKSource_HSE_Div128: HSE clock divided by 128 selected as RTC clock
 877:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
 878:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 879:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_RTCCLKConfig(uint32_t RCC_RTCCLKSource)
 880:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 1076              		.loc 1 880 0
 1077              		.cfi_startproc
 1078              		@ args = 0, pretend = 0, frame = 8
 1079              		@ frame_needed = 1, uses_anonymous_args = 0
 1080              		@ link register save eliminated.
 1081 0000 80B4     		push	{r7}
 1082              	.LCFI52:
 1083              		.cfi_def_cfa_offset 4
 1084              		.cfi_offset 7, -4
 1085 0002 83B0     		sub	sp, sp, #12
 1086              	.LCFI53:
 1087              		.cfi_def_cfa_offset 16
 1088 0004 00AF     		add	r7, sp, #0
 1089              	.LCFI54:
 1090              		.cfi_def_cfa_register 7
 1091 0006 7860     		str	r0, [r7, #4]
 881:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 882:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_RTCCLK_SOURCE(RCC_RTCCLKSource));
 883:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Select the RTC clock source */
 884:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC->BDCR |= RCC_RTCCLKSource;
 1092              		.loc 1 884 0
 1093 0008 054B     		ldr	r3, .L72
 1094 000a 054A     		ldr	r2, .L72
 1095 000c 116A     		ldr	r1, [r2, #32]
 1096 000e 7A68     		ldr	r2, [r7, #4]
 1097 0010 0A43     		orrs	r2, r2, r1
 1098 0012 1A62     		str	r2, [r3, #32]
 885:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 1099              		.loc 1 885 0
 1100 0014 07F10C07 		add	r7, r7, #12
 1101 0018 BD46     		mov	sp, r7
 1102 001a 80BC     		pop	{r7}
 1103 001c 7047     		bx	lr
 1104              	.L73:
 1105 001e 00BF     		.align	2
 1106              	.L72:
 1107 0020 00100240 		.word	1073876992
 1108              		.cfi_endproc
 1109              	.LFE47:
 1111              		.section	.text.RCC_RTCCLKCmd,"ax",%progbits
 1112              		.align	2
 1113              		.global	RCC_RTCCLKCmd
 1114              		.thumb
 1115              		.thumb_func
 1117              	RCC_RTCCLKCmd:
 1118              	.LFB48:
 886:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 887:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 888:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the RTC clock.
 889:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @note   This function must be used only after the RTC clock was selected using the RCC_RTCCLKCo
 890:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the RTC clock. This parameter can be: ENABLE or DISABLE.
 891:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
 892:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 893:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_RTCCLKCmd(FunctionalState NewState)
 894:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 1119              		.loc 1 894 0
 1120              		.cfi_startproc
 1121              		@ args = 0, pretend = 0, frame = 8
 1122              		@ frame_needed = 1, uses_anonymous_args = 0
 1123              		@ link register save eliminated.
 1124 0000 80B4     		push	{r7}
 1125              	.LCFI55:
 1126              		.cfi_def_cfa_offset 4
 1127              		.cfi_offset 7, -4
 1128 0002 83B0     		sub	sp, sp, #12
 1129              	.LCFI56:
 1130              		.cfi_def_cfa_offset 16
 1131 0004 00AF     		add	r7, sp, #0
 1132              	.LCFI57:
 1133              		.cfi_def_cfa_register 7
 1134 0006 0346     		mov	r3, r0
 1135 0008 FB71     		strb	r3, [r7, #7]
 895:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 896:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 897:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) BDCR_RTCEN_BB = (uint32_t)NewState;
 1136              		.loc 1 897 0
 1137 000a 044B     		ldr	r3, .L75
 1138 000c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1139 000e 1A60     		str	r2, [r3, #0]
 898:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 1140              		.loc 1 898 0
 1141 0010 07F10C07 		add	r7, r7, #12
 1142 0014 BD46     		mov	sp, r7
 1143 0016 80BC     		pop	{r7}
 1144 0018 7047     		bx	lr
 1145              	.L76:
 1146 001a 00BF     		.align	2
 1147              	.L75:
 1148 001c 3C044242 		.word	1111622716
 1149              		.cfi_endproc
 1150              	.LFE48:
 1152              		.section	.text.RCC_GetClocksFreq,"ax",%progbits
 1153              		.align	2
 1154              		.global	RCC_GetClocksFreq
 1155              		.thumb
 1156              		.thumb_func
 1158              	RCC_GetClocksFreq:
 1159              	.LFB49:
 899:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 900:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
 901:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Returns the frequencies of different on chip clocks.
 902:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_Clocks: pointer to a RCC_ClocksTypeDef structure which will hold
 903:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *         the clocks frequencies.
 904:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @note   The result of this function could be not correct when using 
 905:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *         fractional value for HSE crystal.  
 906:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
 907:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
 908:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_GetClocksFreq(RCC_ClocksTypeDef* RCC_Clocks)
 909:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 1160              		.loc 1 909 0
 1161              		.cfi_startproc
 1162              		@ args = 0, pretend = 0, frame = 32
 1163              		@ frame_needed = 1, uses_anonymous_args = 0
 1164              		@ link register save eliminated.
 1165 0000 80B4     		push	{r7}
 1166              	.LCFI58:
 1167              		.cfi_def_cfa_offset 4
 1168              		.cfi_offset 7, -4
 1169 0002 89B0     		sub	sp, sp, #36
 1170              	.LCFI59:
 1171              		.cfi_def_cfa_offset 40
 1172 0004 00AF     		add	r7, sp, #0
 1173              	.LCFI60:
 1174              		.cfi_def_cfa_register 7
 1175 0006 7860     		str	r0, [r7, #4]
 910:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   uint32_t tmp = 0, pllmull = 0, pllsource = 0, presc = 0;
 1176              		.loc 1 910 0
 1177 0008 4FF00003 		mov	r3, #0
 1178 000c FB61     		str	r3, [r7, #28]
 1179 000e 4FF00003 		mov	r3, #0
 1180 0012 BB61     		str	r3, [r7, #24]
 1181 0014 4FF00003 		mov	r3, #0
 1182 0018 7B61     		str	r3, [r7, #20]
 1183 001a 4FF00003 		mov	r3, #0
 1184 001e 3B61     		str	r3, [r7, #16]
 911:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 912:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #ifdef  STM32F10X_CL
 913:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   uint32_t prediv1source = 0, prediv1factor = 0, prediv2factor = 0, pll2mull = 0;
 914:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */
 915:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 916:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL)
 917:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   uint32_t prediv1factor = 0;
 1185              		.loc 1 917 0
 1186 0020 4FF00003 		mov	r3, #0
 1187 0024 FB60     		str	r3, [r7, #12]
 918:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #endif
 919:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****     
 920:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 921:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmp = RCC->CFGR & CFGR_SWS_Mask;
 1188              		.loc 1 921 0
 1189 0026 504B     		ldr	r3, .L86
 1190 0028 5B68     		ldr	r3, [r3, #4]
 1191 002a 03F00C03 		and	r3, r3, #12
 1192 002e FB61     		str	r3, [r7, #28]
 922:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   
 923:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   switch (tmp)
 1193              		.loc 1 923 0
 1194 0030 FB69     		ldr	r3, [r7, #28]
 1195 0032 042B     		cmp	r3, #4
 1196 0034 07D0     		beq	.L80
 1197 0036 082B     		cmp	r3, #8
 1198 0038 09D0     		beq	.L81
 1199 003a 002B     		cmp	r3, #0
 1200 003c 32D1     		bne	.L85
 1201              	.L79:
 924:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   {
 925:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****     case 0x00:  /* HSI used as system clock */
 926:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       RCC_Clocks->SYSCLK_Frequency = HSI_VALUE;
 1202              		.loc 1 926 0
 1203 003e 7B68     		ldr	r3, [r7, #4]
 1204 0040 4A4A     		ldr	r2, .L86+4
 1205 0042 1A60     		str	r2, [r3, #0]
 927:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       break;
 1206              		.loc 1 927 0
 1207 0044 32E0     		b	.L82
 1208              	.L80:
 928:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****     case 0x04:  /* HSE used as system clock */
 929:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       RCC_Clocks->SYSCLK_Frequency = HSE_VALUE;
 1209              		.loc 1 929 0
 1210 0046 7B68     		ldr	r3, [r7, #4]
 1211 0048 484A     		ldr	r2, .L86+4
 1212 004a 1A60     		str	r2, [r3, #0]
 930:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       break;
 1213              		.loc 1 930 0
 1214 004c 2EE0     		b	.L82
 1215              	.L81:
 931:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****     case 0x08:  /* PLL used as system clock */
 932:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
 933:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       /* Get PLL clock source and multiplication factor ----------------------*/
 934:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       pllmull = RCC->CFGR & CFGR_PLLMull_Mask;
 1216              		.loc 1 934 0
 1217 004e 464B     		ldr	r3, .L86
 1218 0050 5B68     		ldr	r3, [r3, #4]
 1219 0052 03F47013 		and	r3, r3, #3932160
 1220 0056 BB61     		str	r3, [r7, #24]
 935:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       pllsource = RCC->CFGR & CFGR_PLLSRC_Mask;
 1221              		.loc 1 935 0
 1222 0058 434B     		ldr	r3, .L86
 1223 005a 5B68     		ldr	r3, [r3, #4]
 1224 005c 03F48033 		and	r3, r3, #65536
 1225 0060 7B61     		str	r3, [r7, #20]
 936:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       
 937:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #ifndef STM32F10X_CL      
 938:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       pllmull = ( pllmull >> 18) + 2;
 1226              		.loc 1 938 0
 1227 0062 BB69     		ldr	r3, [r7, #24]
 1228 0064 4FEA9343 		lsr	r3, r3, #18
 1229 0068 03F10203 		add	r3, r3, #2
 1230 006c BB61     		str	r3, [r7, #24]
 939:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       
 940:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       if (pllsource == 0x00)
 1231              		.loc 1 940 0
 1232 006e 7B69     		ldr	r3, [r7, #20]
 1233 0070 002B     		cmp	r3, #0
 1234 0072 06D1     		bne	.L83
 941:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       {/* HSI oscillator clock divided by 2 selected as PLL clock entry */
 942:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****         RCC_Clocks->SYSCLK_Frequency = (HSI_VALUE >> 1) * pllmull;
 1235              		.loc 1 942 0
 1236 0074 BB69     		ldr	r3, [r7, #24]
 1237 0076 3E4A     		ldr	r2, .L86+8
 1238 0078 02FB03F2 		mul	r2, r2, r3
 1239 007c 7B68     		ldr	r3, [r7, #4]
 1240 007e 1A60     		str	r2, [r3, #0]
 943:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       }
 944:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       else
 945:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       {
 946:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****  #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL)
 947:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****        prediv1factor = (RCC->CFGR2 & CFGR2_PREDIV1) + 1;
 948:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****        /* HSE oscillator clock selected as PREDIV1 clock entry */
 949:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****        RCC_Clocks->SYSCLK_Frequency = (HSE_VALUE / prediv1factor) * pllmull; 
 950:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****  #else
 951:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****         /* HSE selected as PLL clock entry */
 952:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****         if ((RCC->CFGR & CFGR_PLLXTPRE_Mask) != (uint32_t)RESET)
 953:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****         {/* HSE oscillator clock divided by 2 */
 954:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****           RCC_Clocks->SYSCLK_Frequency = (HSE_VALUE >> 1) * pllmull;
 955:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****         }
 956:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****         else
 957:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****         {
 958:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****           RCC_Clocks->SYSCLK_Frequency = HSE_VALUE * pllmull;
 959:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****         }
 960:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****  #endif
 961:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       }
 962:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #else
 963:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       pllmull = pllmull >> 18;
 964:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       
 965:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       if (pllmull != 0x0D)
 966:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       {
 967:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****          pllmull += 2;
 968:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       }
 969:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       else
 970:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       { /* PLL multiplication factor = PLL input clock * 6.5 */
 971:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****         pllmull = 13 / 2; 
 972:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       }
 973:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****             
 974:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       if (pllsource == 0x00)
 975:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       {/* HSI oscillator clock divided by 2 selected as PLL clock entry */
 976:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****         RCC_Clocks->SYSCLK_Frequency = (HSI_VALUE >> 1) * pllmull;
 977:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       }
 978:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       else
 979:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       {/* PREDIV1 selected as PLL clock entry */
 980:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****         
 981:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****         /* Get PREDIV1 clock source and division factor */
 982:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****         prediv1source = RCC->CFGR2 & CFGR2_PREDIV1SRC;
 983:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****         prediv1factor = (RCC->CFGR2 & CFGR2_PREDIV1) + 1;
 984:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****         
 985:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****         if (prediv1source == 0)
 986:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****         { /* HSE oscillator clock selected as PREDIV1 clock entry */
 987:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****           RCC_Clocks->SYSCLK_Frequency = (HSE_VALUE / prediv1factor) * pllmull;          
 988:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****         }
 989:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****         else
 990:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****         {/* PLL2 clock selected as PREDIV1 clock entry */
 991:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****           
 992:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****           /* Get PREDIV2 division factor and PLL2 multiplication factor */
 993:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****           prediv2factor = ((RCC->CFGR2 & CFGR2_PREDIV2) >> 4) + 1;
 994:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****           pll2mull = ((RCC->CFGR2 & CFGR2_PLL2MUL) >> 8 ) + 2; 
 995:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****           RCC_Clocks->SYSCLK_Frequency = (((HSE_VALUE / prediv2factor) * pll2mull) / prediv1factor)
 996:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****         }
 997:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       }
 998:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
 999:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       break;
 1241              		.loc 1 999 0
 1242 0080 14E0     		b	.L82
 1243              	.L83:
 947:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****        prediv1factor = (RCC->CFGR2 & CFGR2_PREDIV1) + 1;
 1244              		.loc 1 947 0
 1245 0082 394B     		ldr	r3, .L86
 1246 0084 DB6A     		ldr	r3, [r3, #44]
 1247 0086 03F00F03 		and	r3, r3, #15
 1248 008a 03F10103 		add	r3, r3, #1
 1249 008e FB60     		str	r3, [r7, #12]
 949:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****        RCC_Clocks->SYSCLK_Frequency = (HSE_VALUE / prediv1factor) * pllmull; 
 1250              		.loc 1 949 0
 1251 0090 364A     		ldr	r2, .L86+4
 1252 0092 FB68     		ldr	r3, [r7, #12]
 1253 0094 B2FBF3F3 		udiv	r3, r2, r3
 1254 0098 BA69     		ldr	r2, [r7, #24]
 1255 009a 02FB03F2 		mul	r2, r2, r3
 1256 009e 7B68     		ldr	r3, [r7, #4]
 1257 00a0 1A60     		str	r2, [r3, #0]
 1258              		.loc 1 999 0
 1259 00a2 03E0     		b	.L82
 1260              	.L85:
1000:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
1001:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****     default:
1002:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       RCC_Clocks->SYSCLK_Frequency = HSI_VALUE;
 1261              		.loc 1 1002 0
 1262 00a4 7B68     		ldr	r3, [r7, #4]
 1263 00a6 314A     		ldr	r2, .L86+4
 1264 00a8 1A60     		str	r2, [r3, #0]
1003:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****       break;
 1265              		.loc 1 1003 0
 1266 00aa 00BF     		nop
 1267              	.L82:
1004:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   }
1005:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
1006:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Compute HCLK, PCLK1, PCLK2 and ADCCLK clocks frequencies ----------------*/
1007:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Get HCLK prescaler */
1008:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmp = RCC->CFGR & CFGR_HPRE_Set_Mask;
 1268              		.loc 1 1008 0
 1269 00ac 2E4B     		ldr	r3, .L86
 1270 00ae 5B68     		ldr	r3, [r3, #4]
 1271 00b0 03F0F003 		and	r3, r3, #240
 1272 00b4 FB61     		str	r3, [r7, #28]
1009:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmp = tmp >> 4;
 1273              		.loc 1 1009 0
 1274 00b6 FB69     		ldr	r3, [r7, #28]
 1275 00b8 4FEA1313 		lsr	r3, r3, #4
 1276 00bc FB61     		str	r3, [r7, #28]
1010:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   presc = APBAHBPrescTable[tmp];
 1277              		.loc 1 1010 0
 1278 00be 2D4A     		ldr	r2, .L86+12
 1279 00c0 FB69     		ldr	r3, [r7, #28]
 1280 00c2 D318     		adds	r3, r2, r3
 1281 00c4 1B78     		ldrb	r3, [r3, #0]
 1282 00c6 DBB2     		uxtb	r3, r3
 1283 00c8 3B61     		str	r3, [r7, #16]
1011:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* HCLK clock frequency */
1012:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC_Clocks->HCLK_Frequency = RCC_Clocks->SYSCLK_Frequency >> presc;
 1284              		.loc 1 1012 0
 1285 00ca 7B68     		ldr	r3, [r7, #4]
 1286 00cc 1A68     		ldr	r2, [r3, #0]
 1287 00ce 3B69     		ldr	r3, [r7, #16]
 1288 00d0 22FA03F2 		lsr	r2, r2, r3
 1289 00d4 7B68     		ldr	r3, [r7, #4]
 1290 00d6 5A60     		str	r2, [r3, #4]
1013:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Get PCLK1 prescaler */
1014:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmp = RCC->CFGR & CFGR_PPRE1_Set_Mask;
 1291              		.loc 1 1014 0
 1292 00d8 234B     		ldr	r3, .L86
 1293 00da 5B68     		ldr	r3, [r3, #4]
 1294 00dc 03F4E063 		and	r3, r3, #1792
 1295 00e0 FB61     		str	r3, [r7, #28]
1015:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmp = tmp >> 8;
 1296              		.loc 1 1015 0
 1297 00e2 FB69     		ldr	r3, [r7, #28]
 1298 00e4 4FEA1323 		lsr	r3, r3, #8
 1299 00e8 FB61     		str	r3, [r7, #28]
1016:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   presc = APBAHBPrescTable[tmp];
 1300              		.loc 1 1016 0
 1301 00ea 224A     		ldr	r2, .L86+12
 1302 00ec FB69     		ldr	r3, [r7, #28]
 1303 00ee D318     		adds	r3, r2, r3
 1304 00f0 1B78     		ldrb	r3, [r3, #0]
 1305 00f2 DBB2     		uxtb	r3, r3
 1306 00f4 3B61     		str	r3, [r7, #16]
1017:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* PCLK1 clock frequency */
1018:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC_Clocks->PCLK1_Frequency = RCC_Clocks->HCLK_Frequency >> presc;
 1307              		.loc 1 1018 0
 1308 00f6 7B68     		ldr	r3, [r7, #4]
 1309 00f8 5A68     		ldr	r2, [r3, #4]
 1310 00fa 3B69     		ldr	r3, [r7, #16]
 1311 00fc 22FA03F2 		lsr	r2, r2, r3
 1312 0100 7B68     		ldr	r3, [r7, #4]
 1313 0102 9A60     		str	r2, [r3, #8]
1019:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Get PCLK2 prescaler */
1020:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmp = RCC->CFGR & CFGR_PPRE2_Set_Mask;
 1314              		.loc 1 1020 0
 1315 0104 184B     		ldr	r3, .L86
 1316 0106 5B68     		ldr	r3, [r3, #4]
 1317 0108 03F46053 		and	r3, r3, #14336
 1318 010c FB61     		str	r3, [r7, #28]
1021:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmp = tmp >> 11;
 1319              		.loc 1 1021 0
 1320 010e FB69     		ldr	r3, [r7, #28]
 1321 0110 4FEAD323 		lsr	r3, r3, #11
 1322 0114 FB61     		str	r3, [r7, #28]
1022:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   presc = APBAHBPrescTable[tmp];
 1323              		.loc 1 1022 0
 1324 0116 174A     		ldr	r2, .L86+12
 1325 0118 FB69     		ldr	r3, [r7, #28]
 1326 011a D318     		adds	r3, r2, r3
 1327 011c 1B78     		ldrb	r3, [r3, #0]
 1328 011e DBB2     		uxtb	r3, r3
 1329 0120 3B61     		str	r3, [r7, #16]
1023:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* PCLK2 clock frequency */
1024:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC_Clocks->PCLK2_Frequency = RCC_Clocks->HCLK_Frequency >> presc;
 1330              		.loc 1 1024 0
 1331 0122 7B68     		ldr	r3, [r7, #4]
 1332 0124 5A68     		ldr	r2, [r3, #4]
 1333 0126 3B69     		ldr	r3, [r7, #16]
 1334 0128 22FA03F2 		lsr	r2, r2, r3
 1335 012c 7B68     		ldr	r3, [r7, #4]
 1336 012e DA60     		str	r2, [r3, #12]
1025:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Get ADCCLK prescaler */
1026:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmp = RCC->CFGR & CFGR_ADCPRE_Set_Mask;
 1337              		.loc 1 1026 0
 1338 0130 0D4B     		ldr	r3, .L86
 1339 0132 5B68     		ldr	r3, [r3, #4]
 1340 0134 03F44043 		and	r3, r3, #49152
 1341 0138 FB61     		str	r3, [r7, #28]
1027:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmp = tmp >> 14;
 1342              		.loc 1 1027 0
 1343 013a FB69     		ldr	r3, [r7, #28]
 1344 013c 4FEA9333 		lsr	r3, r3, #14
 1345 0140 FB61     		str	r3, [r7, #28]
1028:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   presc = ADCPrescTable[tmp];
 1346              		.loc 1 1028 0
 1347 0142 0D4A     		ldr	r2, .L86+16
 1348 0144 FB69     		ldr	r3, [r7, #28]
 1349 0146 D318     		adds	r3, r2, r3
 1350 0148 1B78     		ldrb	r3, [r3, #0]
 1351 014a DBB2     		uxtb	r3, r3
 1352 014c 3B61     		str	r3, [r7, #16]
1029:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* ADCCLK clock frequency */
1030:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC_Clocks->ADCCLK_Frequency = RCC_Clocks->PCLK2_Frequency / presc;
 1353              		.loc 1 1030 0
 1354 014e 7B68     		ldr	r3, [r7, #4]
 1355 0150 DA68     		ldr	r2, [r3, #12]
 1356 0152 3B69     		ldr	r3, [r7, #16]
 1357 0154 B2FBF3F2 		udiv	r2, r2, r3
 1358 0158 7B68     		ldr	r3, [r7, #4]
 1359 015a 1A61     		str	r2, [r3, #16]
1031:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 1360              		.loc 1 1031 0
 1361 015c 07F12407 		add	r7, r7, #36
 1362 0160 BD46     		mov	sp, r7
 1363 0162 80BC     		pop	{r7}
 1364 0164 7047     		bx	lr
 1365              	.L87:
 1366 0166 00BF     		.align	2
 1367              	.L86:
 1368 0168 00100240 		.word	1073876992
 1369 016c 00127A00 		.word	8000000
 1370 0170 00093D00 		.word	4000000
 1371 0174 00000000 		.word	APBAHBPrescTable
 1372 0178 00000000 		.word	ADCPrescTable
 1373              		.cfi_endproc
 1374              	.LFE49:
 1376              		.section	.text.RCC_AHBPeriphClockCmd,"ax",%progbits
 1377              		.align	2
 1378              		.global	RCC_AHBPeriphClockCmd
 1379              		.thumb
 1380              		.thumb_func
 1382              	RCC_AHBPeriphClockCmd:
 1383              	.LFB50:
1032:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
1033:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
1034:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the AHB peripheral clock.
1035:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_AHBPeriph: specifies the AHB peripheral to gates its clock.
1036:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   
1037:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be any combination
1038:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   of the following values:        
1039:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_DMA1
1040:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_DMA2
1041:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_SRAM
1042:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_FLITF
1043:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_CRC
1044:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_OTG_FS    
1045:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_ETH_MAC   
1046:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_ETH_MAC_Tx
1047:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_ETH_MAC_Rx
1048:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * 
1049:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be any combination of the 
1050:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   following values:        
1051:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_DMA1
1052:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_DMA2
1053:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_SRAM
1054:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_FLITF
1055:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_CRC
1056:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_FSMC
1057:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_SDIO
1058:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   
1059:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @note SRAM and FLITF clock can be disabled only during sleep mode.
1060:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
1061:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1062:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
1063:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
1064:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_AHBPeriphClockCmd(uint32_t RCC_AHBPeriph, FunctionalState NewState)
1065:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 1384              		.loc 1 1065 0
 1385              		.cfi_startproc
 1386              		@ args = 0, pretend = 0, frame = 8
 1387              		@ frame_needed = 1, uses_anonymous_args = 0
 1388              		@ link register save eliminated.
 1389 0000 80B4     		push	{r7}
 1390              	.LCFI61:
 1391              		.cfi_def_cfa_offset 4
 1392              		.cfi_offset 7, -4
 1393 0002 83B0     		sub	sp, sp, #12
 1394              	.LCFI62:
 1395              		.cfi_def_cfa_offset 16
 1396 0004 00AF     		add	r7, sp, #0
 1397              	.LCFI63:
 1398              		.cfi_def_cfa_register 7
 1399 0006 7860     		str	r0, [r7, #4]
 1400 0008 0B46     		mov	r3, r1
 1401 000a FB70     		strb	r3, [r7, #3]
1066:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1067:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_AHB_PERIPH(RCC_AHBPeriph));
1068:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1069:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
1070:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
 1402              		.loc 1 1070 0
 1403 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1404 000e 002B     		cmp	r3, #0
 1405 0010 06D0     		beq	.L89
1071:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   {
1072:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****     RCC->AHBENR |= RCC_AHBPeriph;
 1406              		.loc 1 1072 0
 1407 0012 0A4B     		ldr	r3, .L91
 1408 0014 094A     		ldr	r2, .L91
 1409 0016 5169     		ldr	r1, [r2, #20]
 1410 0018 7A68     		ldr	r2, [r7, #4]
 1411 001a 0A43     		orrs	r2, r2, r1
 1412 001c 5A61     		str	r2, [r3, #20]
 1413 001e 07E0     		b	.L88
 1414              	.L89:
1073:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   }
1074:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   else
1075:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   {
1076:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****     RCC->AHBENR &= ~RCC_AHBPeriph;
 1415              		.loc 1 1076 0
 1416 0020 064B     		ldr	r3, .L91
 1417 0022 064A     		ldr	r2, .L91
 1418 0024 5169     		ldr	r1, [r2, #20]
 1419 0026 7A68     		ldr	r2, [r7, #4]
 1420 0028 6FEA0202 		mvn	r2, r2
 1421 002c 0A40     		ands	r2, r2, r1
 1422 002e 5A61     		str	r2, [r3, #20]
 1423              	.L88:
1077:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   }
1078:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 1424              		.loc 1 1078 0
 1425 0030 07F10C07 		add	r7, r7, #12
 1426 0034 BD46     		mov	sp, r7
 1427 0036 80BC     		pop	{r7}
 1428 0038 7047     		bx	lr
 1429              	.L92:
 1430 003a 00BF     		.align	2
 1431              	.L91:
 1432 003c 00100240 		.word	1073876992
 1433              		.cfi_endproc
 1434              	.LFE50:
 1436              		.section	.text.RCC_APB2PeriphClockCmd,"ax",%progbits
 1437              		.align	2
 1438              		.global	RCC_APB2PeriphClockCmd
 1439              		.thumb
 1440              		.thumb_func
 1442              	RCC_APB2PeriphClockCmd:
 1443              	.LFB51:
1079:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
1080:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
1081:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the High Speed APB (APB2) peripheral clock.
1082:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_APB2Periph: specifies the APB2 peripheral to gates its clock.
1083:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be any combination of the following values:
1084:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_APB2Periph_AFIO, RCC_APB2Periph_GPIOA, RCC_APB2Periph_GPIOB,
1085:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_GPIOC, RCC_APB2Periph_GPIOD, RCC_APB2Periph_GPIOE,
1086:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_GPIOF, RCC_APB2Periph_GPIOG, RCC_APB2Periph_ADC1,
1087:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_ADC2, RCC_APB2Periph_TIM1, RCC_APB2Periph_SPI1,
1088:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_TIM8, RCC_APB2Periph_USART1, RCC_APB2Periph_ADC3,
1089:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_TIM15, RCC_APB2Periph_TIM16, RCC_APB2Periph_TIM17,
1090:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_TIM9, RCC_APB2Periph_TIM10, RCC_APB2Periph_TIM11     
1091:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
1092:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1093:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
1094:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
1095:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_APB2PeriphClockCmd(uint32_t RCC_APB2Periph, FunctionalState NewState)
1096:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 1444              		.loc 1 1096 0
 1445              		.cfi_startproc
 1446              		@ args = 0, pretend = 0, frame = 8
 1447              		@ frame_needed = 1, uses_anonymous_args = 0
 1448              		@ link register save eliminated.
 1449 0000 80B4     		push	{r7}
 1450              	.LCFI64:
 1451              		.cfi_def_cfa_offset 4
 1452              		.cfi_offset 7, -4
 1453 0002 83B0     		sub	sp, sp, #12
 1454              	.LCFI65:
 1455              		.cfi_def_cfa_offset 16
 1456 0004 00AF     		add	r7, sp, #0
 1457              	.LCFI66:
 1458              		.cfi_def_cfa_register 7
 1459 0006 7860     		str	r0, [r7, #4]
 1460 0008 0B46     		mov	r3, r1
 1461 000a FB70     		strb	r3, [r7, #3]
1097:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1098:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_APB2_PERIPH(RCC_APB2Periph));
1099:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1100:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
 1462              		.loc 1 1100 0
 1463 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1464 000e 002B     		cmp	r3, #0
 1465 0010 06D0     		beq	.L94
1101:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   {
1102:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****     RCC->APB2ENR |= RCC_APB2Periph;
 1466              		.loc 1 1102 0
 1467 0012 0A4B     		ldr	r3, .L96
 1468 0014 094A     		ldr	r2, .L96
 1469 0016 9169     		ldr	r1, [r2, #24]
 1470 0018 7A68     		ldr	r2, [r7, #4]
 1471 001a 0A43     		orrs	r2, r2, r1
 1472 001c 9A61     		str	r2, [r3, #24]
 1473 001e 07E0     		b	.L93
 1474              	.L94:
1103:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   }
1104:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   else
1105:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   {
1106:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****     RCC->APB2ENR &= ~RCC_APB2Periph;
 1475              		.loc 1 1106 0
 1476 0020 064B     		ldr	r3, .L96
 1477 0022 064A     		ldr	r2, .L96
 1478 0024 9169     		ldr	r1, [r2, #24]
 1479 0026 7A68     		ldr	r2, [r7, #4]
 1480 0028 6FEA0202 		mvn	r2, r2
 1481 002c 0A40     		ands	r2, r2, r1
 1482 002e 9A61     		str	r2, [r3, #24]
 1483              	.L93:
1107:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   }
1108:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 1484              		.loc 1 1108 0
 1485 0030 07F10C07 		add	r7, r7, #12
 1486 0034 BD46     		mov	sp, r7
 1487 0036 80BC     		pop	{r7}
 1488 0038 7047     		bx	lr
 1489              	.L97:
 1490 003a 00BF     		.align	2
 1491              	.L96:
 1492 003c 00100240 		.word	1073876992
 1493              		.cfi_endproc
 1494              	.LFE51:
 1496              		.section	.text.RCC_APB1PeriphClockCmd,"ax",%progbits
 1497              		.align	2
 1498              		.global	RCC_APB1PeriphClockCmd
 1499              		.thumb
 1500              		.thumb_func
 1502              	RCC_APB1PeriphClockCmd:
 1503              	.LFB52:
1109:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
1110:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
1111:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the Low Speed APB (APB1) peripheral clock.
1112:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_APB1Periph: specifies the APB1 peripheral to gates its clock.
1113:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be any combination of the following values:
1114:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_APB1Periph_TIM2, RCC_APB1Periph_TIM3, RCC_APB1Periph_TIM4,
1115:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_TIM5, RCC_APB1Periph_TIM6, RCC_APB1Periph_TIM7,
1116:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_WWDG, RCC_APB1Periph_SPI2, RCC_APB1Periph_SPI3,
1117:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_USART2, RCC_APB1Periph_USART3, RCC_APB1Periph_USART4, 
1118:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_USART5, RCC_APB1Periph_I2C1, RCC_APB1Periph_I2C2,
1119:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_USB, RCC_APB1Periph_CAN1, RCC_APB1Periph_BKP,
1120:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_PWR, RCC_APB1Periph_DAC, RCC_APB1Periph_CEC,
1121:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_TIM12, RCC_APB1Periph_TIM13, RCC_APB1Periph_TIM14
1122:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
1123:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1124:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
1125:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
1126:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_APB1PeriphClockCmd(uint32_t RCC_APB1Periph, FunctionalState NewState)
1127:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 1504              		.loc 1 1127 0
 1505              		.cfi_startproc
 1506              		@ args = 0, pretend = 0, frame = 8
 1507              		@ frame_needed = 1, uses_anonymous_args = 0
 1508              		@ link register save eliminated.
 1509 0000 80B4     		push	{r7}
 1510              	.LCFI67:
 1511              		.cfi_def_cfa_offset 4
 1512              		.cfi_offset 7, -4
 1513 0002 83B0     		sub	sp, sp, #12
 1514              	.LCFI68:
 1515              		.cfi_def_cfa_offset 16
 1516 0004 00AF     		add	r7, sp, #0
 1517              	.LCFI69:
 1518              		.cfi_def_cfa_register 7
 1519 0006 7860     		str	r0, [r7, #4]
 1520 0008 0B46     		mov	r3, r1
 1521 000a FB70     		strb	r3, [r7, #3]
1128:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1129:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_APB1_PERIPH(RCC_APB1Periph));
1130:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1131:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
 1522              		.loc 1 1131 0
 1523 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1524 000e 002B     		cmp	r3, #0
 1525 0010 06D0     		beq	.L99
1132:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   {
1133:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****     RCC->APB1ENR |= RCC_APB1Periph;
 1526              		.loc 1 1133 0
 1527 0012 0A4B     		ldr	r3, .L101
 1528 0014 094A     		ldr	r2, .L101
 1529 0016 D169     		ldr	r1, [r2, #28]
 1530 0018 7A68     		ldr	r2, [r7, #4]
 1531 001a 0A43     		orrs	r2, r2, r1
 1532 001c DA61     		str	r2, [r3, #28]
 1533 001e 07E0     		b	.L98
 1534              	.L99:
1134:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   }
1135:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   else
1136:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   {
1137:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****     RCC->APB1ENR &= ~RCC_APB1Periph;
 1535              		.loc 1 1137 0
 1536 0020 064B     		ldr	r3, .L101
 1537 0022 064A     		ldr	r2, .L101
 1538 0024 D169     		ldr	r1, [r2, #28]
 1539 0026 7A68     		ldr	r2, [r7, #4]
 1540 0028 6FEA0202 		mvn	r2, r2
 1541 002c 0A40     		ands	r2, r2, r1
 1542 002e DA61     		str	r2, [r3, #28]
 1543              	.L98:
1138:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   }
1139:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 1544              		.loc 1 1139 0
 1545 0030 07F10C07 		add	r7, r7, #12
 1546 0034 BD46     		mov	sp, r7
 1547 0036 80BC     		pop	{r7}
 1548 0038 7047     		bx	lr
 1549              	.L102:
 1550 003a 00BF     		.align	2
 1551              	.L101:
 1552 003c 00100240 		.word	1073876992
 1553              		.cfi_endproc
 1554              	.LFE52:
 1556              		.section	.text.RCC_APB2PeriphResetCmd,"ax",%progbits
 1557              		.align	2
 1558              		.global	RCC_APB2PeriphResetCmd
 1559              		.thumb
 1560              		.thumb_func
 1562              	RCC_APB2PeriphResetCmd:
 1563              	.LFB53:
1140:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
1141:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
1142:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
1143:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Forces or releases AHB peripheral reset.
1144:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @note   This function applies only to STM32 Connectivity line devices.
1145:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_AHBPeriph: specifies the AHB peripheral to reset.
1146:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be any combination of the following values:
1147:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_OTG_FS 
1148:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_ETH_MAC
1149:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified peripheral reset.
1150:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1151:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
1152:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
1153:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_AHBPeriphResetCmd(uint32_t RCC_AHBPeriph, FunctionalState NewState)
1154:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
1155:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1156:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_AHB_PERIPH_RESET(RCC_AHBPeriph));
1157:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1158:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
1159:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
1160:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   {
1161:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****     RCC->AHBRSTR |= RCC_AHBPeriph;
1162:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   }
1163:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   else
1164:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   {
1165:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****     RCC->AHBRSTR &= ~RCC_AHBPeriph;
1166:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   }
1167:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
1168:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
1169:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
1170:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
1171:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Forces or releases High Speed APB (APB2) peripheral reset.
1172:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_APB2Periph: specifies the APB2 peripheral to reset.
1173:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be any combination of the following values:
1174:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_APB2Periph_AFIO, RCC_APB2Periph_GPIOA, RCC_APB2Periph_GPIOB,
1175:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_GPIOC, RCC_APB2Periph_GPIOD, RCC_APB2Periph_GPIOE,
1176:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_GPIOF, RCC_APB2Periph_GPIOG, RCC_APB2Periph_ADC1,
1177:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_ADC2, RCC_APB2Periph_TIM1, RCC_APB2Periph_SPI1,
1178:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_TIM8, RCC_APB2Periph_USART1, RCC_APB2Periph_ADC3,
1179:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_TIM15, RCC_APB2Periph_TIM16, RCC_APB2Periph_TIM17,
1180:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_TIM9, RCC_APB2Periph_TIM10, RCC_APB2Periph_TIM11  
1181:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified peripheral reset.
1182:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1183:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
1184:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
1185:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_APB2PeriphResetCmd(uint32_t RCC_APB2Periph, FunctionalState NewState)
1186:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 1564              		.loc 1 1186 0
 1565              		.cfi_startproc
 1566              		@ args = 0, pretend = 0, frame = 8
 1567              		@ frame_needed = 1, uses_anonymous_args = 0
 1568              		@ link register save eliminated.
 1569 0000 80B4     		push	{r7}
 1570              	.LCFI70:
 1571              		.cfi_def_cfa_offset 4
 1572              		.cfi_offset 7, -4
 1573 0002 83B0     		sub	sp, sp, #12
 1574              	.LCFI71:
 1575              		.cfi_def_cfa_offset 16
 1576 0004 00AF     		add	r7, sp, #0
 1577              	.LCFI72:
 1578              		.cfi_def_cfa_register 7
 1579 0006 7860     		str	r0, [r7, #4]
 1580 0008 0B46     		mov	r3, r1
 1581 000a FB70     		strb	r3, [r7, #3]
1187:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1188:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_APB2_PERIPH(RCC_APB2Periph));
1189:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1190:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
 1582              		.loc 1 1190 0
 1583 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1584 000e 002B     		cmp	r3, #0
 1585 0010 06D0     		beq	.L104
1191:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   {
1192:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****     RCC->APB2RSTR |= RCC_APB2Periph;
 1586              		.loc 1 1192 0
 1587 0012 0A4B     		ldr	r3, .L106
 1588 0014 094A     		ldr	r2, .L106
 1589 0016 D168     		ldr	r1, [r2, #12]
 1590 0018 7A68     		ldr	r2, [r7, #4]
 1591 001a 0A43     		orrs	r2, r2, r1
 1592 001c DA60     		str	r2, [r3, #12]
 1593 001e 07E0     		b	.L103
 1594              	.L104:
1193:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   }
1194:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   else
1195:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   {
1196:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****     RCC->APB2RSTR &= ~RCC_APB2Periph;
 1595              		.loc 1 1196 0
 1596 0020 064B     		ldr	r3, .L106
 1597 0022 064A     		ldr	r2, .L106
 1598 0024 D168     		ldr	r1, [r2, #12]
 1599 0026 7A68     		ldr	r2, [r7, #4]
 1600 0028 6FEA0202 		mvn	r2, r2
 1601 002c 0A40     		ands	r2, r2, r1
 1602 002e DA60     		str	r2, [r3, #12]
 1603              	.L103:
1197:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   }
1198:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 1604              		.loc 1 1198 0
 1605 0030 07F10C07 		add	r7, r7, #12
 1606 0034 BD46     		mov	sp, r7
 1607 0036 80BC     		pop	{r7}
 1608 0038 7047     		bx	lr
 1609              	.L107:
 1610 003a 00BF     		.align	2
 1611              	.L106:
 1612 003c 00100240 		.word	1073876992
 1613              		.cfi_endproc
 1614              	.LFE53:
 1616              		.section	.text.RCC_APB1PeriphResetCmd,"ax",%progbits
 1617              		.align	2
 1618              		.global	RCC_APB1PeriphResetCmd
 1619              		.thumb
 1620              		.thumb_func
 1622              	RCC_APB1PeriphResetCmd:
 1623              	.LFB54:
1199:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
1200:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
1201:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Forces or releases Low Speed APB (APB1) peripheral reset.
1202:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_APB1Periph: specifies the APB1 peripheral to reset.
1203:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be any combination of the following values:
1204:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_APB1Periph_TIM2, RCC_APB1Periph_TIM3, RCC_APB1Periph_TIM4,
1205:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_TIM5, RCC_APB1Periph_TIM6, RCC_APB1Periph_TIM7,
1206:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_WWDG, RCC_APB1Periph_SPI2, RCC_APB1Periph_SPI3,
1207:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_USART2, RCC_APB1Periph_USART3, RCC_APB1Periph_USART4, 
1208:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_USART5, RCC_APB1Periph_I2C1, RCC_APB1Periph_I2C2,
1209:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_USB, RCC_APB1Periph_CAN1, RCC_APB1Periph_BKP,
1210:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_PWR, RCC_APB1Periph_DAC, RCC_APB1Periph_CEC,
1211:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_TIM12, RCC_APB1Periph_TIM13, RCC_APB1Periph_TIM14  
1212:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
1213:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1214:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
1215:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
1216:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_APB1PeriphResetCmd(uint32_t RCC_APB1Periph, FunctionalState NewState)
1217:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 1624              		.loc 1 1217 0
 1625              		.cfi_startproc
 1626              		@ args = 0, pretend = 0, frame = 8
 1627              		@ frame_needed = 1, uses_anonymous_args = 0
 1628              		@ link register save eliminated.
 1629 0000 80B4     		push	{r7}
 1630              	.LCFI73:
 1631              		.cfi_def_cfa_offset 4
 1632              		.cfi_offset 7, -4
 1633 0002 83B0     		sub	sp, sp, #12
 1634              	.LCFI74:
 1635              		.cfi_def_cfa_offset 16
 1636 0004 00AF     		add	r7, sp, #0
 1637              	.LCFI75:
 1638              		.cfi_def_cfa_register 7
 1639 0006 7860     		str	r0, [r7, #4]
 1640 0008 0B46     		mov	r3, r1
 1641 000a FB70     		strb	r3, [r7, #3]
1218:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1219:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_APB1_PERIPH(RCC_APB1Periph));
1220:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1221:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
 1642              		.loc 1 1221 0
 1643 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1644 000e 002B     		cmp	r3, #0
 1645 0010 06D0     		beq	.L109
1222:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   {
1223:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****     RCC->APB1RSTR |= RCC_APB1Periph;
 1646              		.loc 1 1223 0
 1647 0012 0A4B     		ldr	r3, .L111
 1648 0014 094A     		ldr	r2, .L111
 1649 0016 1169     		ldr	r1, [r2, #16]
 1650 0018 7A68     		ldr	r2, [r7, #4]
 1651 001a 0A43     		orrs	r2, r2, r1
 1652 001c 1A61     		str	r2, [r3, #16]
 1653 001e 07E0     		b	.L108
 1654              	.L109:
1224:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   }
1225:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   else
1226:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   {
1227:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****     RCC->APB1RSTR &= ~RCC_APB1Periph;
 1655              		.loc 1 1227 0
 1656 0020 064B     		ldr	r3, .L111
 1657 0022 064A     		ldr	r2, .L111
 1658 0024 1169     		ldr	r1, [r2, #16]
 1659 0026 7A68     		ldr	r2, [r7, #4]
 1660 0028 6FEA0202 		mvn	r2, r2
 1661 002c 0A40     		ands	r2, r2, r1
 1662 002e 1A61     		str	r2, [r3, #16]
 1663              	.L108:
1228:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   }
1229:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 1664              		.loc 1 1229 0
 1665 0030 07F10C07 		add	r7, r7, #12
 1666 0034 BD46     		mov	sp, r7
 1667 0036 80BC     		pop	{r7}
 1668 0038 7047     		bx	lr
 1669              	.L112:
 1670 003a 00BF     		.align	2
 1671              	.L111:
 1672 003c 00100240 		.word	1073876992
 1673              		.cfi_endproc
 1674              	.LFE54:
 1676              		.section	.text.RCC_BackupResetCmd,"ax",%progbits
 1677              		.align	2
 1678              		.global	RCC_BackupResetCmd
 1679              		.thumb
 1680              		.thumb_func
 1682              	RCC_BackupResetCmd:
 1683              	.LFB55:
1230:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
1231:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
1232:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Forces or releases the Backup domain reset.
1233:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the Backup domain reset.
1234:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1235:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
1236:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
1237:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_BackupResetCmd(FunctionalState NewState)
1238:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 1684              		.loc 1 1238 0
 1685              		.cfi_startproc
 1686              		@ args = 0, pretend = 0, frame = 8
 1687              		@ frame_needed = 1, uses_anonymous_args = 0
 1688              		@ link register save eliminated.
 1689 0000 80B4     		push	{r7}
 1690              	.LCFI76:
 1691              		.cfi_def_cfa_offset 4
 1692              		.cfi_offset 7, -4
 1693 0002 83B0     		sub	sp, sp, #12
 1694              	.LCFI77:
 1695              		.cfi_def_cfa_offset 16
 1696 0004 00AF     		add	r7, sp, #0
 1697              	.LCFI78:
 1698              		.cfi_def_cfa_register 7
 1699 0006 0346     		mov	r3, r0
 1700 0008 FB71     		strb	r3, [r7, #7]
1239:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1240:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1241:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) BDCR_BDRST_BB = (uint32_t)NewState;
 1701              		.loc 1 1241 0
 1702 000a 044B     		ldr	r3, .L114
 1703 000c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1704 000e 1A60     		str	r2, [r3, #0]
1242:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 1705              		.loc 1 1242 0
 1706 0010 07F10C07 		add	r7, r7, #12
 1707 0014 BD46     		mov	sp, r7
 1708 0016 80BC     		pop	{r7}
 1709 0018 7047     		bx	lr
 1710              	.L115:
 1711 001a 00BF     		.align	2
 1712              	.L114:
 1713 001c 40044242 		.word	1111622720
 1714              		.cfi_endproc
 1715              	.LFE55:
 1717              		.section	.text.RCC_ClockSecuritySystemCmd,"ax",%progbits
 1718              		.align	2
 1719              		.global	RCC_ClockSecuritySystemCmd
 1720              		.thumb
 1721              		.thumb_func
 1723              	RCC_ClockSecuritySystemCmd:
 1724              	.LFB56:
1243:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
1244:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
1245:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the Clock Security System.
1246:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the Clock Security System..
1247:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1248:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
1249:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
1250:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_ClockSecuritySystemCmd(FunctionalState NewState)
1251:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 1725              		.loc 1 1251 0
 1726              		.cfi_startproc
 1727              		@ args = 0, pretend = 0, frame = 8
 1728              		@ frame_needed = 1, uses_anonymous_args = 0
 1729              		@ link register save eliminated.
 1730 0000 80B4     		push	{r7}
 1731              	.LCFI79:
 1732              		.cfi_def_cfa_offset 4
 1733              		.cfi_offset 7, -4
 1734 0002 83B0     		sub	sp, sp, #12
 1735              	.LCFI80:
 1736              		.cfi_def_cfa_offset 16
 1737 0004 00AF     		add	r7, sp, #0
 1738              	.LCFI81:
 1739              		.cfi_def_cfa_register 7
 1740 0006 0346     		mov	r3, r0
 1741 0008 FB71     		strb	r3, [r7, #7]
1252:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1253:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1254:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CR_CSSON_BB = (uint32_t)NewState;
 1742              		.loc 1 1254 0
 1743 000a 044B     		ldr	r3, .L117
 1744 000c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1745 000e 1A60     		str	r2, [r3, #0]
1255:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 1746              		.loc 1 1255 0
 1747 0010 07F10C07 		add	r7, r7, #12
 1748 0014 BD46     		mov	sp, r7
 1749 0016 80BC     		pop	{r7}
 1750 0018 7047     		bx	lr
 1751              	.L118:
 1752 001a 00BF     		.align	2
 1753              	.L117:
 1754 001c 4C004242 		.word	1111621708
 1755              		.cfi_endproc
 1756              	.LFE56:
 1758              		.section	.text.RCC_MCOConfig,"ax",%progbits
 1759              		.align	2
 1760              		.global	RCC_MCOConfig
 1761              		.thumb
 1762              		.thumb_func
 1764              	RCC_MCOConfig:
 1765              	.LFB57:
1256:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
1257:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
1258:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Selects the clock source to output on MCO pin.
1259:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_MCO: specifies the clock source to output.
1260:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   
1261:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be one of the
1262:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   following values:       
1263:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_NoClock: No clock selected
1264:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_SYSCLK: System clock selected
1265:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_HSI: HSI oscillator clock selected
1266:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_HSE: HSE oscillator clock selected
1267:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_PLLCLK_Div2: PLL clock divided by 2 selected
1268:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_PLL2CLK: PLL2 clock selected                     
1269:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_PLL3CLK_Div2: PLL3 clock divided by 2 selected   
1270:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_XT1: External 3-25 MHz oscillator clock selected  
1271:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_PLL3CLK: PLL3 clock selected 
1272:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * 
1273:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   For  @b other_STM32_devices, this parameter can be one of the following values:        
1274:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_NoClock: No clock selected
1275:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_SYSCLK: System clock selected
1276:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_HSI: HSI oscillator clock selected
1277:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_HSE: HSE oscillator clock selected
1278:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_PLLCLK_Div2: PLL clock divided by 2 selected
1279:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   
1280:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
1281:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
1282:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_MCOConfig(uint8_t RCC_MCO)
1283:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 1766              		.loc 1 1283 0
 1767              		.cfi_startproc
 1768              		@ args = 0, pretend = 0, frame = 8
 1769              		@ frame_needed = 1, uses_anonymous_args = 0
 1770              		@ link register save eliminated.
 1771 0000 80B4     		push	{r7}
 1772              	.LCFI82:
 1773              		.cfi_def_cfa_offset 4
 1774              		.cfi_offset 7, -4
 1775 0002 83B0     		sub	sp, sp, #12
 1776              	.LCFI83:
 1777              		.cfi_def_cfa_offset 16
 1778 0004 00AF     		add	r7, sp, #0
 1779              	.LCFI84:
 1780              		.cfi_def_cfa_register 7
 1781 0006 0346     		mov	r3, r0
 1782 0008 FB71     		strb	r3, [r7, #7]
1284:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1285:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_MCO(RCC_MCO));
1286:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
1287:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Perform Byte access to MCO bits to select the MCO source */
1288:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *(__IO uint8_t *) CFGR_BYTE4_ADDRESS = RCC_MCO;
 1783              		.loc 1 1288 0
 1784 000a 044B     		ldr	r3, .L120
 1785 000c FA79     		ldrb	r2, [r7, #7]
 1786 000e 1A70     		strb	r2, [r3, #0]
1289:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 1787              		.loc 1 1289 0
 1788 0010 07F10C07 		add	r7, r7, #12
 1789 0014 BD46     		mov	sp, r7
 1790 0016 80BC     		pop	{r7}
 1791 0018 7047     		bx	lr
 1792              	.L121:
 1793 001a 00BF     		.align	2
 1794              	.L120:
 1795 001c 07100240 		.word	1073876999
 1796              		.cfi_endproc
 1797              	.LFE57:
 1799              		.section	.text.RCC_GetFlagStatus,"ax",%progbits
 1800              		.align	2
 1801              		.global	RCC_GetFlagStatus
 1802              		.thumb
 1803              		.thumb_func
 1805              	RCC_GetFlagStatus:
 1806              	.LFB58:
1290:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
1291:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
1292:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Checks whether the specified RCC flag is set or not.
1293:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_FLAG: specifies the flag to check.
1294:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   
1295:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be one of the
1296:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   following values:
1297:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_HSIRDY: HSI oscillator clock ready
1298:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_HSERDY: HSE oscillator clock ready
1299:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PLLRDY: PLL clock ready
1300:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PLL2RDY: PLL2 clock ready      
1301:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PLL3RDY: PLL3 clock ready                           
1302:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_LSERDY: LSE oscillator clock ready
1303:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_LSIRDY: LSI oscillator clock ready
1304:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PINRST: Pin reset
1305:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PORRST: POR/PDR reset
1306:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_SFTRST: Software reset
1307:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_IWDGRST: Independent Watchdog reset
1308:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_WWDGRST: Window Watchdog reset
1309:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_LPWRRST: Low Power reset
1310:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * 
1311:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be one of the following values:        
1312:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_HSIRDY: HSI oscillator clock ready
1313:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_HSERDY: HSE oscillator clock ready
1314:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PLLRDY: PLL clock ready
1315:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_LSERDY: LSE oscillator clock ready
1316:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_LSIRDY: LSI oscillator clock ready
1317:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PINRST: Pin reset
1318:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PORRST: POR/PDR reset
1319:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_SFTRST: Software reset
1320:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_IWDGRST: Independent Watchdog reset
1321:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_WWDGRST: Window Watchdog reset
1322:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_LPWRRST: Low Power reset
1323:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   
1324:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval The new state of RCC_FLAG (SET or RESET).
1325:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
1326:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** FlagStatus RCC_GetFlagStatus(uint8_t RCC_FLAG)
1327:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 1807              		.loc 1 1327 0
 1808              		.cfi_startproc
 1809              		@ args = 0, pretend = 0, frame = 24
 1810              		@ frame_needed = 1, uses_anonymous_args = 0
 1811              		@ link register save eliminated.
 1812 0000 80B4     		push	{r7}
 1813              	.LCFI85:
 1814              		.cfi_def_cfa_offset 4
 1815              		.cfi_offset 7, -4
 1816 0002 87B0     		sub	sp, sp, #28
 1817              	.LCFI86:
 1818              		.cfi_def_cfa_offset 32
 1819 0004 00AF     		add	r7, sp, #0
 1820              	.LCFI87:
 1821              		.cfi_def_cfa_register 7
 1822 0006 0346     		mov	r3, r0
 1823 0008 FB71     		strb	r3, [r7, #7]
1328:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   uint32_t tmp = 0;
 1824              		.loc 1 1328 0
 1825 000a 4FF00003 		mov	r3, #0
 1826 000e FB60     		str	r3, [r7, #12]
1329:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   uint32_t statusreg = 0;
 1827              		.loc 1 1329 0
 1828 0010 4FF00003 		mov	r3, #0
 1829 0014 7B61     		str	r3, [r7, #20]
1330:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   FlagStatus bitstatus = RESET;
 1830              		.loc 1 1330 0
 1831 0016 4FF00003 		mov	r3, #0
 1832 001a FB74     		strb	r3, [r7, #19]
1331:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1332:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_FLAG(RCC_FLAG));
1333:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
1334:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Get the RCC register index */
1335:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmp = RCC_FLAG >> 5;
 1833              		.loc 1 1335 0
 1834 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1835 001e 4FEA5313 		lsr	r3, r3, #5
 1836 0022 DBB2     		uxtb	r3, r3
 1837 0024 FB60     		str	r3, [r7, #12]
1336:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   if (tmp == 1)               /* The flag to check is in CR register */
 1838              		.loc 1 1336 0
 1839 0026 FB68     		ldr	r3, [r7, #12]
 1840 0028 012B     		cmp	r3, #1
 1841 002a 03D1     		bne	.L123
1337:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   {
1338:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****     statusreg = RCC->CR;
 1842              		.loc 1 1338 0
 1843 002c 134B     		ldr	r3, .L129
 1844 002e 1B68     		ldr	r3, [r3, #0]
 1845 0030 7B61     		str	r3, [r7, #20]
 1846 0032 09E0     		b	.L124
 1847              	.L123:
1339:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   }
1340:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   else if (tmp == 2)          /* The flag to check is in BDCR register */
 1848              		.loc 1 1340 0
 1849 0034 FB68     		ldr	r3, [r7, #12]
 1850 0036 022B     		cmp	r3, #2
 1851 0038 03D1     		bne	.L125
1341:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   {
1342:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****     statusreg = RCC->BDCR;
 1852              		.loc 1 1342 0
 1853 003a 104B     		ldr	r3, .L129
 1854 003c 1B6A     		ldr	r3, [r3, #32]
 1855 003e 7B61     		str	r3, [r7, #20]
 1856 0040 02E0     		b	.L124
 1857              	.L125:
1343:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   }
1344:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   else                       /* The flag to check is in CSR register */
1345:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   {
1346:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****     statusreg = RCC->CSR;
 1858              		.loc 1 1346 0
 1859 0042 0E4B     		ldr	r3, .L129
 1860 0044 5B6A     		ldr	r3, [r3, #36]
 1861 0046 7B61     		str	r3, [r7, #20]
 1862              	.L124:
1347:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   }
1348:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
1349:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Get the flag position */
1350:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   tmp = RCC_FLAG & FLAG_Mask;
 1863              		.loc 1 1350 0
 1864 0048 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1865 004a 03F01F03 		and	r3, r3, #31
 1866 004e FB60     		str	r3, [r7, #12]
1351:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   if ((statusreg & ((uint32_t)1 << tmp)) != (uint32_t)RESET)
 1867              		.loc 1 1351 0
 1868 0050 FB68     		ldr	r3, [r7, #12]
 1869 0052 7A69     		ldr	r2, [r7, #20]
 1870 0054 22FA03F3 		lsr	r3, r2, r3
 1871 0058 03F00103 		and	r3, r3, #1
 1872 005c 002B     		cmp	r3, #0
 1873 005e 03D0     		beq	.L126
1352:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   {
1353:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****     bitstatus = SET;
 1874              		.loc 1 1353 0
 1875 0060 4FF00103 		mov	r3, #1
 1876 0064 FB74     		strb	r3, [r7, #19]
 1877 0066 02E0     		b	.L127
 1878              	.L126:
1354:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   }
1355:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   else
1356:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   {
1357:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****     bitstatus = RESET;
 1879              		.loc 1 1357 0
 1880 0068 4FF00003 		mov	r3, #0
 1881 006c FB74     		strb	r3, [r7, #19]
 1882              	.L127:
1358:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   }
1359:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
1360:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Return the flag status */
1361:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   return bitstatus;
 1883              		.loc 1 1361 0
 1884 006e FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
1362:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 1885              		.loc 1 1362 0
 1886 0070 1846     		mov	r0, r3
 1887 0072 07F11C07 		add	r7, r7, #28
 1888 0076 BD46     		mov	sp, r7
 1889 0078 80BC     		pop	{r7}
 1890 007a 7047     		bx	lr
 1891              	.L130:
 1892              		.align	2
 1893              	.L129:
 1894 007c 00100240 		.word	1073876992
 1895              		.cfi_endproc
 1896              	.LFE58:
 1898              		.section	.text.RCC_ClearFlag,"ax",%progbits
 1899              		.align	2
 1900              		.global	RCC_ClearFlag
 1901              		.thumb
 1902              		.thumb_func
 1904              	RCC_ClearFlag:
 1905              	.LFB59:
1363:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
1364:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
1365:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Clears the RCC reset flags.
1366:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @note   The reset flags are: RCC_FLAG_PINRST, RCC_FLAG_PORRST, RCC_FLAG_SFTRST,
1367:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   RCC_FLAG_IWDGRST, RCC_FLAG_WWDGRST, RCC_FLAG_LPWRRST
1368:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  None
1369:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
1370:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
1371:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_ClearFlag(void)
1372:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 1906              		.loc 1 1372 0
 1907              		.cfi_startproc
 1908              		@ args = 0, pretend = 0, frame = 0
 1909              		@ frame_needed = 1, uses_anonymous_args = 0
 1910              		@ link register save eliminated.
 1911 0000 80B4     		push	{r7}
 1912              	.LCFI88:
 1913              		.cfi_def_cfa_offset 4
 1914              		.cfi_offset 7, -4
 1915 0002 00AF     		add	r7, sp, #0
 1916              	.LCFI89:
 1917              		.cfi_def_cfa_register 7
1373:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Set RMVF bit to clear the reset flags */
1374:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   RCC->CSR |= CSR_RMVF_Set;
 1918              		.loc 1 1374 0
 1919 0004 044B     		ldr	r3, .L132
 1920 0006 044A     		ldr	r2, .L132
 1921 0008 526A     		ldr	r2, [r2, #36]
 1922 000a 42F08072 		orr	r2, r2, #16777216
 1923 000e 5A62     		str	r2, [r3, #36]
1375:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 1924              		.loc 1 1375 0
 1925 0010 BD46     		mov	sp, r7
 1926 0012 80BC     		pop	{r7}
 1927 0014 7047     		bx	lr
 1928              	.L133:
 1929 0016 00BF     		.align	2
 1930              	.L132:
 1931 0018 00100240 		.word	1073876992
 1932              		.cfi_endproc
 1933              	.LFE59:
 1935              		.section	.text.RCC_GetITStatus,"ax",%progbits
 1936              		.align	2
 1937              		.global	RCC_GetITStatus
 1938              		.thumb
 1939              		.thumb_func
 1941              	RCC_GetITStatus:
 1942              	.LFB60:
1376:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
1377:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
1378:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Checks whether the specified RCC interrupt has occurred or not.
1379:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_IT: specifies the RCC interrupt source to check.
1380:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   
1381:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be one of the
1382:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   following values:
1383:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
1384:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
1385:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
1386:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
1387:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
1388:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLL2RDY: PLL2 ready interrupt 
1389:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLL3RDY: PLL3 ready interrupt                      
1390:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_CSS: Clock Security System interrupt
1391:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * 
1392:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be one of the following values:        
1393:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
1394:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
1395:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
1396:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
1397:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
1398:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_CSS: Clock Security System interrupt
1399:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   
1400:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval The new state of RCC_IT (SET or RESET).
1401:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
1402:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** ITStatus RCC_GetITStatus(uint8_t RCC_IT)
1403:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 1943              		.loc 1 1403 0
 1944              		.cfi_startproc
 1945              		@ args = 0, pretend = 0, frame = 16
 1946              		@ frame_needed = 1, uses_anonymous_args = 0
 1947              		@ link register save eliminated.
 1948 0000 80B4     		push	{r7}
 1949              	.LCFI90:
 1950              		.cfi_def_cfa_offset 4
 1951              		.cfi_offset 7, -4
 1952 0002 85B0     		sub	sp, sp, #20
 1953              	.LCFI91:
 1954              		.cfi_def_cfa_offset 24
 1955 0004 00AF     		add	r7, sp, #0
 1956              	.LCFI92:
 1957              		.cfi_def_cfa_register 7
 1958 0006 0346     		mov	r3, r0
 1959 0008 FB71     		strb	r3, [r7, #7]
1404:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   ITStatus bitstatus = RESET;
 1960              		.loc 1 1404 0
 1961 000a 4FF00003 		mov	r3, #0
 1962 000e FB73     		strb	r3, [r7, #15]
1405:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1406:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_GET_IT(RCC_IT));
1407:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
1408:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the status of the specified RCC interrupt */
1409:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   if ((RCC->CIR & RCC_IT) != (uint32_t)RESET)
 1963              		.loc 1 1409 0
 1964 0010 094B     		ldr	r3, .L138
 1965 0012 9A68     		ldr	r2, [r3, #8]
 1966 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1967 0016 1340     		ands	r3, r3, r2
 1968 0018 002B     		cmp	r3, #0
 1969 001a 03D0     		beq	.L135
1410:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   {
1411:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****     bitstatus = SET;
 1970              		.loc 1 1411 0
 1971 001c 4FF00103 		mov	r3, #1
 1972 0020 FB73     		strb	r3, [r7, #15]
 1973 0022 02E0     		b	.L136
 1974              	.L135:
1412:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   }
1413:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   else
1414:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   {
1415:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****     bitstatus = RESET;
 1975              		.loc 1 1415 0
 1976 0024 4FF00003 		mov	r3, #0
 1977 0028 FB73     		strb	r3, [r7, #15]
 1978              	.L136:
1416:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   }
1417:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
1418:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Return the RCC_IT status */
1419:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   return  bitstatus;
 1979              		.loc 1 1419 0
 1980 002a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1420:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 1981              		.loc 1 1420 0
 1982 002c 1846     		mov	r0, r3
 1983 002e 07F11407 		add	r7, r7, #20
 1984 0032 BD46     		mov	sp, r7
 1985 0034 80BC     		pop	{r7}
 1986 0036 7047     		bx	lr
 1987              	.L139:
 1988              		.align	2
 1989              	.L138:
 1990 0038 00100240 		.word	1073876992
 1991              		.cfi_endproc
 1992              	.LFE60:
 1994              		.section	.text.RCC_ClearITPendingBit,"ax",%progbits
 1995              		.align	2
 1996              		.global	RCC_ClearITPendingBit
 1997              		.thumb
 1998              		.thumb_func
 2000              	RCC_ClearITPendingBit:
 2001              	.LFB61:
1421:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
1422:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** /**
1423:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @brief  Clears the RCC's interrupt pending bits.
1424:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @param  RCC_IT: specifies the interrupt pending bit to clear.
1425:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   
1426:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be any combination
1427:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   of the following values:
1428:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
1429:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
1430:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
1431:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
1432:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
1433:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLL2RDY: PLL2 ready interrupt 
1434:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLL3RDY: PLL3 ready interrupt                      
1435:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_CSS: Clock Security System interrupt
1436:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * 
1437:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be any combination of the
1438:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   following values:        
1439:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
1440:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
1441:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
1442:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
1443:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
1444:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *   
1445:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_CSS: Clock Security System interrupt
1446:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   * @retval None
1447:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   */
1448:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** void RCC_ClearITPendingBit(uint8_t RCC_IT)
1449:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** {
 2002              		.loc 1 1449 0
 2003              		.cfi_startproc
 2004              		@ args = 0, pretend = 0, frame = 8
 2005              		@ frame_needed = 1, uses_anonymous_args = 0
 2006              		@ link register save eliminated.
 2007 0000 80B4     		push	{r7}
 2008              	.LCFI93:
 2009              		.cfi_def_cfa_offset 4
 2010              		.cfi_offset 7, -4
 2011 0002 83B0     		sub	sp, sp, #12
 2012              	.LCFI94:
 2013              		.cfi_def_cfa_offset 16
 2014 0004 00AF     		add	r7, sp, #0
 2015              	.LCFI95:
 2016              		.cfi_def_cfa_register 7
 2017 0006 0346     		mov	r3, r0
 2018 0008 FB71     		strb	r3, [r7, #7]
1450:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1451:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_CLEAR_IT(RCC_IT));
1452:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** 
1453:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   /* Perform Byte access to RCC_CIR[23:16] bits to clear the selected interrupt
1454:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****      pending bits */
1455:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c ****   *(__IO uint8_t *) CIR_BYTE3_ADDRESS = RCC_IT;
 2019              		.loc 1 1455 0
 2020 000a 044B     		ldr	r3, .L141
 2021 000c FA79     		ldrb	r2, [r7, #7]
 2022 000e 1A70     		strb	r2, [r3, #0]
1456:../libs/StdPeripheralDriver/src/stm32f10x_rcc.c **** }
 2023              		.loc 1 1456 0
 2024 0010 07F10C07 		add	r7, r7, #12
 2025 0014 BD46     		mov	sp, r7
 2026 0016 80BC     		pop	{r7}
 2027 0018 7047     		bx	lr
 2028              	.L142:
 2029 001a 00BF     		.align	2
 2030              	.L141:
 2031 001c 0A100240 		.word	1073877002
 2032              		.cfi_endproc
 2033              	.LFE61:
 2035              		.text
 2036              	.Letext0:
 2037              		.file 2 "d:\\programs\\stm programs\\codebench\\bin\\../lib/gcc/arm-none-eabi/4.7.3/../../../../ar
 2038              		.file 3 "D:\\PROGRAMMING\\stm\\stm-discovery_test_project\\libs\\CMSIS/stm32f10x.h"
 2039              		.file 4 "D:\\PROGRAMMING\\stm\\stm-discovery_test_project\\libs\\StdPeripheralDriver\\inc/stm32f10
 2040              		.file 5 "D:\\PROGRAMMING\\stm\\stm-discovery_test_project\\libs\\CMSIS/core_cm3.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f10x_rcc.c
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:19     .data.APBAHBPrescTable:00000000 $d
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:22     .data.APBAHBPrescTable:00000000 APBAHBPrescTable
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:40     .data.ADCPrescTable:00000000 $d
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:43     .data.ADCPrescTable:00000000 ADCPrescTable
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:49     .text.RCC_DeInit:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:54     .text.RCC_DeInit:00000000 RCC_DeInit
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:116    .text.RCC_DeInit:0000005c $d
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:122    .text.RCC_HSEConfig:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:127    .text.RCC_HSEConfig:00000000 RCC_HSEConfig
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:194    .text.RCC_HSEConfig:00000058 $d
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:199    .text.RCC_WaitForHSEStartUp:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:204    .text.RCC_WaitForHSEStartUp:00000000 RCC_WaitForHSEStartUp
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:1805   .text.RCC_GetFlagStatus:00000000 RCC_GetFlagStatus
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:274    .text.RCC_AdjustHSICalibrationValue:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:279    .text.RCC_AdjustHSICalibrationValue:00000000 RCC_AdjustHSICalibrationValue
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:327    .text.RCC_AdjustHSICalibrationValue:0000003c $d
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:332    .text.RCC_HSICmd:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:337    .text.RCC_HSICmd:00000000 RCC_HSICmd
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:368    .text.RCC_HSICmd:0000001c $d
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:373    .text.RCC_PLLConfig:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:378    .text.RCC_PLLConfig:00000000 RCC_PLLConfig
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:427    .text.RCC_PLLConfig:0000003c $d
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:432    .text.RCC_PLLCmd:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:437    .text.RCC_PLLCmd:00000000 RCC_PLLCmd
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:468    .text.RCC_PLLCmd:0000001c $d
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:473    .text.RCC_PREDIV1Config:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:478    .text.RCC_PREDIV1Config:00000000 RCC_PREDIV1Config
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:528    .text.RCC_PREDIV1Config:00000040 $d
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:533    .text.RCC_SYSCLKConfig:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:538    .text.RCC_SYSCLKConfig:00000000 RCC_SYSCLKConfig
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:584    .text.RCC_SYSCLKConfig:00000034 $d
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:589    .text.RCC_GetSYSCLKSource:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:594    .text.RCC_GetSYSCLKSource:00000000 RCC_GetSYSCLKSource
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:622    .text.RCC_GetSYSCLKSource:00000018 $d
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:627    .text.RCC_HCLKConfig:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:632    .text.RCC_HCLKConfig:00000000 RCC_HCLKConfig
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:678    .text.RCC_HCLKConfig:00000034 $d
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:683    .text.RCC_PCLK1Config:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:688    .text.RCC_PCLK1Config:00000000 RCC_PCLK1Config
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:734    .text.RCC_PCLK1Config:00000034 $d
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:739    .text.RCC_PCLK2Config:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:744    .text.RCC_PCLK2Config:00000000 RCC_PCLK2Config
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:791    .text.RCC_PCLK2Config:00000038 $d
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:796    .text.RCC_ITConfig:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:801    .text.RCC_ITConfig:00000000 RCC_ITConfig
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:857    .text.RCC_ITConfig:00000048 $d
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:862    .text.RCC_USBCLKConfig:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:867    .text.RCC_USBCLKConfig:00000000 RCC_USBCLKConfig
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:897    .text.RCC_USBCLKConfig:00000018 $d
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:902    .text.RCC_ADCCLKConfig:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:907    .text.RCC_ADCCLKConfig:00000000 RCC_ADCCLKConfig
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:953    .text.RCC_ADCCLKConfig:00000034 $d
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:958    .text.RCC_LSEConfig:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:963    .text.RCC_LSEConfig:00000000 RCC_LSEConfig
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:1023   .text.RCC_LSEConfig:00000048 $d
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:1028   .text.RCC_LSICmd:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:1033   .text.RCC_LSICmd:00000000 RCC_LSICmd
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:1064   .text.RCC_LSICmd:0000001c $d
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:1069   .text.RCC_RTCCLKConfig:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:1074   .text.RCC_RTCCLKConfig:00000000 RCC_RTCCLKConfig
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:1107   .text.RCC_RTCCLKConfig:00000020 $d
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:1112   .text.RCC_RTCCLKCmd:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:1117   .text.RCC_RTCCLKCmd:00000000 RCC_RTCCLKCmd
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:1148   .text.RCC_RTCCLKCmd:0000001c $d
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:1153   .text.RCC_GetClocksFreq:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:1158   .text.RCC_GetClocksFreq:00000000 RCC_GetClocksFreq
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:1368   .text.RCC_GetClocksFreq:00000168 $d
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:1377   .text.RCC_AHBPeriphClockCmd:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:1382   .text.RCC_AHBPeriphClockCmd:00000000 RCC_AHBPeriphClockCmd
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:1432   .text.RCC_AHBPeriphClockCmd:0000003c $d
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:1437   .text.RCC_APB2PeriphClockCmd:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:1442   .text.RCC_APB2PeriphClockCmd:00000000 RCC_APB2PeriphClockCmd
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:1492   .text.RCC_APB2PeriphClockCmd:0000003c $d
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:1497   .text.RCC_APB1PeriphClockCmd:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:1502   .text.RCC_APB1PeriphClockCmd:00000000 RCC_APB1PeriphClockCmd
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:1552   .text.RCC_APB1PeriphClockCmd:0000003c $d
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:1557   .text.RCC_APB2PeriphResetCmd:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:1562   .text.RCC_APB2PeriphResetCmd:00000000 RCC_APB2PeriphResetCmd
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:1612   .text.RCC_APB2PeriphResetCmd:0000003c $d
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:1617   .text.RCC_APB1PeriphResetCmd:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:1622   .text.RCC_APB1PeriphResetCmd:00000000 RCC_APB1PeriphResetCmd
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:1672   .text.RCC_APB1PeriphResetCmd:0000003c $d
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:1677   .text.RCC_BackupResetCmd:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:1682   .text.RCC_BackupResetCmd:00000000 RCC_BackupResetCmd
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:1713   .text.RCC_BackupResetCmd:0000001c $d
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:1718   .text.RCC_ClockSecuritySystemCmd:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:1723   .text.RCC_ClockSecuritySystemCmd:00000000 RCC_ClockSecuritySystemCmd
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:1754   .text.RCC_ClockSecuritySystemCmd:0000001c $d
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:1759   .text.RCC_MCOConfig:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:1764   .text.RCC_MCOConfig:00000000 RCC_MCOConfig
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:1795   .text.RCC_MCOConfig:0000001c $d
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:1800   .text.RCC_GetFlagStatus:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:1894   .text.RCC_GetFlagStatus:0000007c $d
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:1899   .text.RCC_ClearFlag:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:1904   .text.RCC_ClearFlag:00000000 RCC_ClearFlag
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:1931   .text.RCC_ClearFlag:00000018 $d
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:1936   .text.RCC_GetITStatus:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:1941   .text.RCC_GetITStatus:00000000 RCC_GetITStatus
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:1990   .text.RCC_GetITStatus:00000038 $d
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:1995   .text.RCC_ClearITPendingBit:00000000 $t
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:2000   .text.RCC_ClearITPendingBit:00000000 RCC_ClearITPendingBit
C:\Users\6262~1\AppData\Local\Temp\ccVto88d.s:2031   .text.RCC_ClearITPendingBit:0000001c $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
